AC_INIT(pygtk, 1.99.5,
        [http://bugzilla.gnome.org/enter_bug.cgi?product=gnome-python&component=pygtk])
	
PYGTK_MAJOR_VERSION=1
PYGTK_MINOR_VERSION=99
PYGTK_MICRO_VERSION=5
PYGTK_VERSION=$PYGTK_MAJOR_VERSION.$PYGTK_MINOR_VERSION.$PYGTK_MICRO_VERSION

AC_DEFINE_UNQUOTED(PYGTK_MAJOR_VERSION, $PYGTK_MAJOR_VERSION, [PyGtk major version])
AC_DEFINE_UNQUOTED(PYGTK_MINOR_VERSION, $PYGTK_MINOR_VERSION, [PyGtk minor version])
AC_DEFINE_UNQUOTED(PYGTK_MICRO_VERSION, $PYGTK_MICRO_VERSION, [PyGtk macro version])

GLIB_REQUIRED_VERSION=1.3.11
ATK_REQUIRED_VERSION=0.7
PANGO_REQUIRED_VERSION=0.22
GTK_REQUIRED_VERSION=1.3.11
LIBGLADE_REQUIRED_VERSION=1.99.1

AC_CONFIG_SRCDIR([gtk/gtkmodule.c])
AM_CONFIG_HEADER(config.h)

AM_INIT_AUTOMAKE(AC_PACKAGE_NAME, AC_PACKAGE_VERSION)

dnl put the ACLOCAL flags in the makefile
ACLOCAL="$ACLOCAL $ACLOCAL_FLAGS"

AC_DISABLE_STATIC
AC_PROG_LIBTOOL

dnl AM_PATH_PYTHON(2.2)
AM_PATH_PYTHON
AC_MSG_CHECKING(for python >= 2.2b1)
prog="
import sys, string
minver = (2,2,0,'beta',1)
if sys.version_info < minver:
  sys.exit(1)
sys.exit(0)"
if $PYTHON -c "$prog" 1>&AC_FD_CC 2>&AC_FD_CC
then
  AC_MSG_RESULT(okay)
else
  AC_MSG_ERROR(too old)
fi


AM_CHECK_PYTHON_HEADERS(,[AC_MSG_ERROR(could not find Python headers)])

AC_ARG_ENABLE(thread,
  AC_HELP_STRING([--disable-thread], [Disable pygtk threading support]),,
  enable_thread=no)

AM_CHECK_PYMOD(thread,,,enable_thread=no)

AC_MSG_CHECKING(whether to enable threading in pygtk)
if test "x$enable_thread" != xno; then
  extra_mods=gthread
  AC_DEFINE(ENABLE_PYGTK_THREADING)
  AC_MSG_RESULT(yes)
else
  extra_mods=
  AC_MSG_RESULT(no)
fi

dnl glib
AM_PATH_GLIB_2_0($GLIB_REQUIRED_VERSION,,[AC_MSG_ERROR(maybe you want the gtk-gnome-1-2 branch?)],gobject)

dnl atk
PKG_CHECK_MODULES(ATK, atk >= $ATK_REQUIRED_VERSION,,[AC_MSG_ERROR(maybe you want the gtk-gnome-1-2 branch?)])
AC_SUBST(ATK_CFLAGS)
AC_SUBST(ATK_LIBS)

dnl pango
PKG_CHECK_MODULES(PANGO, pango >= $PANGO_REQUIRED_VERSION,,[AC_MSG_ERROR(maybe you want the gtk-gnome-1-2 branch?)])
AC_SUBST(PANGO_CFLAGS)
AC_SUBST(PANGO_LIBS)

dnl gtk+
AM_PATH_GTK_2_0($GTK_REQUIRED_VERSION,,[AC_MSG_ERROR(maybe you want the gtk-gnome-1-2 branch?)],$extra_mods)

dnl libglade
build_libglade=false
PKG_CHECK_MODULES(LIBGLADE, [libglade-2.0 >= $LIBGLADE_REQUIRED_VERSION],
  build_libglade=true,
  build_libglade=false)
AC_SUBST(LIBGLADE_CFLAGS)
AC_SUBST(LIBGLADE_LIBS)
AM_CONDITIONAL(BUILD_LIBGLADE, $build_libglade)

dnl AM_PATH_GDK_IMLIB(1.8, build_imlib=true, build_imlib=false)
dnl AM_CONDITIONAL(BUILD_IMLIB, $build_imlib)

dnl AM_PATH_GTKGL(build_gtkgl=true, build_gtkgl=false)
dnl AM_CONDITIONAL(BUILD_GTKGL, $build_gtkgl)


AC_ARG_ENABLE(numpy,
  AC_HELP_STRING([--disable-numpy], [Disable numeric python features]),,
  enable_numpy=yes)

dnl checks to see if Numeric Python is installed.
if test "x$enable_numpy" != xno; then
  save_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$CPPFLAGS $PYTHON_INCLUDES"
  AC_CHECK_HEADER(arrayobject.h,
    [AC_DEFINE(HAVE_NUMPY)
     AC_DEFINE(HAVE_ARRAYOBJECT_H)],
    [AC_CHECK_HEADER(Extensions/arrayobject.h,
      [AC_DEFINE(HAVE_NUMPY)
       AC_DEFINE(HAVE_EXTENSIONS_ARRAYOBJECT_H)],
      [AC_CHECK_HEADER(Numeric/arrayobject.h,
        [AC_DEFINE(HAVE_NUMPY)
         AC_DEFINE(HAVE_NUMERIC_ARRAYOBJECT_H)])])])
  CPPFLAGS="$save_CPPFLAGS"
fi

AC_CONFIG_FILES(
  Makefile
  pygtk-2.0.pc
  codegen/Makefile
  gtk/Makefile
  codegen/pygtk-codegen-2.0
  pygtk.spec)
AC_OUTPUT


