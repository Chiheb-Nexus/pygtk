;; -*- scheme -*-
; object definitions ...
(object Colormap
  (in-module Gdk)
  (parent Object (G))
  (c-name GdkColormap)
)

(object DragContext
  (in-module Gdk)
  (parent Object (G))
  (c-name GdkDragContext)
)

(object Drawable
  (in-module Gdk)
  (parent Object (G))
  (c-name GdkDrawable)
)

; this is fudged a little ...
(object Window
  (in-module Gdk)
  (parent Drawable (Gdk))
  (c-name GdkWindow)
)

(object GC
  (in-module Gdk)
  (parent Object (G))
  (c-name GdkGC)
)

(object Image
  (in-module Gdk)
  (parent Object (G))
  (c-name GdkImage)
)

(object Pixbuf
  (in-module Gdk)
  (parent Object (G))
  (c-name GdkPixbuf)
)

(object PixbufAnimation
  (in-module Gdk)
  (parent Object (G))
  (c-name GdkPixbufAnimation)
)

;; Enumerations and flags ...

(enum ColorContextMode
  (in-module Gdk)
  (c-name GdkColorContextMode)
  (value (name undefined) (c-name GDK_CC_MODE_UNDEFINED))
  (value (name bw) (c-name GDK_CC_MODE_BW))
  (value (name std-cmap) (c-name GDK_CC_MODE_STD_CMAP))
  (value (name true) (c-name GDK_CC_MODE_TRUE))
  (value (name my-gray) (c-name GDK_CC_MODE_MY_GRAY))
  (value (name palette) (c-name GDK_CC_MODE_PALETTE))
)

(enum CursorType
  (in-module Gdk)
  (c-name GdkCursorType)
;  (value (name #include) (c-name #include))
  (value (name gdk-cursor-is-pixmap) (c-name GDK_CURSOR_IS_PIXMAP))
)

(flags DragAction
  (in-module Gdk)
  (c-name GdkDragAction)
  (value (name default) (c-name GDK_ACTION_DEFAULT))
  (value (name copy) (c-name GDK_ACTION_COPY))
  (value (name move) (c-name GDK_ACTION_MOVE))
  (value (name link) (c-name GDK_ACTION_LINK))
  (value (name private) (c-name GDK_ACTION_PRIVATE))
  (value (name ask) (c-name GDK_ACTION_ASK))
)

(enum DragProtocol
  (in-module Gdk)
  (c-name GdkDragProtocol)
  (value (name motif) (c-name GDK_DRAG_PROTO_MOTIF))
  (value (name xdnd) (c-name GDK_DRAG_PROTO_XDND))
  (value (name rootwin) (c-name GDK_DRAG_PROTO_ROOTWIN))
  (value (name none) (c-name GDK_DRAG_PROTO_NONE))
  (value (name win32-dropfiles) (c-name GDK_DRAG_PROTO_WIN32_DROPFILES))
  (value (name ole2) (c-name GDK_DRAG_PROTO_OLE2))
  (value (name local) (c-name GDK_DRAG_PROTO_LOCAL))
)

(enum FilterReturn
  (in-module Gdk)
  (c-name GdkFilterReturn)
  (value (name continue) (c-name GDK_FILTER_CONTINUE))
  (value (name translate) (c-name GDK_FILTER_TRANSLATE))
  (value (name remove) (c-name GDK_FILTER_REMOVE))
)

(enum EventType
  (in-module Gdk)
  (c-name GdkEventType)
  (value (name nothing) (c-name GDK_NOTHING))
  (value (name delete) (c-name GDK_DELETE))
  (value (name destroy) (c-name GDK_DESTROY))
  (value (name expose) (c-name GDK_EXPOSE))
  (value (name motion-notify) (c-name GDK_MOTION_NOTIFY))
  (value (name button-press) (c-name GDK_BUTTON_PRESS))
  (value (name 2button-press) (c-name GDK_2BUTTON_PRESS))
  (value (name 3button-press) (c-name GDK_3BUTTON_PRESS))
  (value (name button-release) (c-name GDK_BUTTON_RELEASE))
  (value (name key-press) (c-name GDK_KEY_PRESS))
  (value (name key-release) (c-name GDK_KEY_RELEASE))
  (value (name enter-notify) (c-name GDK_ENTER_NOTIFY))
  (value (name leave-notify) (c-name GDK_LEAVE_NOTIFY))
  (value (name focus-change) (c-name GDK_FOCUS_CHANGE))
  (value (name configure) (c-name GDK_CONFIGURE))
  (value (name map) (c-name GDK_MAP))
  (value (name unmap) (c-name GDK_UNMAP))
  (value (name property-notify) (c-name GDK_PROPERTY_NOTIFY))
  (value (name selection-clear) (c-name GDK_SELECTION_CLEAR))
  (value (name selection-request) (c-name GDK_SELECTION_REQUEST))
  (value (name selection-notify) (c-name GDK_SELECTION_NOTIFY))
  (value (name proximity-in) (c-name GDK_PROXIMITY_IN))
  (value (name proximity-out) (c-name GDK_PROXIMITY_OUT))
  (value (name drag-enter) (c-name GDK_DRAG_ENTER))
  (value (name drag-leave) (c-name GDK_DRAG_LEAVE))
  (value (name drag-motion) (c-name GDK_DRAG_MOTION))
  (value (name drag-status) (c-name GDK_DRAG_STATUS))
  (value (name drop-start) (c-name GDK_DROP_START))
  (value (name drop-finished) (c-name GDK_DROP_FINISHED))
  (value (name client-event) (c-name GDK_CLIENT_EVENT))
  (value (name visibility-notify) (c-name GDK_VISIBILITY_NOTIFY))
  (value (name no-expose) (c-name GDK_NO_EXPOSE))
  (value (name scroll) (c-name GDK_SCROLL))
)

(flags EventMask
  (in-module Gdk)
  (c-name GdkEventMask)
  (value (name exposure-mask) (c-name GDK_EXPOSURE_MASK))
  (value (name pointer-motion-mask) (c-name GDK_POINTER_MOTION_MASK))
  (value (name pointer-motion-hint-mask) (c-name GDK_POINTER_MOTION_HINT_MASK))
  (value (name button-motion-mask) (c-name GDK_BUTTON_MOTION_MASK))
  (value (name button1-motion-mask) (c-name GDK_BUTTON1_MOTION_MASK))
  (value (name button2-motion-mask) (c-name GDK_BUTTON2_MOTION_MASK))
  (value (name button3-motion-mask) (c-name GDK_BUTTON3_MOTION_MASK))
  (value (name button-press-mask) (c-name GDK_BUTTON_PRESS_MASK))
  (value (name button-release-mask) (c-name GDK_BUTTON_RELEASE_MASK))
  (value (name key-press-mask) (c-name GDK_KEY_PRESS_MASK))
  (value (name key-release-mask) (c-name GDK_KEY_RELEASE_MASK))
  (value (name enter-notify-mask) (c-name GDK_ENTER_NOTIFY_MASK))
  (value (name leave-notify-mask) (c-name GDK_LEAVE_NOTIFY_MASK))
  (value (name focus-change-mask) (c-name GDK_FOCUS_CHANGE_MASK))
  (value (name structure-mask) (c-name GDK_STRUCTURE_MASK))
  (value (name property-change-mask) (c-name GDK_PROPERTY_CHANGE_MASK))
  (value (name visibility-notify-mask) (c-name GDK_VISIBILITY_NOTIFY_MASK))
  (value (name proximity-in-mask) (c-name GDK_PROXIMITY_IN_MASK))
  (value (name proximity-out-mask) (c-name GDK_PROXIMITY_OUT_MASK))
  (value (name substructure-mask) (c-name GDK_SUBSTRUCTURE_MASK))
  (value (name scroll-mask) (c-name GDK_SCROLL_MASK))
  (value (name all-events-mask) (c-name GDK_ALL_EVENTS_MASK))
)

(enum VisibilityState
  (in-module Gdk)
  (c-name GdkVisibilityState)
  (value (name unobscured) (c-name GDK_VISIBILITY_UNOBSCURED))
  (value (name partial) (c-name GDK_VISIBILITY_PARTIAL))
  (value (name fully-obscured) (c-name GDK_VISIBILITY_FULLY_OBSCURED))
)

(enum ScrollDirection
  (in-module Gdk)
  (c-name GdkScrollDirection)
  (value (name up) (c-name GDK_SCROLL_UP))
  (value (name down) (c-name GDK_SCROLL_DOWN))
  (value (name left) (c-name GDK_SCROLL_LEFT))
  (value (name right) (c-name GDK_SCROLL_RIGHT))
)

(enum NotifyType
  (in-module Gdk)
  (c-name GdkNotifyType)
  (value (name ancestor) (c-name GDK_NOTIFY_ANCESTOR))
  (value (name virtual) (c-name GDK_NOTIFY_VIRTUAL))
  (value (name inferior) (c-name GDK_NOTIFY_INFERIOR))
  (value (name nonlinear) (c-name GDK_NOTIFY_NONLINEAR))
  (value (name nonlinear-virtual) (c-name GDK_NOTIFY_NONLINEAR_VIRTUAL))
  (value (name unknown) (c-name GDK_NOTIFY_UNKNOWN))
)

(enum CrossingMode
  (in-module Gdk)
  (c-name GdkCrossingMode)
  (value (name normal) (c-name GDK_CROSSING_NORMAL))
  (value (name grab) (c-name GDK_CROSSING_GRAB))
  (value (name ungrab) (c-name GDK_CROSSING_UNGRAB))
)

(enum PropertyState
  (in-module Gdk)
  (c-name GdkPropertyState)
  (value (name new-value) (c-name GDK_PROPERTY_NEW_VALUE))
  (value (name delete) (c-name GDK_PROPERTY_DELETE))
)

(enum FontType
  (in-module Gdk)
  (c-name GdkFontType)
  (value (name font) (c-name GDK_FONT_FONT))
  (value (name fontset) (c-name GDK_FONT_FONTSET))
)

(enum CapStyle
  (in-module Gdk)
  (c-name GdkCapStyle)
  (value (name not-last) (c-name GDK_CAP_NOT_LAST))
  (value (name butt) (c-name GDK_CAP_BUTT))
  (value (name round) (c-name GDK_CAP_ROUND))
  (value (name projecting) (c-name GDK_CAP_PROJECTING))
)

(enum Fill
  (in-module Gdk)
  (c-name GdkFill)
  (value (name solid) (c-name GDK_SOLID))
  (value (name tiled) (c-name GDK_TILED))
  (value (name stippled) (c-name GDK_STIPPLED))
  (value (name opaque-stippled) (c-name GDK_OPAQUE_STIPPLED))
)

(enum Function
  (in-module Gdk)
  (c-name GdkFunction)
  (value (name copy) (c-name GDK_COPY))
  (value (name invert) (c-name GDK_INVERT))
  (value (name xor) (c-name GDK_XOR))
  (value (name clear) (c-name GDK_CLEAR))
  (value (name and) (c-name GDK_AND))
  (value (name and-reverse) (c-name GDK_AND_REVERSE))
  (value (name and-invert) (c-name GDK_AND_INVERT))
  (value (name noop) (c-name GDK_NOOP))
  (value (name or) (c-name GDK_OR))
  (value (name equiv) (c-name GDK_EQUIV))
  (value (name or-reverse) (c-name GDK_OR_REVERSE))
  (value (name copy-invert) (c-name GDK_COPY_INVERT))
  (value (name or-invert) (c-name GDK_OR_INVERT))
  (value (name nand) (c-name GDK_NAND))
  (value (name nor) (c-name GDK_NOR))
  (value (name set) (c-name GDK_SET))
)

(enum JoinStyle
  (in-module Gdk)
  (c-name GdkJoinStyle)
  (value (name miter) (c-name GDK_JOIN_MITER))
  (value (name round) (c-name GDK_JOIN_ROUND))
  (value (name bevel) (c-name GDK_JOIN_BEVEL))
)

(enum LineStyle
  (in-module Gdk)
  (c-name GdkLineStyle)
  (value (name solid) (c-name GDK_LINE_SOLID))
  (value (name on-off-dash) (c-name GDK_LINE_ON_OFF_DASH))
  (value (name double-dash) (c-name GDK_LINE_DOUBLE_DASH))
)

(enum SubwindowMode
  (in-module Gdk)
  (c-name GdkSubwindowMode)
  (value (name clip-by-children) (c-name GDK_CLIP_BY_CHILDREN))
  (value (name include-inferiors) (c-name GDK_INCLUDE_INFERIORS))
)

(flags GCValuesMask
  (in-module Gdk)
  (c-name GdkGCValuesMask)
  (value (name foreground) (c-name GDK_GC_FOREGROUND))
  (value (name background) (c-name GDK_GC_BACKGROUND))
  (value (name font) (c-name GDK_GC_FONT))
  (value (name function) (c-name GDK_GC_FUNCTION))
  (value (name fill) (c-name GDK_GC_FILL))
  (value (name tile) (c-name GDK_GC_TILE))
  (value (name stipple) (c-name GDK_GC_STIPPLE))
  (value (name clip-mask) (c-name GDK_GC_CLIP_MASK))
  (value (name subwindow) (c-name GDK_GC_SUBWINDOW))
  (value (name ts-x-origin) (c-name GDK_GC_TS_X_ORIGIN))
  (value (name ts-y-origin) (c-name GDK_GC_TS_Y_ORIGIN))
  (value (name clip-x-origin) (c-name GDK_GC_CLIP_X_ORIGIN))
  (value (name clip-y-origin) (c-name GDK_GC_CLIP_Y_ORIGIN))
  (value (name exposures) (c-name GDK_GC_EXPOSURES))
  (value (name line-width) (c-name GDK_GC_LINE_WIDTH))
  (value (name line-style) (c-name GDK_GC_LINE_STYLE))
  (value (name cap-style) (c-name GDK_GC_CAP_STYLE))
  (value (name join-style) (c-name GDK_GC_JOIN_STYLE))
)

(enum IMStyle
  (in-module Gdk)
  (c-name GdkIMStyle)
  (value (name preedit-area) (c-name GDK_IM_PREEDIT_AREA))
  (value (name preedit-callbacks) (c-name GDK_IM_PREEDIT_CALLBACKS))
  (value (name preedit-position) (c-name GDK_IM_PREEDIT_POSITION))
  (value (name preedit-nothing) (c-name GDK_IM_PREEDIT_NOTHING))
  (value (name preedit-none) (c-name GDK_IM_PREEDIT_NONE))
  (value (name preedit-mask) (c-name GDK_IM_PREEDIT_MASK))
  (value (name status-area) (c-name GDK_IM_STATUS_AREA))
  (value (name status-callbacks) (c-name GDK_IM_STATUS_CALLBACKS))
  (value (name status-nothing) (c-name GDK_IM_STATUS_NOTHING))
  (value (name status-none) (c-name GDK_IM_STATUS_NONE))
  (value (name status-mask) (c-name GDK_IM_STATUS_MASK))
)

(flags ICAttributesType
  (in-module Gdk)
  (c-name GdkICAttributesType)
  (value (name style) (c-name GDK_IC_STYLE))
  (value (name client-window) (c-name GDK_IC_CLIENT_WINDOW))
  (value (name focus-window) (c-name GDK_IC_FOCUS_WINDOW))
  (value (name filter-events) (c-name GDK_IC_FILTER_EVENTS))
  (value (name spot-location) (c-name GDK_IC_SPOT_LOCATION))
  (value (name line-spacing) (c-name GDK_IC_LINE_SPACING))
  (value (name cursor) (c-name GDK_IC_CURSOR))
  (value (name preedit-fontset) (c-name GDK_IC_PREEDIT_FONTSET))
  (value (name preedit-area) (c-name GDK_IC_PREEDIT_AREA))
  (value (name preedit-area-needed) (c-name GDK_IC_PREEDIT_AREA_NEEDED))
  (value (name preedit-foreground) (c-name GDK_IC_PREEDIT_FOREGROUND))
  (value (name preedit-background) (c-name GDK_IC_PREEDIT_BACKGROUND))
  (value (name preedit-pixmap) (c-name GDK_IC_PREEDIT_PIXMAP))
  (value (name preedit-colormap) (c-name GDK_IC_PREEDIT_COLORMAP))
  (value (name status-fontset) (c-name GDK_IC_STATUS_FONTSET))
  (value (name status-area) (c-name GDK_IC_STATUS_AREA))
  (value (name status-area-needed) (c-name GDK_IC_STATUS_AREA_NEEDED))
  (value (name status-foreground) (c-name GDK_IC_STATUS_FOREGROUND))
  (value (name status-background) (c-name GDK_IC_STATUS_BACKGROUND))
  (value (name status-pixmap) (c-name GDK_IC_STATUS_PIXMAP))
  (value (name status-colormap) (c-name GDK_IC_STATUS_COLORMAP))
  (value (name all-req) (c-name GDK_IC_ALL_REQ))
  (value (name preedit-area-req) (c-name GDK_IC_PREEDIT_AREA_REQ))
  (value (name preedit-position-req) (c-name GDK_IC_PREEDIT_POSITION_REQ))
  (value (name status-area-req) (c-name GDK_IC_STATUS_AREA_REQ))
)

(enum ImageType
  (in-module Gdk)
  (c-name GdkImageType)
  (value (name normal) (c-name GDK_IMAGE_NORMAL))
  (value (name shared) (c-name GDK_IMAGE_SHARED))
  (value (name fastest) (c-name GDK_IMAGE_FASTEST))
)

(enum ExtensionMode
  (in-module Gdk)
  (c-name GdkExtensionMode)
  (value (name none) (c-name GDK_EXTENSION_EVENTS_NONE))
  (value (name all) (c-name GDK_EXTENSION_EVENTS_ALL))
  (value (name cursor) (c-name GDK_EXTENSION_EVENTS_CURSOR))
)

(enum InputSource
  (in-module Gdk)
  (c-name GdkInputSource)
  (value (name mouse) (c-name GDK_SOURCE_MOUSE))
  (value (name pen) (c-name GDK_SOURCE_PEN))
  (value (name eraser) (c-name GDK_SOURCE_ERASER))
  (value (name cursor) (c-name GDK_SOURCE_CURSOR))
)

(enum InputMode
  (in-module Gdk)
  (c-name GdkInputMode)
  (value (name disabled) (c-name GDK_MODE_DISABLED))
  (value (name screen) (c-name GDK_MODE_SCREEN))
  (value (name window) (c-name GDK_MODE_WINDOW))
)

(enum AxisUse
  (in-module Gdk)
  (c-name GdkAxisUse)
  (value (name ignore) (c-name GDK_AXIS_IGNORE))
  (value (name x) (c-name GDK_AXIS_X))
  (value (name y) (c-name GDK_AXIS_Y))
  (value (name pressure) (c-name GDK_AXIS_PRESSURE))
  (value (name xtilt) (c-name GDK_AXIS_XTILT))
  (value (name ytilt) (c-name GDK_AXIS_YTILT))
  (value (name wheel) (c-name GDK_AXIS_WHEEL))
  (value (name last) (c-name GDK_AXIS_LAST))
)

(flags ColorInfoFlags
  (in-module Gdk)
  (c-name GdkColorInfoFlags)
  (value (name writable) (c-name GDK_COLOR_WRITABLE))
)

(enum PropMode
  (in-module Gdk)
  (c-name GdkPropMode)
  (value (name replace) (c-name GDK_PROP_MODE_REPLACE))
  (value (name prepend) (c-name GDK_PROP_MODE_PREPEND))
  (value (name append) (c-name GDK_PROP_MODE_APPEND))
)

(enum FillRule
  (in-module Gdk)
  (c-name GdkFillRule)
  (value (name even-odd-rule) (c-name GDK_EVEN_ODD_RULE))
  (value (name winding-rule) (c-name GDK_WINDING_RULE))
)

(enum OverlapType
  (in-module Gdk)
  (c-name GdkOverlapType)
  (value (name in) (c-name GDK_OVERLAP_RECTANGLE_IN))
  (value (name out) (c-name GDK_OVERLAP_RECTANGLE_OUT))
  (value (name part) (c-name GDK_OVERLAP_RECTANGLE_PART))
)

(enum RgbDither
  (in-module Gdk)
  (c-name GdkRgbDither)
  (value (name none) (c-name GDK_RGB_DITHER_NONE))
  (value (name normal) (c-name GDK_RGB_DITHER_NORMAL))
  (value (name max) (c-name GDK_RGB_DITHER_MAX))
)

(enum Selection
  (in-module Gdk)
  (c-name GdkSelection)
  (value (name primary) (c-name GDK_SELECTION_PRIMARY))
  (value (name secondary) (c-name GDK_SELECTION_SECONDARY))
)

(enum Target
  (in-module Gdk)
  (c-name GdkTarget)
  (value (name bitmap) (c-name GDK_TARGET_BITMAP))
  (value (name colormap) (c-name GDK_TARGET_COLORMAP))
  (value (name drawable) (c-name GDK_TARGET_DRAWABLE))
  (value (name pixmap) (c-name GDK_TARGET_PIXMAP))
  (value (name string) (c-name GDK_TARGET_STRING))
)

(enum SelectionType
  (in-module Gdk)
  (c-name GdkSelectionType)
  (value (name atom) (c-name GDK_SELECTION_TYPE_ATOM))
  (value (name bitmap) (c-name GDK_SELECTION_TYPE_BITMAP))
  (value (name colormap) (c-name GDK_SELECTION_TYPE_COLORMAP))
  (value (name drawable) (c-name GDK_SELECTION_TYPE_DRAWABLE))
  (value (name integer) (c-name GDK_SELECTION_TYPE_INTEGER))
  (value (name pixmap) (c-name GDK_SELECTION_TYPE_PIXMAP))
  (value (name window) (c-name GDK_SELECTION_TYPE_WINDOW))
  (value (name string) (c-name GDK_SELECTION_TYPE_STRING))
)

(enum ByteOrder
  (in-module Gdk)
  (c-name GdkByteOrder)
  (value (name lsb-first) (c-name GDK_LSB_FIRST))
  (value (name msb-first) (c-name GDK_MSB_FIRST))
)

(flags ModifierType
  (in-module Gdk)
  (c-name GdkModifierType)
  (value (name shift-mask) (c-name GDK_SHIFT_MASK))
  (value (name lock-mask) (c-name GDK_LOCK_MASK))
  (value (name control-mask) (c-name GDK_CONTROL_MASK))
  (value (name mod1-mask) (c-name GDK_MOD1_MASK))
  (value (name mod2-mask) (c-name GDK_MOD2_MASK))
  (value (name mod3-mask) (c-name GDK_MOD3_MASK))
  (value (name mod4-mask) (c-name GDK_MOD4_MASK))
  (value (name mod5-mask) (c-name GDK_MOD5_MASK))
  (value (name button1-mask) (c-name GDK_BUTTON1_MASK))
  (value (name button2-mask) (c-name GDK_BUTTON2_MASK))
  (value (name button3-mask) (c-name GDK_BUTTON3_MASK))
  (value (name button4-mask) (c-name GDK_BUTTON4_MASK))
  (value (name button5-mask) (c-name GDK_BUTTON5_MASK))
  (value (name release-mask) (c-name GDK_RELEASE_MASK))
  (value (name modifier-mask) (c-name GDK_MODIFIER_MASK))
)

(flags InputCondition
  (in-module Gdk)
  (c-name GdkInputCondition)
  (value (name read) (c-name GDK_INPUT_READ))
  (value (name write) (c-name GDK_INPUT_WRITE))
  (value (name exception) (c-name GDK_INPUT_EXCEPTION))
)

(enum Status
  (in-module Gdk)
  (c-name GdkStatus)
  (value (name ok) (c-name GDK_OK))
  (value (name error) (c-name GDK_ERROR))
  (value (name error-param) (c-name GDK_ERROR_PARAM))
  (value (name error-file) (c-name GDK_ERROR_FILE))
  (value (name error-mem) (c-name GDK_ERROR_MEM))
)

(enum GrabStatus
  (in-module Gdk)
  (c-name GdkGrabStatus)
  (value (name success) (c-name GDK_GRAB_SUCCESS))
  (value (name already-grabbed) (c-name GDK_GRAB_ALREADY_GRABBED))
  (value (name invalid-time) (c-name GDK_GRAB_INVALID_TIME))
  (value (name not-viewable) (c-name GDK_GRAB_NOT_VIEWABLE))
  (value (name frozen) (c-name GDK_GRAB_FROZEN))
)

(enum VisualType
  (in-module Gdk)
  (c-name GdkVisualType)
  (value (name static-gray) (c-name GDK_VISUAL_STATIC_GRAY))
  (value (name grayscale) (c-name GDK_VISUAL_GRAYSCALE))
  (value (name static-color) (c-name GDK_VISUAL_STATIC_COLOR))
  (value (name pseudo-color) (c-name GDK_VISUAL_PSEUDO_COLOR))
  (value (name true-color) (c-name GDK_VISUAL_TRUE_COLOR))
  (value (name direct-color) (c-name GDK_VISUAL_DIRECT_COLOR))
)

(enum WindowClass
  (in-module Gdk)
  (c-name GdkWindowClass)
  (value (name utput) (c-name GDK_INPUT_OUTPUT))
  (value (name nly) (c-name GDK_INPUT_ONLY))
)

(enum WindowType
  (in-module Gdk)
  (c-name GdkWindowType)
  (value (name root) (c-name GDK_WINDOW_ROOT))
  (value (name toplevel) (c-name GDK_WINDOW_TOPLEVEL))
  (value (name child) (c-name GDK_WINDOW_CHILD))
  (value (name dialog) (c-name GDK_WINDOW_DIALOG))
  (value (name temp) (c-name GDK_WINDOW_TEMP))
  (value (name foreign) (c-name GDK_WINDOW_FOREIGN))
)

(flags WindowAttributesType
  (in-module Gdk)
  (c-name GdkWindowAttributesType)
  (value (name title) (c-name GDK_WA_TITLE))
  (value (name x) (c-name GDK_WA_X))
  (value (name y) (c-name GDK_WA_Y))
  (value (name cursor) (c-name GDK_WA_CURSOR))
  (value (name colormap) (c-name GDK_WA_COLORMAP))
  (value (name visual) (c-name GDK_WA_VISUAL))
  (value (name wmclass) (c-name GDK_WA_WMCLASS))
  (value (name noredir) (c-name GDK_WA_NOREDIR))
)

(flags WindowHints
  (in-module Gdk)
  (c-name GdkWindowHints)
  (value (name pos) (c-name GDK_HINT_POS))
  (value (name min-size) (c-name GDK_HINT_MIN_SIZE))
  (value (name max-size) (c-name GDK_HINT_MAX_SIZE))
  (value (name base-size) (c-name GDK_HINT_BASE_SIZE))
  (value (name aspect) (c-name GDK_HINT_ASPECT))
  (value (name resize-inc) (c-name GDK_HINT_RESIZE_INC))
  (value (name win-gravity) (c-name GDK_HINT_WIN_GRAVITY))
)

(flags WMDecoration
  (in-module Gdk)
  (c-name GdkWMDecoration)
  (value (name all) (c-name GDK_DECOR_ALL))
  (value (name border) (c-name GDK_DECOR_BORDER))
  (value (name resizeh) (c-name GDK_DECOR_RESIZEH))
  (value (name title) (c-name GDK_DECOR_TITLE))
  (value (name menu) (c-name GDK_DECOR_MENU))
  (value (name minimize) (c-name GDK_DECOR_MINIMIZE))
  (value (name maximize) (c-name GDK_DECOR_MAXIMIZE))
)

(flags WMFunction
  (in-module Gdk)
  (c-name GdkWMFunction)
  (value (name all) (c-name GDK_FUNC_ALL))
  (value (name resize) (c-name GDK_FUNC_RESIZE))
  (value (name move) (c-name GDK_FUNC_MOVE))
  (value (name minimize) (c-name GDK_FUNC_MINIMIZE))
  (value (name maximize) (c-name GDK_FUNC_MAXIMIZE))
  (value (name close) (c-name GDK_FUNC_CLOSE))
)

(enum Gravity
  (in-module Gdk)
  (c-name GdkGravity)
  (value (name north-west) (c-name GDK_GRAVITY_NORTH_WEST))
  (value (name north) (c-name GDK_GRAVITY_NORTH))
  (value (name north-east) (c-name GDK_GRAVITY_NORTH_EAST))
  (value (name west) (c-name GDK_GRAVITY_WEST))
  (value (name center) (c-name GDK_GRAVITY_CENTER))
  (value (name east) (c-name GDK_GRAVITY_EAST))
  (value (name south-west) (c-name GDK_GRAVITY_SOUTH_WEST))
  (value (name south) (c-name GDK_GRAVITY_SOUTH))
  (value (name south-east) (c-name GDK_GRAVITY_SOUTH_EAST))
  (value (name static) (c-name GDK_GRAVITY_STATIC))
)

(enum PixbufAlphaMode
  (in-module Gdk)
  (c-name GdkPixbufAlphaMode)
  (value (name bilevel) (c-name GDK_PIXBUF_ALPHA_BILEVEL))
  (value (name full) (c-name GDK_PIXBUF_ALPHA_FULL))
)

(enum Colorspace
  (in-module Gdk)
  (c-name GdkColorspace)
  (value (name rgb) (c-name GDK_COLORSPACE_RGB))
)

(enum PixbufError
  (in-module Gdk)
  (c-name GdkPixbufError)
  (value (name corrupt-image) (c-name GDK_PIXBUF_ERROR_CORRUPT_IMAGE))
  (value (name insufficient-memory) (c-name GDK_PIXBUF_ERROR_INSUFFICIENT_MEMORY))
  (value (name bad-option-value) (c-name GDK_PIXBUF_ERROR_BAD_OPTION_VALUE))
  (value (name unknown-type) (c-name GDK_PIXBUF_ERROR_UNKNOWN_TYPE))
  (value (name unsupported-operation) (c-name GDK_PIXBUF_ERROR_UNSUPPORTED_OPERATION))
  (value (name failed) (c-name GDK_PIXBUF_ERROR_FAILED))
)

(enum InterpType
  (in-module Gdk)
  (c-name GdkInterpType)
  (value (name nearest) (c-name GDK_INTERP_NEAREST))
  (value (name tiles) (c-name GDK_INTERP_TILES))
  (value (name bilinear) (c-name GDK_INTERP_BILINEAR))
  (value (name hyper) (c-name GDK_INTERP_HYPER))
)

(enum PixbufFrameAction
  (in-module Gdk)
  (c-name GdkPixbufFrameAction)
  (value (name retain) (c-name GDK_PIXBUF_FRAME_RETAIN))
  (value (name dispose) (c-name GDK_PIXBUF_FRAME_DISPOSE))
  (value (name revert) (c-name GDK_PIXBUF_FRAME_REVERT))
)


;; From /opt/pango/include/gtk-2.0/gdk/gdkcolor.h

(function gdk_colormap_get_type
  (c-name gdk_colormap_get_type)
  (return-type GType)
)

(function gdk_colormap_new
  (c-name gdk_colormap_new)
  (is-constructor-of GdkColormap)
  (return-type GdkColormap*)
  (parameter (type-and-name GdkVisual* visual))
  (parameter (type-and-name gboolean allocate))
)

(function colormap_get_system
  (c-name gdk_colormap_get_system)
  (return-type GdkColormap*)
)

(function colormap_get_system_size
  (c-name gdk_colormap_get_system_size)
  (return-type gint)
)

(method change
  (of-object Colormap (Gdk))
  (c-name gdk_colormap_change)
  (return-type none)
  (parameter (type-and-name gint ncolors))
)

(method alloc_color
  (of-object Colormap (Gdk))
  (c-name gdk_colormap_alloc_color)
  (return-type gboolean)
  (parameter (type-and-name GdkColor* color))
  (parameter (type-and-name gboolean writeable))
  (parameter (type-and-name gboolean best_match))
)

(method get_visual
  (of-object Colormap (Gdk))
  (c-name gdk_colormap_get_visual)
  (return-type GdkVisual*)
)

(function gdk_color_parse
  (c-name gdk_color_parse)
  (return-type gint)
  (parameter (type-and-name const-gchar* spec))
  (parameter (type-and-name GdkColor* color))
)

(method white
  (of-object Colormap (Gdk))
  (c-name gdk_color_white)
  (return-type gint)
  (parameter (type-and-name GdkColor* color))
)

(method black
  (of-object Colormap (Gdk))
  (c-name gdk_color_black)
  (return-type gint)
  (parameter (type-and-name GdkColor* color))
)

(method alloc
  (of-object Colormap (Gdk))
  (c-name gdk_color_alloc)
  (return-type gint)
  (parameter (type-and-name GdkColor* color))
)

(method change
  (of-object Colormap (Gdk))
  (c-name gdk_color_change)
  (return-type gint)
  (parameter (type-and-name GdkColor* color))
)



;; From /opt/pango/include/gtk-2.0/gdk/gdkcursor.h

(function gdk_cursor_new
  (c-name gdk_cursor_new)
  (return-type GdkCursor*)
  (parameter (type-and-name GdkCursorType cursor_type))
)

(function gdk_cursor_new_from_pixmap
  (c-name gdk_cursor_new_from_pixmap)
  (return-type GdkCursor*)
  (parameter (type-and-name GdkPixmap* source))
  (parameter (type-and-name GdkPixmap* mask))
  (parameter (type-and-name GdkColor* fg))
  (parameter (type-and-name GdkColor* bg))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
)



;; From /opt/pango/include/gtk-2.0/gdk/gdkdnd.h

(function gdk_drag_context_get_type
  (c-name gdk_drag_context_get_type)
  (return-type GType)
)

(function gdk_drag_context_new
  (is-constructor-of GdkDragContext)
  (c-name gdk_drag_context_new)
  (return-type GdkDragContext*)
)

(method ref
  (of-object DragContext (Gdk))
  (c-name gdk_drag_context_ref)
  (return-type none)
)

(method unref
  (of-object DragContext (Gdk))
  (c-name gdk_drag_context_unref)
  (return-type none)
)

(method drag_status
  (of-object DragContext (Gdk))
  (c-name gdk_drag_status)
  (return-type none)
  (parameter (type-and-name GdkDragAction action))
  (parameter (type-and-name guint32 time))
)

(method drop_reply
  (of-object DragContext (Gdk))
  (c-name gdk_drop_reply)
  (return-type none)
  (parameter (type-and-name gboolean ok))
  (parameter (type-and-name guint32 time))
)

(method drop_finish
  (of-object DragContext (Gdk))
  (c-name gdk_drop_finish)
  (return-type none)
  (parameter (type-and-name gboolean success))
  (parameter (type-and-name guint32 time))
)

(method drag_get_selection
  (of-object DragContext (Gdk))
  (c-name gdk_drag_get_selection)
  (return-type GdkAtom)
)

(method drag_begin
  (of-object Window (Gdk))
  (c-name gdk_drag_begin)
  (return-type GdkDragContext*)
  (parameter (type-and-name GList* targets))
)

(function gdk_drag_get_protocol
  (c-name gdk_drag_get_protocol)
  (return-type guint32)
  (parameter (type-and-name guint32 xid))
  (parameter (type-and-name GdkDragProtocol* protocol))
)

(method drag_find_window
  (of-object DragContext (Gdk))
  (c-name gdk_drag_find_window)
  (return-type none)
  (parameter (type-and-name GdkWindow* drag_window))
  (parameter (type-and-name gint x_root))
  (parameter (type-and-name gint y_root))
  (parameter (type-and-name GdkWindow** dest_window))
  (parameter (type-and-name GdkDragProtocol* protocol))
)

(method drag_motion
  (of-object DragContext (Gdk))
  (c-name gdk_drag_motion)
  (return-type gboolean)
  (parameter (type-and-name GdkWindow* dest_window))
  (parameter (type-and-name GdkDragProtocol protocol))
  (parameter (type-and-name gint x_root))
  (parameter (type-and-name gint y_root))
  (parameter (type-and-name GdkDragAction suggested_action))
  (parameter (type-and-name GdkDragAction possible_actions))
  (parameter (type-and-name guint32 time))
)

(method drag_drop
  (of-object DragContext (Gdk))
  (c-name gdk_drag_drop)
  (return-type none)
  (parameter (type-and-name guint32 time))
)

(method drag_abort
  (of-object DragContext (Gdk))
  (c-name gdk_drag_abort)
  (return-type none)
  (parameter (type-and-name guint32 time))
)



;; From /opt/pango/include/gtk-2.0/gdk/gdkdrawable.h

(function gdk_drawable_get_type
  (c-name gdk_drawable_get_type)
  (return-type GType)
)

(method set_data
  (of-object Drawable (Gdk))
  (c-name gdk_drawable_set_data)
  (return-type none)
  (parameter (type-and-name const-gchar* key))
  (parameter (type-and-name gpointer data))
  (parameter (type-and-name GDestroyNotify destroy_func))
)

(method get_data
  (of-object Drawable (Gdk))
  (c-name gdk_drawable_get_data)
  (return-type gpointer)
  (parameter (type-and-name const-gchar* key))
)

(method get_size
  (of-object Drawable (Gdk))
  (c-name gdk_drawable_get_size)
  (return-type none)
  (parameter (type-and-name gint* width))
  (parameter (type-and-name gint* height))
)

(method set_colormap
  (of-object Drawable (Gdk))
  (c-name gdk_drawable_set_colormap)
  (return-type none)
  (parameter (type-and-name GdkColormap* colormap))
)

(method get_colormap
  (of-object Drawable (Gdk))
  (c-name gdk_drawable_get_colormap)
  (return-type GdkColormap*)
)

(method get_visual
  (of-object Drawable (Gdk))
  (c-name gdk_drawable_get_visual)
  (return-type GdkVisual*)
)

(method get_depth
  (of-object Drawable (Gdk))
  (c-name gdk_drawable_get_depth)
  (return-type gint)
)

(method ref
  (of-object Drawable (Gdk))
  (c-name gdk_drawable_ref)
  (return-type GdkDrawable*)
)

(method unref
  (of-object Drawable (Gdk))
  (c-name gdk_drawable_unref)
  (return-type none)
)

(method draw_point
  (of-object Drawable (Gdk))
  (c-name gdk_draw_point)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
)

(method draw_line
  (of-object Drawable (Gdk))
  (c-name gdk_draw_line)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x1))
  (parameter (type-and-name gint y1))
  (parameter (type-and-name gint x2))
  (parameter (type-and-name gint y2))
)

(method draw_rectangle
  (of-object Drawable (Gdk))
  (c-name gdk_draw_rectangle)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint filled))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(method draw_arc
  (of-object Drawable (Gdk))
  (c-name gdk_draw_arc)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint filled))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name gint angle1))
  (parameter (type-and-name gint angle2))
)

(method draw_polygon
  (of-object Drawable (Gdk))
  (c-name gdk_draw_polygon)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint filled))
  (parameter (type-and-name GdkPoint* points))
  (parameter (type-and-name gint npoints))
)

(method draw_string
  (of-object Drawable (Gdk))
  (c-name gdk_draw_string)
  (return-type none)
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name const-gchar* string))
)

(method draw_text
  (of-object Drawable (Gdk))
  (c-name gdk_draw_text)
  (return-type none)
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name const-gchar* text))
  (parameter (type-and-name gint text_length))
)

(method draw_text_wc
  (of-object Drawable (Gdk))
  (c-name gdk_draw_text_wc)
  (return-type none)
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name const-GdkWChar* text))
  (parameter (type-and-name gint text_length))
)

(method draw_drawable
  (of-object Drawable (Gdk))
  (c-name gdk_draw_drawable)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name GdkDrawable* src))
  (parameter (type-and-name gint xsrc))
  (parameter (type-and-name gint ysrc))
  (parameter (type-and-name gint xdest))
  (parameter (type-and-name gint ydest))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(method draw_image
  (of-object Drawable (Gdk))
  (c-name gdk_draw_image)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name GdkImage* image))
  (parameter (type-and-name gint xsrc))
  (parameter (type-and-name gint ysrc))
  (parameter (type-and-name gint xdest))
  (parameter (type-and-name gint ydest))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(method draw_points
  (of-object Drawable (Gdk))
  (c-name gdk_draw_points)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name GdkPoint* points))
  (parameter (type-and-name gint npoints))
)

(method draw_segments
  (of-object Drawable (Gdk))
  (c-name gdk_draw_segments)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name GdkSegment* segs))
  (parameter (type-and-name gint nsegs))
)

(method draw_lines
  (of-object Drawable (Gdk))
  (c-name gdk_draw_lines)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name GdkPoint* points))
  (parameter (type-and-name gint npoints))
)

(method draw_glyphs
  (of-object Drawable (Gdk))
  (c-name gdk_draw_glyphs)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name PangoFont* font))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name PangoGlyphString* glyphs))
)

(method draw_layout_line
  (of-object Drawable (Gdk))
  (c-name gdk_draw_layout_line)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name PangoLayoutLine* line))
)

(method draw_layout
  (of-object Drawable (Gdk))
  (c-name gdk_draw_layout)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name PangoLayout* layout))
)



;; From /opt/pango/include/gtk-2.0/gdk/gdkevents.h

(method get_time
  (of-object Event (Gdk))
  (c-name gdk_event_get_time)
  (return-type guint32)
)

(function set_show_events
  (c-name gdk_set_show_events)
  (return-type none)
  (parameter (type-and-name gboolean show_events))
)

(function get_show_events
  (c-name gdk_get_show_events)
  (return-type gboolean)
)




;; From /opt/pango/include/gtk-2.0/gdk/gdkfont.h

(function gdk_font_load
  (c-name gdk_font_load)
  (return-type GdkFont*)
  (parameter (type-and-name const-gchar* font_name))
)

(function gdk_fontset_load
  (c-name gdk_fontset_load)
  (return-type GdkFont*)
  (parameter (type-and-name const-gchar* fontset_name))
)

(function gdk_font_from_description
  (c-name gdk_font_from_description)
  (return-type GdkFont*)
  (parameter (type-and-name PangoFontDescription* font_desc))
)

(method id
  (of-object Font (Gdk))
  (c-name gdk_font_id)
  (return-type gint)
)

(method string_width
  (of-object Font (Gdk))
  (c-name gdk_string_width)
  (return-type gint)
  (parameter (type-and-name const-gchar* string))
)

(method width
  (of-object Font (Gdk))
  (c-name gdk_text_width)
  (return-type gint)
  (parameter (type-and-name const-gchar* text))
  (parameter (type-and-name gint text_length))
)

(method text_width_wc
  (of-object Font (Gdk))
  (c-name gdk_text_width_wc)
  (return-type gint)
  (parameter (type-and-name const-GdkWChar* text))
  (parameter (type-and-name gint text_length))
)

(method char_width
  (of-object Font (Gdk))
  (c-name gdk_char_width)
  (return-type gint)
  (parameter (type-and-name gchar character))
)

(method char_width_wc
  (of-object Font (Gdk))
  (c-name gdk_char_width_wc)
  (return-type gint)
  (parameter (type-and-name GdkWChar character))
)

(method string_measure
  (of-object Font (Gdk))
  (c-name gdk_string_measure)
  (return-type gint)
  (parameter (type-and-name const-gchar* string))
)

(method measure
  (of-object Font (Gdk))
  (c-name gdk_text_measure)
  (return-type gint)
  (parameter (type-and-name const-gchar* text))
  (parameter (type-and-name gint text_length))
)

(method char_measure
  (of-object Font (Gdk))
  (c-name gdk_char_measure)
  (return-type gint)
  (parameter (type-and-name gchar character))
)

(method string_height
  (of-object Font (Gdk))
  (c-name gdk_string_height)
  (return-type gint)
  (parameter (type-and-name const-gchar* string))
)

(method height
  (of-object Font (Gdk))
  (c-name gdk_text_height)
  (return-type gint)
  (parameter (type-and-name const-gchar* text))
  (parameter (type-and-name gint text_length))
)

(method char_height
  (of-object Font (Gdk))
  (c-name gdk_char_height)
  (return-type gint)
  (parameter (type-and-name gchar character))
)

(method extents
  (of-object Font (Gdk))
  (c-name gdk_text_extents)
  (return-type none)
  (parameter (type-and-name const-gchar* text))
  (parameter (type-and-name gint text_length))
  (parameter (type-and-name gint* lbearing))
  (parameter (type-and-name gint* rbearing))
  (parameter (type-and-name gint* width))
  (parameter (type-and-name gint* ascent))
  (parameter (type-and-name gint* descent))
)

(method text_extents_wc
  (of-object Font (Gdk))
  (c-name gdk_text_extents_wc)
  (return-type none)
  (parameter (type-and-name const-GdkWChar* text))
  (parameter (type-and-name gint text_length))
  (parameter (type-and-name gint* lbearing))
  (parameter (type-and-name gint* rbearing))
  (parameter (type-and-name gint* width))
  (parameter (type-and-name gint* ascent))
  (parameter (type-and-name gint* descent))
)

(method string_extents
  (of-object Font (Gdk))
  (c-name gdk_string_extents)
  (return-type none)
  (parameter (type-and-name const-gchar* string))
  (parameter (type-and-name gint* lbearing))
  (parameter (type-and-name gint* rbearing))
  (parameter (type-and-name gint* width))
  (parameter (type-and-name gint* ascent))
  (parameter (type-and-name gint* descent))
)

(method full_name_get
  (of-object Font (Gdk))
  (c-name gdk_font_full_name_get)
  (return-type gchar*)
)



;; From /opt/pango/include/gtk-2.0/gdk/gdkgc.h

(function gdk_gc_get_type
  (c-name gdk_gc_get_type)
  (return-type GType)
)

(function gdk_gc_new
  (c-name gdk_gc_new)
  (return-type GdkGC*)
  (parameter (type-and-name GdkDrawable* drawable))
)

(method new_gc
  (of-object Drawable (Gdk))
  (c-name gdk_gc_new_with_values)
  (return-type GdkGC*)
  (parameter (type-and-name GdkGCValues* values))
  (parameter (type-and-name GdkGCValuesMask values_mask))
)

(method get_values
  (of-object GC (Gdk))
  (c-name gdk_gc_get_values)
  (return-type none)
  (parameter (type-and-name GdkGCValues* values))
)

(method set_values
  (of-object GC (Gdk))
  (c-name gdk_gc_set_values)
  (return-type none)
  (parameter (type-and-name GdkGCValues* values))
  (parameter (type-and-name GdkGCValuesMask values_mask))
)

(method set_foreground
  (of-object GC (Gdk))
  (c-name gdk_gc_set_foreground)
  (return-type none)
  (parameter (type-and-name GdkColor* color))
)

(method set_background
  (of-object GC (Gdk))
  (c-name gdk_gc_set_background)
  (return-type none)
  (parameter (type-and-name GdkColor* color))
)

(method set_font
  (of-object GC (Gdk))
  (c-name gdk_gc_set_font)
  (return-type none)
  (parameter (type-and-name GdkFont* font))
)

(method set_function
  (of-object GC (Gdk))
  (c-name gdk_gc_set_function)
  (return-type none)
  (parameter (type-and-name GdkFunction function))
)

(method set_fill
  (of-object GC (Gdk))
  (c-name gdk_gc_set_fill)
  (return-type none)
  (parameter (type-and-name GdkFill fill))
)

(method set_tile
  (of-object GC (Gdk))
  (c-name gdk_gc_set_tile)
  (return-type none)
  (parameter (type-and-name GdkPixmap* tile))
)

(method set_stipple
  (of-object GC (Gdk))
  (c-name gdk_gc_set_stipple)
  (return-type none)
  (parameter (type-and-name GdkPixmap* stipple))
)

(method set_ts_origin
  (of-object GC (Gdk))
  (c-name gdk_gc_set_ts_origin)
  (return-type none)
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
)

(method set_clip_origin
  (of-object GC (Gdk))
  (c-name gdk_gc_set_clip_origin)
  (return-type none)
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
)

(method set_clip_mask
  (of-object GC (Gdk))
  (c-name gdk_gc_set_clip_mask)
  (return-type none)
  (parameter (type-and-name GdkBitmap* mask))
)

(method set_clip_rectangle
  (of-object GC (Gdk))
  (c-name gdk_gc_set_clip_rectangle)
  (return-type none)
  (parameter (type-and-name GdkRectangle* rectangle))
)

(method set_clip_region
  (of-object GC (Gdk))
  (c-name gdk_gc_set_clip_region)
  (return-type none)
  (parameter (type-and-name GdkRegion* region))
)

(method set_subwindow
  (of-object GC (Gdk))
  (c-name gdk_gc_set_subwindow)
  (return-type none)
  (parameter (type-and-name GdkSubwindowMode mode))
)

(method set_exposures
  (of-object GC (Gdk))
  (c-name gdk_gc_set_exposures)
  (return-type none)
  (parameter (type-and-name gboolean exposures))
)

(method set_line_attributes
  (of-object GC (Gdk))
  (c-name gdk_gc_set_line_attributes)
  (return-type none)
  (parameter (type-and-name gint line_width))
  (parameter (type-and-name GdkLineStyle line_style))
  (parameter (type-and-name GdkCapStyle cap_style))
  (parameter (type-and-name GdkJoinStyle join_style))
)

(method set_dashes
  (of-object GC (Gdk))
  (c-name gdk_gc_set_dashes)
  (return-type none)
  (parameter (type-and-name gint dash_offset))
  (parameter (type-and-name gint8[] dash_list))
  (parameter (type-and-name gint n))
)

(method copy
  (of-object GC (Gdk))
  (c-name gdk_gc_copy)
  (return-type none)
  (parameter (type-and-name GdkGC* src_gc))
)

(method set_colormap
  (of-object GC (Gdk))
  (c-name gdk_gc_set_colormap)
  (return-type none)
  (parameter (type-and-name GdkColormap* colormap))
)

(method get_colormap
  (of-object GC (Gdk))
  (c-name gdk_gc_get_colormap)
  (return-type GdkColormap*)
)

(method set_rgb_fg_color
  (of-object GC (Gdk))
  (c-name gdk_gc_set_rgb_fg_color)
  (return-type none)
  (parameter (type-and-name GdkColor* color))
)

(method set_rgb_bg_color
  (of-object GC (Gdk))
  (c-name gdk_gc_set_rgb_bg_color)
  (return-type none)
  (parameter (type-and-name GdkColor* color))
)


;; From /opt/pango/include/gtk-2.0/gdk/gdkim.h

(function im_ready
  (c-name gdk_im_ready)
  (return-type gboolean)
)

(function im_begin
  (c-name gdk_im_begin)
  (return-type none)
  (parameter (type-and-name GdkIC* ic))
  (parameter (type-and-name GdkWindow* window))
)

(function im_end
  (c-name gdk_im_end)
  (return-type none)
)

(function im_decide_style
  (c-name gdk_im_decide_style)
  (return-type GdkIMStyle)
  (parameter (type-and-name GdkIMStyle supported_style))
)

(function im_set_best_style
  (c-name gdk_im_set_best_style)
  (return-type GdkIMStyle)
  (parameter (type-and-name GdkIMStyle best_allowed_style))
)

(function ic_new
  (c-name gdk_ic_new)
  (return-type GdkIC*)
  (parameter (type-and-name GdkICAttr* attr))
  (parameter (type-and-name GdkICAttributesType mask))
)

(method destroy
  (of-object IC (Gdk))
  (c-name gdk_ic_destroy)
  (return-type none)
)

(method get_style
  (of-object IC (Gdk))
  (c-name gdk_ic_get_style)
  (return-type GdkIMStyle)
)

(method get_events
  (of-object IC (Gdk))
  (c-name gdk_ic_get_events)
  (return-type GdkEventMask)
)

(function ic_attr_new
  (c-name gdk_ic_attr_new)
  (return-type GdkICAttr*)
)

(method destroy
  (of-object ICAttr (Gdk))
  (c-name gdk_ic_attr_destroy)
  (return-type none)
)

(method set_attr
  (of-object IC (Gdk))
  (c-name gdk_ic_set_attr)
  (return-type GdkICAttributesType)
  (parameter (type-and-name GdkICAttr* attr))
  (parameter (type-and-name GdkICAttributesType mask))
)

(method get_attr
  (of-object IC (Gdk))
  (c-name gdk_ic_get_attr)
  (return-type GdkICAttributesType)
  (parameter (type-and-name GdkICAttr* attr))
  (parameter (type-and-name GdkICAttributesType mask))
)



;; From /opt/pango/include/gtk-2.0/gdk/gdkimage.h

(function gdk_image_get_type
  (c-name gdk_image_get_type)
  (return-type GType)
)

(function gdk_image_new_bitmap
  (c-name gdk_image_new_bitmap)
  (return-type GdkImage*)
  (parameter (type-and-name GdkVisual* visual))
  (parameter (type-and-name gpointer data))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(function gdk_image_new
  (is-constructor-of GdkImage)
  (c-name gdk_image_new)
  (return-type GdkImage*)
  (parameter (type-and-name GdkImageType type))
  (parameter (type-and-name GdkVisual* visual))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(method image_get
  (of-object Drawable (Gdk))
  (c-name gdk_image_get)
  (return-type GdkImage*)
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(method put_pixel
  (of-object Image (Gdk))
  (c-name gdk_image_put_pixel)
  (return-type none)
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name guint32 pixel))
)

(method get_pixel
  (of-object Image (Gdk))
  (c-name gdk_image_get_pixel)
  (return-type guint32)
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
)



;; From /opt/pango/include/gtk-2.0/gdk/gdkinput.h

(function input_list_devices
  (c-name gdk_input_list_devices)
  (return-type GList*)
)

(method input_set_extension_events
  (of-object Window (Gdk))
  (c-name gdk_input_set_extension_events)
  (return-type none)
  (parameter (type-and-name gint mask))
  (parameter (type-and-name GdkExtensionMode mode))
)

(function input_set_mode
  (c-name gdk_input_set_mode)
  (return-type gboolean)
  (parameter (type-and-name guint32 deviceid))
  (parameter (type-and-name GdkInputMode mode))
)

(function input_set_axes
  (c-name gdk_input_set_axes)
  (return-type none)
  (parameter (type-and-name guint32 deviceid))
  (parameter (type-and-name GdkAxisUse* axes))
)

(method input_window_get_pointer
  (of-object Window (Gdk))
  (c-name gdk_input_window_get_pointer)
  (return-type none)
  (parameter (type-and-name guint32 deviceid))
  (parameter (type-and-name gdouble* x))
  (parameter (type-and-name gdouble* y))
  (parameter (type-and-name gdouble* pressure))
  (parameter (type-and-name gdouble* xtilt))
  (parameter (type-and-name gdouble* ytilt))
  (parameter (type-and-name GdkModifierType* mask))
)

(method input_motion_events
  (of-object Window (Gdk))
  (c-name gdk_input_motion_events)
  (return-type GdkTimeCoord*)
  (parameter (type-and-name guint32 deviceid))
  (parameter (type-and-name guint32 start))
  (parameter (type-and-name guint32 stop))
  (parameter (type-and-name gint* nevents_return))
)


;; From /opt/pango/include/gtk-2.0/gdk-pixbuf/gdk-pixbuf.h

(method get_colorspace
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_get_colorspace)
  (return-type GdkColorspace)
)

(method get_n_channels
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_get_n_channels)
  (return-type int)
)

(method get_has_alpha
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_get_has_alpha)
  (return-type gboolean)
)

(method get_bits_per_sample
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_get_bits_per_sample)
  (return-type int)
)

(method get_pixels
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_get_pixels)
  (return-type guchar*)
)

(method get_width
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_get_width)
  (return-type int)
)

(method get_height
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_get_height)
  (return-type int)
)

(method get_rowstride
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_get_rowstride)
  (return-type int)
)

(function gdk_pixbuf_new
  (is-constructor-of GdkPixbuf)
  (c-name gdk_pixbuf_new)
  (return-type GdkPixbuf*)
  (parameter (type-and-name GdkColorspace colorspace))
  (parameter (type-and-name gboolean has_alpha))
  (parameter (type-and-name int bits_per_sample))
  (parameter (type-and-name int width))
  (parameter (type-and-name int height))
)

(method copy
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_copy)
  (return-type GdkPixbuf*)
)

(function gdk_pixbuf_new_from_file
  (is-constructor-of GdkPixbuf)
  (c-name gdk_pixbuf_new_from_file)
  (return-type GdkPixbuf*)
  (parameter (type-and-name const-char* filename))
  (parameter (type-and-name GError** error))
)

(function pixbuf_new_from_data
  (c-name gdk_pixbuf_new_from_data)
  (return-type GdkPixbuf*)
  (parameter (type-and-name const-guchar* data))
  (parameter (type-and-name GdkColorspace colorspace))
  (parameter (type-and-name gboolean has_alpha))
  (parameter (type-and-name int bits_per_sample))
  (parameter (type-and-name int width))
  (parameter (type-and-name int height))
  (parameter (type-and-name int rowstride))
  (parameter (type-and-name GdkPixbufDestroyNotify destroy_fn))
  (parameter (type-and-name gpointer destroy_fn_data))
)

(function pixbuf_new_from_xpm_data
  (c-name gdk_pixbuf_new_from_xpm_data)
  (return-type GdkPixbuf*)
  (parameter (type-and-name const-char** data))
)

(function gdk_pixbuf_new_from_inline
  (c-name gdk_pixbuf_new_from_inline)
  (return-type GdkPixbuf*)
  (parameter (type-and-name const-guchar* inline_pixbuf))
  (parameter (type-and-name gboolean copy_pixels))
  (parameter (type-and-name int length))
  (parameter (type-and-name GError** error))
)

(method save
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_save)
  (return-type gboolean)
  (parameter (type-and-name const-char* filename))
  (parameter (type-and-name const-char* type))
  (parameter (type-and-name GError** error))
  (varargs t)
)

(method savev
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_savev)
  (return-type gboolean)
  (parameter (type-and-name const-char* filename))
  (parameter (type-and-name const-char* type))
  (parameter (type-and-name char** option_keys))
  (parameter (type-and-name char** option_values))
  (parameter (type-and-name GError** error))
)

(method add_alpha
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_add_alpha)
  (return-type GdkPixbuf*)
  (parameter (type-and-name gboolean substitute_color))
  (parameter (type-and-name guchar r))
  (parameter (type-and-name guchar g))
  (parameter (type-and-name guchar b))
)

(method copy_area
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_copy_area)
  (return-type none)
  (parameter (type-and-name int src_x))
  (parameter (type-and-name int src_y))
  (parameter (type-and-name int width))
  (parameter (type-and-name int height))
  (parameter (type-and-name GdkPixbuf* dest_pixbuf))
  (parameter (type-and-name int dest_x))
  (parameter (type-and-name int dest_y))
)

(method saturate_and_pixelate
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_saturate_and_pixelate)
  (return-type none)
  (parameter (type-and-name GdkPixbuf* dest))
  (parameter (type-and-name gfloat saturation))
  (parameter (type-and-name gboolean pixelate))
)

(method scale
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_scale)
  (return-type none)
  (parameter (type-and-name GdkPixbuf* dest))
  (parameter (type-and-name int dest_x))
  (parameter (type-and-name int dest_y))
  (parameter (type-and-name int dest_width))
  (parameter (type-and-name int dest_height))
  (parameter (type-and-name double offset_x))
  (parameter (type-and-name double offset_y))
  (parameter (type-and-name double scale_x))
  (parameter (type-and-name double scale_y))
  (parameter (type-and-name GdkInterpType interp_type))
)

(method composite
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_composite)
  (return-type none)
  (parameter (type-and-name GdkPixbuf* dest))
  (parameter (type-and-name int dest_x))
  (parameter (type-and-name int dest_y))
  (parameter (type-and-name int dest_width))
  (parameter (type-and-name int dest_height))
  (parameter (type-and-name double offset_x))
  (parameter (type-and-name double offset_y))
  (parameter (type-and-name double scale_x))
  (parameter (type-and-name double scale_y))
  (parameter (type-and-name GdkInterpType interp_type))
  (parameter (type-and-name int overall_alpha))
)

(method composite_color
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_composite_color)
  (return-type none)
  (parameter (type-and-name GdkPixbuf* dest))
  (parameter (type-and-name int dest_x))
  (parameter (type-and-name int dest_y))
  (parameter (type-and-name int dest_width))
  (parameter (type-and-name int dest_height))
  (parameter (type-and-name double offset_x))
  (parameter (type-and-name double offset_y))
  (parameter (type-and-name double scale_x))
  (parameter (type-and-name double scale_y))
  (parameter (type-and-name GdkInterpType interp_type))
  (parameter (type-and-name int overall_alpha))
  (parameter (type-and-name int check_x))
  (parameter (type-and-name int check_y))
  (parameter (type-and-name int check_size))
  (parameter (type-and-name guint32 color1))
  (parameter (type-and-name guint32 color2))
)

(method scale_simple
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_scale_simple)
  (return-type GdkPixbuf*)
  (parameter (type-and-name int dest_width))
  (parameter (type-and-name int dest_height))
  (parameter (type-and-name GdkInterpType interp_type))
)

(method composite_color_simple
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_composite_color_simple)
  (return-type GdkPixbuf*)
  (parameter (type-and-name int dest_width))
  (parameter (type-and-name int dest_height))
  (parameter (type-and-name GdkInterpType interp_type))
  (parameter (type-and-name int overall_alpha))
  (parameter (type-and-name int check_size))
  (parameter (type-and-name guint32 color1))
  (parameter (type-and-name guint32 color2))
)

(function gdk_pixbuf_animation_get_type
  (c-name gdk_pixbuf_animation_get_type)
  (return-type GType)
)

(function gdk_pixbuf_animation_new_from_file
  (is-constructor-of GdkPixbufAnimation)
  (c-name gdk_pixbuf_animation_new_from_file)
  (return-type GdkPixbufAnimation*)
  (parameter (type-and-name const-char* filename))
  (parameter (type-and-name GError** error))
)

(method get_width
  (of-object PixbufAnimation (Gdk))
  (c-name gdk_pixbuf_animation_get_width)
  (return-type int)
)

(method get_height
  (of-object PixbufAnimation (Gdk))
  (c-name gdk_pixbuf_animation_get_height)
  (return-type int)
)

(method get_frames
  (of-object PixbufAnimation (Gdk))
  (c-name gdk_pixbuf_animation_get_frames)
  (return-type GList*)
)

(method get_num_frames
  (of-object PixbufAnimation (Gdk))
  (c-name gdk_pixbuf_animation_get_num_frames)
  (return-type int)
)

(method get_pixbuf
  (of-object PixbufFrame (Gdk))
  (c-name gdk_pixbuf_frame_get_pixbuf)
  (return-type GdkPixbuf*)
)

(method get_x_offset
  (of-object PixbufFrame (Gdk))
  (c-name gdk_pixbuf_frame_get_x_offset)
  (return-type int)
)

(method get_y_offset
  (of-object PixbufFrame (Gdk))
  (c-name gdk_pixbuf_frame_get_y_offset)
  (return-type int)
)

(method get_delay_time
  (of-object PixbufFrame (Gdk))
  (c-name gdk_pixbuf_frame_get_delay_time)
  (return-type int)
)

(method get_action
  (of-object PixbufFrame (Gdk))
  (c-name gdk_pixbuf_frame_get_action)
  (return-type GdkPixbufFrameAction)
)

(function gdk_pixbuf_preinit
  (c-name gdk_pixbuf_preinit)
  (return-type none)
  (parameter (type-and-name gpointer app))
  (parameter (type-and-name gpointer modinfo))
)

(function gdk_pixbuf_postinit
  (c-name gdk_pixbuf_postinit)
  (return-type none)
  (parameter (type-and-name gpointer app))
  (parameter (type-and-name gpointer modinfo))
)

(function gdk_pixbuf_init
  (c-name gdk_pixbuf_init)
  (return-type none)
)

;; From /opt/pango/include/gtk-2.0/gdk/gdkpixbuf.h

(method render_to_drawable
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_render_to_drawable)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name int src_x))
  (parameter (type-and-name int src_y))
  (parameter (type-and-name int dest_x))
  (parameter (type-and-name int dest_y))
  (parameter (type-and-name int width))
  (parameter (type-and-name int height))
  (parameter (type-and-name GdkRgbDither dither))
  (parameter (type-and-name int x_dither))
  (parameter (type-and-name int y_dither))
)

(method render_to_drawable_alpha
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_render_to_drawable_alpha)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name int src_x))
  (parameter (type-and-name int src_y))
  (parameter (type-and-name int dest_x))
  (parameter (type-and-name int dest_y))
  (parameter (type-and-name int width))
  (parameter (type-and-name int height))
  (parameter (type-and-name GdkPixbufAlphaMode alpha_mode))
  (parameter (type-and-name int alpha_threshold))
  (parameter (type-and-name GdkRgbDither dither))
  (parameter (type-and-name int x_dither))
  (parameter (type-and-name int y_dither))
)

(method render_pixmap_and_mask
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_render_pixmap_and_mask)
  (return-type none)
  (parameter (type-and-name GdkPixmap** pixmap_return))
  (parameter (type-and-name GdkBitmap** mask_return))
  (parameter (type-and-name int alpha_threshold))
)

(method get_from_drawable
  (of-object Pixbuf (Gdk))
  (c-name gdk_pixbuf_get_from_drawable)
  (return-type GdkPixbuf*)
  (parameter (type-and-name GdkDrawable* src))
  (parameter (type-and-name GdkColormap* cmap))
  (parameter (type-and-name int src_x))
  (parameter (type-and-name int src_y))
  (parameter (type-and-name int dest_x))
  (parameter (type-and-name int dest_y))
  (parameter (type-and-name int width))
  (parameter (type-and-name int height))
)



;; From /opt/pango/include/gtk-2.0/gdk/gdkpixmap.h

(function gdk_pixmap_get_type
  (c-name gdk_pixmap_get_type)
  (return-type GType)
)

(function gdk_pixmap_new
  (is-constructor-of GdkPixmap)
  (c-name gdk_pixmap_new)
  (return-type GdkPixmap*)
  (parameter (type-and-name GdkWindow* window) (null-ok))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name gint depth) (default -1))
)

(function bitmap_create_from_data
  (c-name gdk_bitmap_create_from_data)
  (return-type GdkBitmap*)
  (parameter (type-and-name GdkWindow* window))
  (parameter (type-and-name const-gchar* data))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(function pixmap_create_from_data
  (c-name gdk_pixmap_create_from_data)
  (return-type GdkPixmap*)
  (parameter (type-and-name GdkWindow* window))
  (parameter (type-and-name const-gchar* data))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name gint depth))
  (parameter (type-and-name GdkColor* fg))
  (parameter (type-and-name GdkColor* bg))
)

(function pixmap_create_from_xpm
  (c-name gdk_pixmap_create_from_xpm)
  (return-type GdkPixmap*)
  (parameter (type-and-name GdkWindow* window))
  (parameter (type-and-name GdkBitmap** mask))
  (parameter (type-and-name GdkColor* transparent_color))
  (parameter (type-and-name const-gchar* filename))
)

(function pixmap_colormap_create_from_xpm
  (c-name gdk_pixmap_colormap_create_from_xpm)
  (return-type GdkPixmap*)
  (parameter (type-and-name GdkWindow* window))
  (parameter (type-and-name GdkColormap* colormap))
  (parameter (type-and-name GdkBitmap** mask))
  (parameter (type-and-name GdkColor* transparent_color))
  (parameter (type-and-name const-gchar* filename))
)

(function pixmap_create_from_xpm_d
  (c-name gdk_pixmap_create_from_xpm_d)
  (return-type GdkPixmap*)
  (parameter (type-and-name GdkWindow* window))
  (parameter (type-and-name GdkBitmap** mask))
  (parameter (type-and-name GdkColor* transparent_color))
  (parameter (type-and-name gchar** data))
)

(function pixmap_colormap_create_from_xpm_d
  (c-name gdk_pixmap_colormap_create_from_xpm_d)
  (return-type GdkPixmap*)
  (parameter (type-and-name GdkWindow* window))
  (parameter (type-and-name GdkColormap* colormap))
  (parameter (type-and-name GdkBitmap** mask))
  (parameter (type-and-name GdkColor* transparent_color))
  (parameter (type-and-name gchar** data))
)



;; From /opt/pango/include/gtk-2.0/gdk/gdkproperty.h

(method name
  (of-object Atom (Gdk))
  (c-name gdk_atom_name)
  (return-type gchar*)
)

(method property_get
  (of-object Window (Gdk))
  (c-name gdk_property_get)
  (return-type gboolean)
  (parameter (type-and-name GdkAtom property))
  (parameter (type-and-name GdkAtom type))
  (parameter (type-and-name gulong offset))
  (parameter (type-and-name gulong length))
  (parameter (type-and-name gint pdelete))
  (parameter (type-and-name GdkAtom* actual_property_type))
  (parameter (type-and-name gint* actual_format))
  (parameter (type-and-name gint* actual_length))
  (parameter (type-and-name guchar** data))
)

(method property_change
  (of-object Window (Gdk))
  (c-name gdk_property_change)
  (return-type none)
  (parameter (type-and-name GdkAtom property))
  (parameter (type-and-name GdkAtom type))
  (parameter (type-and-name gint format))
  (parameter (type-and-name GdkPropMode mode))
  (parameter (type-and-name const-guchar* data))
  (parameter (type-and-name gint nelements))
)

(method property_delete
  (of-object Window (Gdk))
  (c-name gdk_property_delete)
  (return-type none)
  (parameter (type-and-name GdkAtom property))
)


;; From /opt/pango/include/gtk-2.0/gdk/gdkrgb.h

(function gdk_rgb_xpixel_from_rgb
  (c-name gdk_rgb_xpixel_from_rgb)
  (return-type gulong)
  (parameter (type-and-name guint32 rgb))
)

(function gdk_rgb_gc_set_foreground
  (c-name gdk_rgb_gc_set_foreground)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name guint32 rgb))
)

(function gdk_rgb_gc_set_background
  (c-name gdk_rgb_gc_set_background)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name guint32 rgb))
)

(method draw_rgb_image
  (of-object Drawable (Gdk))
  (c-name gdk_draw_rgb_image)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name GdkRgbDither dith))
  (parameter (type-and-name guchar* rgb_buf))
  (parameter (type-and-name gint rowstride))
)

(method draw_rgb_image_dithalign
  (of-object Drawable (Gdk))
  (c-name gdk_draw_rgb_image_dithalign)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name GdkRgbDither dith))
  (parameter (type-and-name guchar* rgb_buf))
  (parameter (type-and-name gint rowstride))
  (parameter (type-and-name gint xdith))
  (parameter (type-and-name gint ydith))
)

(method draw_rgb_32_image
  (of-object Drawable (Gdk))
  (c-name gdk_draw_rgb_32_image)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name GdkRgbDither dith))
  (parameter (type-and-name guchar* buf))
  (parameter (type-and-name gint rowstride))
)

(method draw_gray_image
  (of-object Drawable (Gdk))
  (c-name gdk_draw_gray_image)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name GdkRgbDither dith))
  (parameter (type-and-name guchar* buf))
  (parameter (type-and-name gint rowstride))
)

(function rgb_cmap_new
  (c-name gdk_rgb_cmap_new)
  (return-type GdkRgbCmap*)
  (parameter (type-and-name guint32* colors))
  (parameter (type-and-name gint n_colors))
)

(method draw_indexed_image
  (of-object Drawable (Gdk))
  (c-name gdk_draw_indexed_image)
  (return-type none)
  (parameter (type-and-name GdkGC* gc))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
  (parameter (type-and-name GdkRgbDither dith))
  (parameter (type-and-name guchar* buf))
  (parameter (type-and-name gint rowstride))
  (parameter (type-and-name GdkRgbCmap* cmap))
)

(function rgb_ditherable
  (c-name gdk_rgb_ditherable)
  (return-type gboolean)
)

(function rgb_set_verbose
  (c-name gdk_rgb_set_verbose)
  (return-type none)
  (parameter (type-and-name gboolean verbose))
)

(function rgb_set_install
  (c-name gdk_rgb_set_install)
  (return-type none)
  (parameter (type-and-name gboolean install))
)

(function rgb_set_min_colors
  (c-name gdk_rgb_set_min_colors)
  (return-type none)
  (parameter (type-and-name gint min_colors))
)

(function rgb_get_cmap
  (c-name gdk_rgb_get_cmap)
  (return-type GdkColormap*)
)

(function rgb_get_visual
  (c-name gdk_rgb_get_visual)
  (return-type GdkVisual*)
)



;; From /opt/pango/include/gtk-2.0/gdk/gdkselection.h

(function selection_owner_get
  (c-name gdk_selection_owner_get)
  (return-type GdkWindow*)
  (parameter (type-and-name GdkAtom selection))
)

(method selection_convert
  (of-object Window (Gdk))
  (c-name gdk_selection_convert)
  (return-type none)
  (parameter (type-and-name GdkAtom selection))
  (parameter (type-and-name GdkAtom target))
  (parameter (type-and-name guint32 time))
)

(method selection_property_get
  (of-object Window (Gdk))
  (c-name gdk_selection_property_get)
  (return-type gboolean)
  (parameter (type-and-name guchar** data))
  (parameter (type-and-name GdkAtom* prop_type))
  (parameter (type-and-name gint* prop_format))
)

(function selection_send_notify
  (c-name gdk_selection_send_notify)
  (return-type none)
  (parameter (type-and-name guint32 requestor))
  (parameter (type-and-name GdkAtom selection))
  (parameter (type-and-name GdkAtom target))
  (parameter (type-and-name GdkAtom property))
  (parameter (type-and-name guint32 time))
)



;; From /opt/pango/include/gtk-2.0/gdk/gdkvisual.h

(function visual_get_best_depth
  (c-name gdk_visual_get_best_depth)
  (return-type gint)
)

(function visual_get_best_type
  (c-name gdk_visual_get_best_type)
  (return-type GdkVisualType)
)

(function visual_get_system
  (c-name gdk_visual_get_system)
  (return-type GdkVisual*)
)

(function visual_get_best
  (c-name gdk_visual_get_best)
  (return-type GdkVisual*)
)

(function visual_get_best_with_depth
  (c-name gdk_visual_get_best_with_depth)
  (return-type GdkVisual*)
  (parameter (type-and-name gint depth))
)

(function visual_get_best_with_type
  (c-name gdk_visual_get_best_with_type)
  (return-type GdkVisual*)
  (parameter (type-and-name GdkVisualType visual_type))
)

(function visual_get_best_with_both
  (is-constructor-of GdkVisual)
  (c-name gdk_visual_get_best_with_both)
  (return-type GdkVisual*)
  (parameter (type-and-name gint depth))
  (parameter (type-and-name GdkVisualType visual_type))
)

(function query_depths
  (c-name gdk_query_depths)
  (return-type none)
  (parameter (type-and-name gint** depths))
  (parameter (type-and-name gint* count))
)

(function query_visual_types
  (c-name gdk_query_visual_types)
  (return-type none)
  (parameter (type-and-name GdkVisualType** visual_types))
  (parameter (type-and-name gint* count))
)

(function list_visuals
  (c-name gdk_list_visuals)
  (return-type GList*)
)



;; From /opt/pango/include/gtk-2.0/gdk/gdkwindow.h

(function gdk_window_object_get_type
  (c-name gdk_window_object_get_type)
  (return-type GType)
)

(function new
  (is-constructor-of GdkWindow)
  (c-name gdk_window_new)
  (return-type GdkWindow*)
  (parameter (type-and-name GdkWindow* parent))
  (parameter (type-and-name GdkWindowAttr* attributes))
  (parameter (type-and-name gint attributes_mask))
)

(method destroy
  (of-object Window (Gdk))
  (c-name gdk_window_destroy)
  (return-type none)
)

(method get_window_type
  (of-object Window (Gdk))
  (c-name gdk_window_get_window_type)
  (return-type GdkWindowType)
)

(function window_at_pointer
  (c-name gdk_window_at_pointer)
  (return-type GdkWindow*)
  (parameter (type-and-name gint* win_x))
  (parameter (type-and-name gint* win_y))
)

(method show
  (of-object Window (Gdk))
  (c-name gdk_window_show)
  (return-type none)
)

(method hide
  (of-object Window (Gdk))
  (c-name gdk_window_hide)
  (return-type none)
)

(method withdraw
  (of-object Window (Gdk))
  (c-name gdk_window_withdraw)
  (return-type none)
)

(method move
  (of-object Window (Gdk))
  (c-name gdk_window_move)
  (return-type none)
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
)

(method resize
  (of-object Window (Gdk))
  (c-name gdk_window_resize)
  (return-type none)
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(method move_resize
  (of-object Window (Gdk))
  (c-name gdk_window_move_resize)
  (return-type none)
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(method reparent
  (of-object Window (Gdk))
  (c-name gdk_window_reparent)
  (return-type none)
  (parameter (type-and-name GdkWindow* new_parent))
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
)

(method clear
  (of-object Window (Gdk))
  (c-name gdk_window_clear)
  (return-type none)
)

(method clear_area
  (of-object Window (Gdk))
  (c-name gdk_window_clear_area)
  (return-type none)
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(method clear_area_e
  (of-object Window (Gdk))
  (c-name gdk_window_clear_area_e)
  (return-type none)
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)

(method raise
  (of-object Window (Gdk))
  (c-name gdk_window_raise)
  (return-type none)
)

(method lower
  (of-object Window (Gdk))
  (c-name gdk_window_lower)
  (return-type none)
)

(method set_override_redirect
  (of-object Window (Gdk))
  (c-name gdk_window_set_override_redirect)
  (return-type none)
  (parameter (type-and-name gboolean override_redirect))
)

(method add_filter
  (of-object Window (Gdk))
  (c-name gdk_window_add_filter)
  (return-type none)
  (parameter (type-and-name GdkFilterFunc function))
  (parameter (type-and-name gpointer data))
)

(method remove_filter
  (of-object Window (Gdk))
  (c-name gdk_window_remove_filter)
  (return-type none)
  (parameter (type-and-name GdkFilterFunc function))
  (parameter (type-and-name gpointer data))
)

(method scroll
  (of-object Window (Gdk))
  (c-name gdk_window_scroll)
  (return-type none)
  (parameter (type-and-name gint dx))
  (parameter (type-and-name gint dy))
)

(method shape_combine_mask
  (of-object Window (Gdk))
  (c-name gdk_window_shape_combine_mask)
  (return-type none)
  (parameter (type-and-name GdkBitmap* shape_mask))
  (parameter (type-and-name gint offset_x))
  (parameter (type-and-name gint offset_y))
)

(method set_child_shapes
  (of-object Window (Gdk))
  (c-name gdk_window_set_child_shapes)
  (return-type none)
)

(method merge_child_shapes
  (of-object Window (Gdk))
  (c-name gdk_window_merge_child_shapes)
  (return-type none)
)

(method is_visible
  (of-object Window (Gdk))
  (c-name gdk_window_is_visible)
  (return-type gboolean)
)

(method is_viewable
  (of-object Window (Gdk))
  (c-name gdk_window_is_viewable)
  (return-type gboolean)
)

(method set_static_gravities
  (of-object Window (Gdk))
  (c-name gdk_window_set_static_gravities)
  (return-type gboolean)
  (parameter (type-and-name gboolean use_static))
)

(method set_hints
  (of-object Window (Gdk))
  (c-name gdk_window_set_hints)
  (return-type none)
  (parameter (type-and-name gint x))
  (parameter (type-and-name gint y))
  (parameter (type-and-name gint min_width))
  (parameter (type-and-name gint min_height))
  (parameter (type-and-name gint max_width))
  (parameter (type-and-name gint max_height))
  (parameter (type-and-name gint flags))
)

(method set_geometry_hints
  (of-object Window (Gdk))
  (c-name gdk_window_set_geometry_hints)
  (return-type none)
  (parameter (type-and-name GdkGeometry* geometry))
  (parameter (type-and-name GdkWindowHints flags))
)

(function set_sm_client_id
  (c-name gdk_set_sm_client_id)
  (return-type none)
  (parameter (type-and-name const-gchar* sm_client_id))
)

(method begin_paint_rect
  (of-object Window (Gdk))
  (c-name gdk_window_begin_paint_rect)
  (return-type none)
  (parameter (type-and-name GdkRectangle* rectangle))
)

(method begin_paint_region
  (of-object Window (Gdk))
  (c-name gdk_window_begin_paint_region)
  (return-type none)
  (parameter (type-and-name GdkRegion* region))
)

(method end_paint
  (of-object Window (Gdk))
  (c-name gdk_window_end_paint)
  (return-type none)
)

(method set_title
  (of-object Window (Gdk))
  (c-name gdk_window_set_title)
  (return-type none)
  (parameter (type-and-name const-gchar* title))
)

(method set_role
  (of-object Window (Gdk))
  (c-name gdk_window_set_role)
  (return-type none)
  (parameter (type-and-name const-gchar* role))
)

(method set_transient_for
  (of-object Window (Gdk))
  (c-name gdk_window_set_transient_for)
  (return-type none)
  (parameter (type-and-name GdkWindow* leader))
)

(method set_background
  (of-object Window (Gdk))
  (c-name gdk_window_set_background)
  (return-type none)
  (parameter (type-and-name GdkColor* color))
)

(method set_back_pixmap
  (of-object Window (Gdk))
  (c-name gdk_window_set_back_pixmap)
  (return-type none)
  (parameter (type-and-name GdkPixmap* pixmap))
  (parameter (type-and-name gboolean parent_relative))
)

(method set_cursor
  (of-object Window (Gdk))
  (c-name gdk_window_set_cursor)
  (return-type none)
  (parameter (type-and-name GdkCursor* cursor))
)

(method get_geometry
  (of-object Window (Gdk))
  (c-name gdk_window_get_geometry)
  (return-type none)
  (parameter (type-and-name gint* x))
  (parameter (type-and-name gint* y))
  (parameter (type-and-name gint* width))
  (parameter (type-and-name gint* height))
  (parameter (type-and-name gint* depth))
)

(method get_position
  (of-object Window (Gdk))
  (c-name gdk_window_get_position)
  (return-type none)
  (parameter (type-and-name gint* x))
  (parameter (type-and-name gint* y))
)

(method get_origin
  (of-object Window (Gdk))
  (c-name gdk_window_get_origin)
  (return-type gint)
  (parameter (type-and-name gint* x))
  (parameter (type-and-name gint* y))
)

(method get_deskrelative_origin
  (of-object Window (Gdk))
  (c-name gdk_window_get_deskrelative_origin)
  (return-type gboolean)
  (parameter (type-and-name gint* x))
  (parameter (type-and-name gint* y))
)

(method get_root_origin
  (of-object Window (Gdk))
  (c-name gdk_window_get_root_origin)
  (return-type none)
  (parameter (type-and-name gint* x))
  (parameter (type-and-name gint* y))
)

(method get_pointer
  (of-object Window (Gdk))
  (c-name gdk_window_get_pointer)
  (return-type GdkWindow*)
  (parameter (type-and-name gint* x))
  (parameter (type-and-name gint* y))
  (parameter (type-and-name GdkModifierType* mask))
)

(method get_parent
  (of-object Window (Gdk))
  (c-name gdk_window_get_parent)
  (return-type GdkWindow*)
)

(method get_toplevel
  (of-object Window (Gdk))
  (c-name gdk_window_get_toplevel)
  (return-type GdkWindow*)
)

(method get_children
  (of-object Window (Gdk))
  (c-name gdk_window_get_children)
  (return-type GList*)
)

(method peek_children
  (of-object Window (Gdk))
  (c-name gdk_window_peek_children)
  (return-type GList*)
)

(method get_events
  (of-object Window (Gdk))
  (c-name gdk_window_get_events)
  (return-type GdkEventMask)
)

(method set_events
  (of-object Window (Gdk))
  (c-name gdk_window_set_events)
  (return-type none)
  (parameter (type-and-name GdkEventMask event_mask))
)

(method set_icon
  (of-object Window (Gdk))
  (c-name gdk_window_set_icon)
  (return-type none)
  (parameter (type-and-name GdkWindow* icon_window))
  (parameter (type-and-name GdkPixmap* pixmap))
  (parameter (type-and-name GdkBitmap* mask))
)

(method set_icon_name
  (of-object Window (Gdk))
  (c-name gdk_window_set_icon_name)
  (return-type none)
  (parameter (type-and-name const-gchar* name))
)

(method set_group
  (of-object Window (Gdk))
  (c-name gdk_window_set_group)
  (return-type none)
  (parameter (type-and-name GdkWindow* leader))
)

(method set_decorations
  (of-object Window (Gdk))
  (c-name gdk_window_set_decorations)
  (return-type none)
  (parameter (type-and-name GdkWMDecoration decorations))
)

(method set_functions
  (of-object Window (Gdk))
  (c-name gdk_window_set_functions)
  (return-type none)
  (parameter (type-and-name GdkWMFunction functions))
)

(function gdk_window_get_toplevels
  (c-name gdk_window_get_toplevels)
  (return-type GList*)
)

(method register_dnd
  (of-object Window (Gdk))
  (c-name gdk_window_register_dnd)
  (return-type none)
)

(method invalidate_rect
  (of-object Window (Gdk))
  (c-name gdk_window_invalidate_rect)
  (return-type none)
  (parameter (type-and-name GdkRectangle* rect))
  (parameter (type-and-name gboolean invalidate_children))
)

(method invalidate_region
  (of-object Window (Gdk))
  (c-name gdk_window_invalidate_region)
  (return-type none)
  (parameter (type-and-name GdkRegion* region))
  (parameter (type-and-name gboolean invalidate_children))
)

(method get_update_area
  (of-object Window (Gdk))
  (c-name gdk_window_get_update_area)
  (return-type GdkRegion*)
)

(method freeze_updates
  (of-object Window (Gdk))
  (c-name gdk_window_freeze_updates)
  (return-type none)
)

(method thaw_updates
  (of-object Window (Gdk))
  (c-name gdk_window_thaw_updates)
  (return-type none)
)

(method process_updates
  (of-object Window (Gdk))
  (c-name gdk_window_process_updates)
  (return-type none)
  (parameter (type-and-name gboolean update_children))
)


