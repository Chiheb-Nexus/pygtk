;; -*- scheme -*-
; object definitions ...
(define-object Colormap
  (in-module "Gdk")
  (parent "GObject")
  (c-name "GdkColormap")
  (gtype-id "GDK_TYPE_COLORMAP")
)

(define-object Device
  (in-module "Gdk")
  (parent "GObject")
  (c-name "GdkDevice")
  (gtype-id "GDK_TYPE_DEVICE")
  (fields
    '("gchar*" "name")
    '("GdkInputSource" "source")
    '("GdkInputMode" "mode")
    '("gboolean" "has_cursor")
    '("gint" "num_axes")
    '("GdkDeviceAxis*" "axes")
    '("gint" "num_keys")
    '("GdkDeviceKey*" "keys")
  )
)

(define-object DragContext
  (in-module "Gdk")
  (parent "GObject")
  (c-name "GdkDragContext")
  (gtype-id "GDK_TYPE_DRAG_CONTEXT")
  (fields
    '("GdkDragProtocol" "protocol")
    '("gboolean" "is_source")
    '("GdkWindow*" "source_window")
    '("GdkWindow*" "dest_window")
    '("GList*" "targets")
    '("GdkDragAction" "actions")
    '("GdkDragAction" "suggested_action")
    '("GdkDragAction" "action")
    '("guint32" "start_time")
  )
)

(define-object Drawable
  (in-module "Gdk")
  (parent "GObject")
  (c-name "GdkDrawable")
  (gtype-id "GDK_TYPE_DRAWABLE")
)

; this is fudged a little ...
(define-object Window
  (in-module "Gdk")
  (parent "GdkDrawable")
  (c-name "GdkWindow")
  (gtype-id "GDK_TYPE_WINDOW")
)

(define-object Pixmap
  (in-module "Gdk")
  (parent "GdkDrawable")
  (c-name "GdkPixmap")
  (gtype-id "GDK_TYPE_PIXMAP")
)

(define-object GC
  (in-module "Gdk")
  (parent "GObject")
  (c-name "GdkGC")
  (gtype-id "GDK_TYPE_GC")
)

(define-object Image
  (in-module "Gdk")
  (parent "GObject")
  (c-name "GdkImage")
  (gtype-id "GDK_TYPE_IMAGE")
)

(define-object Pixbuf
  (in-module "Gdk")
  (parent "GObject")
  (c-name "GdkPixbuf")
  (gtype-id "GDK_TYPE_PIXBUF")
)

(define-object PixbufAnimation
  (in-module "Gdk")
  (parent "GObject")
  (c-name "GdkPixbufAnimation")
  (gtype-id "GDK_TYPE_PIXBUF_ANIMATION")
)

(define-object PixbufAnimationIter
  (in-module "Gdk")
  (parent "GObject")
  (c-name "GdkPixbufAnimationIter")
  (gtype-id "GDK_TYPE_PIXBUF_ANIMATION_ITER")
)

(define-object Visual
  (in-module "Gdk")
  (parent "GObject")
  (c-name "GdkVisual")
  (gtype-id "GDK_TYPE_VISUAL")
  (fields
    '("GdkVisualType" "type")
    '("gint" "depth")
    '("GdkByteOrder" "byte_order")
    '("gint" "colormap_size")
    '("gint" "bits_per_rgb")
    '("guint32" "red_mask")
    '("gint" "red_shift")
    '("gint" "red_prec")
    '("guint32" "green_mask")
    '("gint" "green_shift")
    '("gint" "green_prec")
    '("guint32" "blue_mask")
    '("gint" "blue_shift")
    '("gint" "blue_prec")
  )
)


;; Boxed types ...

(define-boxed Event
  (in-module "Gdk")
  (c-name "GdkEvent")
  (gtype-id "GDK_TYPE_EVENT")
  (copy-func "gdk_event_copy")
  (release-func "gdk_event_free")
)

(define-boxed Font
  (in-module "Gdk")
  (c-name "GdkFont")
  (gtype-id "GDK_TYPE_FONT")
  (copy-func "gdk_font_ref")
  (release-func "gdk_font_unref")
  (fields
    '("GdkFontType" "type")
    '("gint" "ascent")
    '("gint" "descent")
  )
)

(define-boxed Color
  (in-module "Gdk")
  (c-name "GdkColor")
  (gtype-id "GDK_TYPE_COLOR")
  (copy-func "gdk_color_copy")
  (release-func "gdk_color_free")
  (fields
    '("guint32" "pixel")
    '("guint16" "red")
    '("guint16" "green")
    '("guint16" "blue")
  )
)

(define-boxed Cursor
  (in-module "Gdk")
  (c-name "GdkCursor")
  (gtype-id "GDK_TYPE_CURSOR")
  (copy-func "gdk_cursor_ref")
  (release-func "gdk_cursor_unref")
  (fields
    '("GdkCursorType" "type")
  )
)

(define-boxed Rectangle
  (in-module "Gdk")
  (c-name "GdkRectangle")
  (gtype-id "GDK_TYPE_RECTANGLE")
  (copy-func "gdk_rectangle_copy")
  (release-func "g_free")
  (fields
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

;; Enumerations and flags ...

(define-enum CursorType
  (in-module "Gdk")
  (c-name "GdkCursorType")
  (gtype-id "GDK_TYPE_CURSOR_TYPE")
;  (value (name #include) (c-name #include))
  (values
    '("gdk-cursor-is-pixmap" "GDK_CURSOR_IS_PIXMAP")
  )
)

(define-flags DragAction
  (in-module "Gdk")
  (c-name "GdkDragAction")
  (gtype-id "GDK_TYPE_DRAG_ACTION")
  (values
    '("default" "GDK_ACTION_DEFAULT")
    '("copy" "GDK_ACTION_COPY")
    '("move" "GDK_ACTION_MOVE")
    '("link" "GDK_ACTION_LINK")
    '("private" "GDK_ACTION_PRIVATE")
    '("ask" "GDK_ACTION_ASK")
  )
)

(define-enum DragProtocol
  (in-module "Gdk")
  (c-name "GdkDragProtocol")
  (gtype-id "GDK_TYPE_DRAG_PROTOCOL")
  (values
    '("motif" "GDK_DRAG_PROTO_MOTIF")
    '("xdnd" "GDK_DRAG_PROTO_XDND")
    '("rootwin" "GDK_DRAG_PROTO_ROOTWIN")
    '("none" "GDK_DRAG_PROTO_NONE")
    '("win32-dropfiles" "GDK_DRAG_PROTO_WIN32_DROPFILES")
    '("ole2" "GDK_DRAG_PROTO_OLE2")
    '("local" "GDK_DRAG_PROTO_LOCAL")
  )
)

(define-enum FilterReturn
  (in-module "Gdk")
  (c-name "GdkFilterReturn")
  (gtype-id "GDK_TYPE_FILTER_RETURN")
  (values
    '("continue" "GDK_FILTER_CONTINUE")
    '("translate" "GDK_FILTER_TRANSLATE")
    '("remove" "GDK_FILTER_REMOVE")
  )
)

(define-enum EventType
  (in-module "Gdk")
  (c-name "GdkEventType")
  (gtype-id "GDK_TYPE_EVENT_TYPE")
  (values
    '("nothing" "GDK_NOTHING")
    '("delete" "GDK_DELETE")
    '("destroy" "GDK_DESTROY")
    '("expose" "GDK_EXPOSE")
    '("motion-notify" "GDK_MOTION_NOTIFY")
    '("button-press" "GDK_BUTTON_PRESS")
    '("2button-press" "GDK_2BUTTON_PRESS")
    '("3button-press" "GDK_3BUTTON_PRESS")
    '("button-release" "GDK_BUTTON_RELEASE")
    '("key-press" "GDK_KEY_PRESS")
    '("key-release" "GDK_KEY_RELEASE")
    '("enter-notify" "GDK_ENTER_NOTIFY")
    '("leave-notify" "GDK_LEAVE_NOTIFY")
    '("focus-change" "GDK_FOCUS_CHANGE")
    '("configure" "GDK_CONFIGURE")
    '("map" "GDK_MAP")
    '("unmap" "GDK_UNMAP")
    '("property-notify" "GDK_PROPERTY_NOTIFY")
    '("selection-clear" "GDK_SELECTION_CLEAR")
    '("selection-request" "GDK_SELECTION_REQUEST")
    '("selection-notify" "GDK_SELECTION_NOTIFY")
    '("proximity-in" "GDK_PROXIMITY_IN")
    '("proximity-out" "GDK_PROXIMITY_OUT")
    '("drag-enter" "GDK_DRAG_ENTER")
    '("drag-leave" "GDK_DRAG_LEAVE")
    '("drag-motion" "GDK_DRAG_MOTION")
    '("drag-status" "GDK_DRAG_STATUS")
    '("drop-start" "GDK_DROP_START")
    '("drop-finished" "GDK_DROP_FINISHED")
    '("client-event" "GDK_CLIENT_EVENT")
    '("visibility-notify" "GDK_VISIBILITY_NOTIFY")
    '("no-expose" "GDK_NO_EXPOSE")
    '("scroll" "GDK_SCROLL")
    '("window-state" "GDK_WINDOW_STATE")
    '("setting" "GDK_SETTING")
  )
)

(define-flags EventMask
  (in-module "Gdk")
  (c-name "GdkEventMask")
  (gtype-id "GDK_TYPE_EVENT_MASK")
  (values
    '("exposure-mask" "GDK_EXPOSURE_MASK")
    '("pointer-motion-mask" "GDK_POINTER_MOTION_MASK")
    '("pointer-motion-hint-mask" "GDK_POINTER_MOTION_HINT_MASK")
    '("button-motion-mask" "GDK_BUTTON_MOTION_MASK")
    '("button1-motion-mask" "GDK_BUTTON1_MOTION_MASK")
    '("button2-motion-mask" "GDK_BUTTON2_MOTION_MASK")
    '("button3-motion-mask" "GDK_BUTTON3_MOTION_MASK")
    '("button-press-mask" "GDK_BUTTON_PRESS_MASK")
    '("button-release-mask" "GDK_BUTTON_RELEASE_MASK")
    '("key-press-mask" "GDK_KEY_PRESS_MASK")
    '("key-release-mask" "GDK_KEY_RELEASE_MASK")
    '("enter-notify-mask" "GDK_ENTER_NOTIFY_MASK")
    '("leave-notify-mask" "GDK_LEAVE_NOTIFY_MASK")
    '("focus-change-mask" "GDK_FOCUS_CHANGE_MASK")
    '("structure-mask" "GDK_STRUCTURE_MASK")
    '("property-change-mask" "GDK_PROPERTY_CHANGE_MASK")
    '("visibility-notify-mask" "GDK_VISIBILITY_NOTIFY_MASK")
    '("proximity-in-mask" "GDK_PROXIMITY_IN_MASK")
    '("proximity-out-mask" "GDK_PROXIMITY_OUT_MASK")
    '("substructure-mask" "GDK_SUBSTRUCTURE_MASK")
    '("scroll-mask" "GDK_SCROLL_MASK")
    '("all-events-mask" "GDK_ALL_EVENTS_MASK")
  )
)

(define-enum VisibilityState
  (in-module "Gdk")
  (c-name "GdkVisibilityState")
  (gtype-id "GDK_TYPE_VISIBILITY_STATE")
  (values
    '("unobscured" "GDK_VISIBILITY_UNOBSCURED")
    '("partial" "GDK_VISIBILITY_PARTIAL")
    '("fully-obscured" "GDK_VISIBILITY_FULLY_OBSCURED")
  )
)

(define-enum ScrollDirection
  (in-module "Gdk")
  (c-name "GdkScrollDirection")
  (gtype-id "GDK_TYPE_SCROLL_DIRECTION")
  (values
    '("up" "GDK_SCROLL_UP")
    '("down" "GDK_SCROLL_DOWN")
    '("left" "GDK_SCROLL_LEFT")
    '("right" "GDK_SCROLL_RIGHT")
  )
)

(define-enum NotifyType
  (in-module "Gdk")
  (c-name "GdkNotifyType")
  (gtype-id "GDK_TYPE_NOTIFY_TYPE")
  (values
    '("ancestor" "GDK_NOTIFY_ANCESTOR")
    '("virtual" "GDK_NOTIFY_VIRTUAL")
    '("inferior" "GDK_NOTIFY_INFERIOR")
    '("nonlinear" "GDK_NOTIFY_NONLINEAR")
    '("nonlinear-virtual" "GDK_NOTIFY_NONLINEAR_VIRTUAL")
    '("unknown" "GDK_NOTIFY_UNKNOWN")
  )
)

(define-enum CrossingMode
  (in-module "Gdk")
  (c-name "GdkCrossingMode")
  (gtype-id "GDK_TYPE_CROSSING_MODE")
  (values
    '("normal" "GDK_CROSSING_NORMAL")
    '("grab" "GDK_CROSSING_GRAB")
    '("ungrab" "GDK_CROSSING_UNGRAB")
  )
)

(define-enum PropertyState
  (in-module "Gdk")
  (c-name "GdkPropertyState")
  (gtype-id "GDK_TYPE_PROPERTY_STATE")
  (values
    '("new-value" "GDK_PROPERTY_NEW_VALUE")
    '("delete" "GDK_PROPERTY_DELETE")
  )
)

(define-flags WindowState
  (in-module "Gdk")
  (c-name "GdkWindowState")
  (gtype-id "GDK_TYPE_WINDOW_STATE")
  (values
    '("withdrawn" "GDK_WINDOW_STATE_WITHDRAWN")
    '("iconified" "GDK_WINDOW_STATE_ICONIFIED")
    '("maximized" "GDK_WINDOW_STATE_MAXIMIZED")
    '("sticky" "GDK_WINDOW_STATE_STICKY")
  )
)

(define-enum SettingAction
  (in-module "Gdk")
  (c-name "GdkSettingAction")
  (gtype-id "GDK_TYPE_SETTING_ACTION")
  (values
    '("new" "GDK_SETTING_ACTION_NEW")
    '("changed" "GDK_SETTING_ACTION_CHANGED")
    '("deleted" "GDK_SETTING_ACTION_DELETED")
  )
)

(define-enum FontType
  (in-module "Gdk")
  (c-name "GdkFontType")
  (gtype-id "GDK_TYPE_FONT_TYPE")
  (values
    '("font" "GDK_FONT_FONT")
    '("fontset" "GDK_FONT_FONTSET")
  )
)

(define-enum CapStyle
  (in-module "Gdk")
  (c-name "GdkCapStyle")
  (gtype-id "GDK_TYPE_CAP_STYLE")
  (values
    '("not-last" "GDK_CAP_NOT_LAST")
    '("butt" "GDK_CAP_BUTT")
    '("round" "GDK_CAP_ROUND")
    '("projecting" "GDK_CAP_PROJECTING")
  )
)

(define-enum Fill
  (in-module "Gdk")
  (c-name "GdkFill")
  (gtype-id "GDK_TYPE_FILL")
  (values
    '("solid" "GDK_SOLID")
    '("tiled" "GDK_TILED")
    '("stippled" "GDK_STIPPLED")
    '("opaque-stippled" "GDK_OPAQUE_STIPPLED")
  )
)

(define-enum Function
  (in-module "Gdk")
  (c-name "GdkFunction")
  (gtype-id "GDK_TYPE_FUNCTION")
  (values
    '("copy" "GDK_COPY")
    '("invert" "GDK_INVERT")
    '("xor" "GDK_XOR")
    '("clear" "GDK_CLEAR")
    '("and" "GDK_AND")
    '("and-reverse" "GDK_AND_REVERSE")
    '("and-invert" "GDK_AND_INVERT")
    '("noop" "GDK_NOOP")
    '("or" "GDK_OR")
    '("equiv" "GDK_EQUIV")
    '("or-reverse" "GDK_OR_REVERSE")
    '("copy-invert" "GDK_COPY_INVERT")
    '("or-invert" "GDK_OR_INVERT")
    '("nand" "GDK_NAND")
    '("nor" "GDK_NOR")
    '("set" "GDK_SET")
  )
)

(define-enum JoinStyle
  (in-module "Gdk")
  (c-name "GdkJoinStyle")
  (gtype-id "GDK_TYPE_JOIN_STYLE")
  (values
    '("miter" "GDK_JOIN_MITER")
    '("round" "GDK_JOIN_ROUND")
    '("bevel" "GDK_JOIN_BEVEL")
  )
)

(define-enum LineStyle
  (in-module "Gdk")
  (c-name "GdkLineStyle")
  (gtype-id "GDK_TYPE_LINE_STYLE")
  (values
    '("solid" "GDK_LINE_SOLID")
    '("on-off-dash" "GDK_LINE_ON_OFF_DASH")
    '("double-dash" "GDK_LINE_DOUBLE_DASH")
  )
)

(define-enum SubwindowMode
  (in-module "Gdk")
  (c-name "GdkSubwindowMode")
  (gtype-id "GDK_TYPE_SUBWINDOW_MODE")
  (values
    '("clip-by-children" "GDK_CLIP_BY_CHILDREN")
    '("include-inferiors" "GDK_INCLUDE_INFERIORS")
  )
)

(define-flags GCValuesMask
  (in-module "Gdk")
  (c-name "GdkGCValuesMask")
  (gtype-id "GDK_TYPE_GC_VALUES_MASK")
  (values
    '("foreground" "GDK_GC_FOREGROUND")
    '("background" "GDK_GC_BACKGROUND")
    '("font" "GDK_GC_FONT")
    '("function" "GDK_GC_FUNCTION")
    '("fill" "GDK_GC_FILL")
    '("tile" "GDK_GC_TILE")
    '("stipple" "GDK_GC_STIPPLE")
    '("clip-mask" "GDK_GC_CLIP_MASK")
    '("subwindow" "GDK_GC_SUBWINDOW")
    '("ts-x-origin" "GDK_GC_TS_X_ORIGIN")
    '("ts-y-origin" "GDK_GC_TS_Y_ORIGIN")
    '("clip-x-origin" "GDK_GC_CLIP_X_ORIGIN")
    '("clip-y-origin" "GDK_GC_CLIP_Y_ORIGIN")
    '("exposures" "GDK_GC_EXPOSURES")
    '("line-width" "GDK_GC_LINE_WIDTH")
    '("line-style" "GDK_GC_LINE_STYLE")
    '("cap-style" "GDK_GC_CAP_STYLE")
    '("join-style" "GDK_GC_JOIN_STYLE")
  )
)

(define-enum ImageType
  (in-module "Gdk")
  (c-name "GdkImageType")
  (gtype-id "GDK_TYPE_IMAGE_TYPE")
  (values
    '("normal" "GDK_IMAGE_NORMAL")
    '("shared" "GDK_IMAGE_SHARED")
    '("fastest" "GDK_IMAGE_FASTEST")
  )
)

(define-enum ExtensionMode
  (in-module "Gdk")
  (c-name "GdkExtensionMode")
  (gtype-id "GDK_TYPE_EXTENSION_MODE")
  (values
    '("none" "GDK_EXTENSION_EVENTS_NONE")
    '("all" "GDK_EXTENSION_EVENTS_ALL")
    '("cursor" "GDK_EXTENSION_EVENTS_CURSOR")
  )
)

(define-enum InputSource
  (in-module "Gdk")
  (c-name "GdkInputSource")
  (gtype-id "GDK_TYPE_INPUT_SOURCE")
  (values
    '("mouse" "GDK_SOURCE_MOUSE")
    '("pen" "GDK_SOURCE_PEN")
    '("eraser" "GDK_SOURCE_ERASER")
    '("cursor" "GDK_SOURCE_CURSOR")
  )
)

(define-enum InputMode
  (in-module "Gdk")
  (c-name "GdkInputMode")
  (gtype-id "GDK_TYPE_INPUT_MODE")
  (values
    '("disabled" "GDK_MODE_DISABLED")
    '("screen" "GDK_MODE_SCREEN")
    '("window" "GDK_MODE_WINDOW")
  )
)

(define-enum AxisUse
  (in-module "Gdk")
  (c-name "GdkAxisUse")
  (gtype-id "GDK_TYPE_AXIS_USE")
  (values
    '("ignore" "GDK_AXIS_IGNORE")
    '("x" "GDK_AXIS_X")
    '("y" "GDK_AXIS_Y")
    '("pressure" "GDK_AXIS_PRESSURE")
    '("xtilt" "GDK_AXIS_XTILT")
    '("ytilt" "GDK_AXIS_YTILT")
    '("wheel" "GDK_AXIS_WHEEL")
    '("last" "GDK_AXIS_LAST")
  )
)

(define-enum PropMode
  (in-module "Gdk")
  (c-name "GdkPropMode")
  (gtype-id "GDK_TYPE_PROP_MODE")
  (values
    '("replace" "GDK_PROP_MODE_REPLACE")
    '("prepend" "GDK_PROP_MODE_PREPEND")
    '("append" "GDK_PROP_MODE_APPEND")
  )
)

(define-enum FillRule
  (in-module "Gdk")
  (c-name "GdkFillRule")
  (gtype-id "GDK_TYPE_FILL_RULE")
  (values
    '("even-odd-rule" "GDK_EVEN_ODD_RULE")
    '("winding-rule" "GDK_WINDING_RULE")
  )
)

(define-enum OverlapType
  (in-module "Gdk")
  (c-name "GdkOverlapType")
  (gtype-id "GDK_TYPE_OVERLAP_TYPE")
  (values
    '("in" "GDK_OVERLAP_RECTANGLE_IN")
    '("out" "GDK_OVERLAP_RECTANGLE_OUT")
    '("part" "GDK_OVERLAP_RECTANGLE_PART")
  )
)

(define-enum RgbDither
  (in-module "Gdk")
  (c-name "GdkRgbDither")
  (gtype-id "GDK_TYPE_RGB_DITHER")
  (values
    '("none" "GDK_RGB_DITHER_NONE")
    '("normal" "GDK_RGB_DITHER_NORMAL")
    '("max" "GDK_RGB_DITHER_MAX")
  )
)

(define-enum Selection
  (in-module "Gdk")
  (c-name "GdkSelection")
  (gtype-id "GDK_TYPE_SELECTION")
  (values
    '("primary" "GDK_SELECTION_PRIMARY")
    '("secondary" "GDK_SELECTION_SECONDARY")
  )
)

(define-enum Target
  (in-module "Gdk")
  (c-name "GdkTarget")
  (gtype-id "GDK_TYPE_TARGET")
  (values
    '("bitmap" "GDK_TARGET_BITMAP")
    '("colormap" "GDK_TARGET_COLORMAP")
    '("drawable" "GDK_TARGET_DRAWABLE")
    '("pixmap" "GDK_TARGET_PIXMAP")
    '("string" "GDK_TARGET_STRING")
  )
)

(define-enum SelectionType
  (in-module "Gdk")
  (c-name "GdkSelectionType")
  (gtype-id "GDK_TYPE_SELECTION_TYPE")
  (values
    '("atom" "GDK_SELECTION_TYPE_ATOM")
    '("bitmap" "GDK_SELECTION_TYPE_BITMAP")
    '("colormap" "GDK_SELECTION_TYPE_COLORMAP")
    '("drawable" "GDK_SELECTION_TYPE_DRAWABLE")
    '("integer" "GDK_SELECTION_TYPE_INTEGER")
    '("pixmap" "GDK_SELECTION_TYPE_PIXMAP")
    '("window" "GDK_SELECTION_TYPE_WINDOW")
    '("string" "GDK_SELECTION_TYPE_STRING")
  )
)

(define-enum ByteOrder
  (in-module "Gdk")
  (c-name "GdkByteOrder")
  (gtype-id "GDK_TYPE_BYTE_ORDER")
  (values
    '("lsb-first" "GDK_LSB_FIRST")
    '("msb-first" "GDK_MSB_FIRST")
  )
)

(define-flags ModifierType
  (in-module "Gdk")
  (c-name "GdkModifierType")
  (gtype-id "GDK_TYPE_MODIFIER_TYPE")
  (values
    '("shift-mask" "GDK_SHIFT_MASK")
    '("lock-mask" "GDK_LOCK_MASK")
    '("control-mask" "GDK_CONTROL_MASK")
    '("mod1-mask" "GDK_MOD1_MASK")
    '("mod2-mask" "GDK_MOD2_MASK")
    '("mod3-mask" "GDK_MOD3_MASK")
    '("mod4-mask" "GDK_MOD4_MASK")
    '("mod5-mask" "GDK_MOD5_MASK")
    '("button1-mask" "GDK_BUTTON1_MASK")
    '("button2-mask" "GDK_BUTTON2_MASK")
    '("button3-mask" "GDK_BUTTON3_MASK")
    '("button4-mask" "GDK_BUTTON4_MASK")
    '("button5-mask" "GDK_BUTTON5_MASK")
    '("release-mask" "GDK_RELEASE_MASK")
    '("modifier-mask" "GDK_MODIFIER_MASK")
  )
)

(define-flags InputCondition
  (in-module "Gdk")
  (c-name "GdkInputCondition")
  (gtype-id "GDK_TYPE_INPUT_CONDITION")
  (values
    '("read" "GDK_INPUT_READ")
    '("write" "GDK_INPUT_WRITE")
    '("exception" "GDK_INPUT_EXCEPTION")
  )
)

(define-enum Status
  (in-module "Gdk")
  (c-name "GdkStatus")
  (gtype-id "GDK_TYPE_STATUS")
  (values
    '("ok" "GDK_OK")
    '("error" "GDK_ERROR")
    '("error-param" "GDK_ERROR_PARAM")
    '("error-file" "GDK_ERROR_FILE")
    '("error-mem" "GDK_ERROR_MEM")
  )
)

(define-enum GrabStatus
  (in-module "Gdk")
  (c-name "GdkGrabStatus")
  (gtype-id "GDK_TYPE_GRAB_STATUS")
  (values
    '("success" "GDK_GRAB_SUCCESS")
    '("already-grabbed" "GDK_GRAB_ALREADY_GRABBED")
    '("invalid-time" "GDK_GRAB_INVALID_TIME")
    '("not-viewable" "GDK_GRAB_NOT_VIEWABLE")
    '("frozen" "GDK_GRAB_FROZEN")
  )
)

(define-enum VisualType
  (in-module "Gdk")
  (c-name "GdkVisualType")
  (gtype-id "GDK_TYPE_VISUAL_TYPE")
  (values
    '("static-gray" "GDK_VISUAL_STATIC_GRAY")
    '("grayscale" "GDK_VISUAL_GRAYSCALE")
    '("static-color" "GDK_VISUAL_STATIC_COLOR")
    '("pseudo-color" "GDK_VISUAL_PSEUDO_COLOR")
    '("true-color" "GDK_VISUAL_TRUE_COLOR")
    '("direct-color" "GDK_VISUAL_DIRECT_COLOR")
  )
)

(define-enum WindowClass
  (in-module "Gdk")
  (c-name "GdkWindowClass")
  (gtype-id "GDK_TYPE_WINDOW_CLASS")
  (values
    '("utput" "GDK_INPUT_OUTPUT")
    '("nly" "GDK_INPUT_ONLY")
  )
)

(define-enum WindowType
  (in-module "Gdk")
  (c-name "GdkWindowType")
  (gtype-id "GDK_TYPE_WINDOW_TYPE")
  (values
    '("root" "GDK_WINDOW_ROOT")
    '("toplevel" "GDK_WINDOW_TOPLEVEL")
    '("child" "GDK_WINDOW_CHILD")
    '("dialog" "GDK_WINDOW_DIALOG")
    '("temp" "GDK_WINDOW_TEMP")
    '("foreign" "GDK_WINDOW_FOREIGN")
  )
)

(define-flags WindowAttributesType
  (in-module "Gdk")
  (c-name "GdkWindowAttributesType")
  (gtype-id "GDK_TYPE_WINDOW_ATTRIBUTES_TYPE")
  (values
    '("title" "GDK_WA_TITLE")
    '("x" "GDK_WA_X")
    '("y" "GDK_WA_Y")
    '("cursor" "GDK_WA_CURSOR")
    '("colormap" "GDK_WA_COLORMAP")
    '("visual" "GDK_WA_VISUAL")
    '("wmclass" "GDK_WA_WMCLASS")
    '("noredir" "GDK_WA_NOREDIR")
  )
)

(define-flags WindowHints
  (in-module "Gdk")
  (c-name "GdkWindowHints")
  (gtype-id "GDK_TYPE_WINDOW_HINTS")
  (values
    '("pos" "GDK_HINT_POS")
    '("min-size" "GDK_HINT_MIN_SIZE")
    '("max-size" "GDK_HINT_MAX_SIZE")
    '("base-size" "GDK_HINT_BASE_SIZE")
    '("aspect" "GDK_HINT_ASPECT")
    '("resize-inc" "GDK_HINT_RESIZE_INC")
    '("win-gravity" "GDK_HINT_WIN_GRAVITY")
  )
)

(define-enum WindowTypeHint
  (in-module "Gdk")
  (c-name "GdkWindowTypeHint")
  (gtype-id "GDK_TYPE_WINDOW_TYPE_HINT")
  (values
    '("normal" "GDK_WINDOW_TYPE_HINT_NORMAL")
    '("dialog" "GDK_WINDOW_TYPE_HINT_DIALOG")
    '("menu" "GDK_WINDOW_TYPE_HINT_MENU")
    '("toolbar" "GDK_WINDOW_TYPE_HINT_TOOLBAR")
  )
)

(define-flags WMDecoration
  (in-module "Gdk")
  (c-name "GdkWMDecoration")
  (gtype-id "GDK_TYPE_WM_DECORATION")
  (values
    '("all" "GDK_DECOR_ALL")
    '("border" "GDK_DECOR_BORDER")
    '("resizeh" "GDK_DECOR_RESIZEH")
    '("title" "GDK_DECOR_TITLE")
    '("menu" "GDK_DECOR_MENU")
    '("minimize" "GDK_DECOR_MINIMIZE")
    '("maximize" "GDK_DECOR_MAXIMIZE")
  )
)

(define-flags WMFunction
  (in-module "Gdk")
  (c-name "GdkWMFunction")
  (gtype-id "GDK_TYPE_WM_FUNCTION")
  (values
    '("all" "GDK_FUNC_ALL")
    '("resize" "GDK_FUNC_RESIZE")
    '("move" "GDK_FUNC_MOVE")
    '("minimize" "GDK_FUNC_MINIMIZE")
    '("maximize" "GDK_FUNC_MAXIMIZE")
    '("close" "GDK_FUNC_CLOSE")
  )
)

(define-enum Gravity
  (in-module "Gdk")
  (c-name "GdkGravity")
  (gtype-id "GDK_TYPE_GRAVITY")
  (values
    '("north-west" "GDK_GRAVITY_NORTH_WEST")
    '("north" "GDK_GRAVITY_NORTH")
    '("north-east" "GDK_GRAVITY_NORTH_EAST")
    '("west" "GDK_GRAVITY_WEST")
    '("center" "GDK_GRAVITY_CENTER")
    '("east" "GDK_GRAVITY_EAST")
    '("south-west" "GDK_GRAVITY_SOUTH_WEST")
    '("south" "GDK_GRAVITY_SOUTH")
    '("south-east" "GDK_GRAVITY_SOUTH_EAST")
    '("static" "GDK_GRAVITY_STATIC")
  )
)

(define-enum WindowEdge
  (in-module "Gdk")
  (c-name "GdkWindowEdge")
  (gtype-id "GDK_TYPE_WINDOW_EDGE")
  (values
    '("north-west" "GDK_WINDOW_EDGE_NORTH_WEST")
    '("north" "GDK_WINDOW_EDGE_NORTH")
    '("north-east" "GDK_WINDOW_EDGE_NORTH_EAST")
    '("west" "GDK_WINDOW_EDGE_WEST")
    '("east" "GDK_WINDOW_EDGE_EAST")
    '("south-west" "GDK_WINDOW_EDGE_SOUTH_WEST")
    '("south" "GDK_WINDOW_EDGE_SOUTH")
    '("south-east" "GDK_WINDOW_EDGE_SOUTH_EAST")
  )
)

(define-enum PixbufAlphaMode
  (in-module "Gdk")
  (c-name "GdkPixbufAlphaMode")
  (gtype-id "GDK_TYPE_PIXBUF_ALPHA_MODE")
  (values
    '("bilevel" "GDK_PIXBUF_ALPHA_BILEVEL")
    '("full" "GDK_PIXBUF_ALPHA_FULL")
  )
)

(define-enum Colorspace
  (in-module "Gdk")
  (c-name "GdkColorspace")
  (gtype-id "GDK_TYPE_COLORSPACE")
  (values
    '("b" "GDK_COLORSPACE_RGB")
  )
)

(define-enum PixbufError
  (in-module "Gdk")
  (c-name "GdkPixbufError")
  (gtype-id "GDK_TYPE_PIXBUF_ERROR")
  (values
    '("header-corrupt" "GDK_PIXBUF_ERROR_HEADER_CORRUPT")
    '("pixel-corrupt" "GDK_PIXBUF_ERROR_PIXEL_CORRUPT")
    '("unknown-format" "GDK_PIXBUF_ERROR_UNKNOWN_FORMAT")
    '("corrupt-image" "GDK_PIXBUF_ERROR_CORRUPT_IMAGE")
    '("insufficient-memory" "GDK_PIXBUF_ERROR_INSUFFICIENT_MEMORY")
    '("bad-option-value" "GDK_PIXBUF_ERROR_BAD_OPTION_VALUE")
    '("unknown-type" "GDK_PIXBUF_ERROR_UNKNOWN_TYPE")
    '("unsupported-operation" "GDK_PIXBUF_ERROR_UNSUPPORTED_OPERATION")
    '("failed" "GDK_PIXBUF_ERROR_FAILED")
  )
)

(define-enum InterpType
  (in-module "Gdk")
  (c-name "GdkInterpType")
  (gtype-id "GDK_TYPE_INTERP_TYPE")
  (values
    '("nearest" "GDK_INTERP_NEAREST")
    '("tiles" "GDK_INTERP_TILES")
    '("bilinear" "GDK_INTERP_BILINEAR")
    '("hyper" "GDK_INTERP_HYPER")
  )
)

;; From /opt/gtk2/include/gtk-2.0/gdk/gdk.h

(define-function screen_width
  (c-name "gdk_screen_width")
  (return-type "gint")
)

(define-function screen_height
  (c-name "gdk_screen_height")
  (return-type "gint")
)

(define-function screen_width_mm
  (c-name "gdk_screen_width_mm")
  (return-type "gint")
)

(define-function screen_height_mm
  (c-name "gdk_screen_height_mm")
  (return-type "gint")
)

(define-function flush
  (c-name "gdk_flush")
  (return-type "none")
)

(define-function beep
  (c-name "gdk_beep")
  (return-type "none")
)

(define-function set_double_click_time
  (c-name "gdk_set_double_click_time")
  (return-type "none")
  (parameters
    '("guint" "msec")
  )
)

;; From /opt/gtk2/include/gtk-2.0/gdk/gdkcolor.h

(define-function gdk_colormap_get_type
  (c-name "gdk_colormap_get_type")
  (return-type "GType")
)

(define-function gdk_colormap_new
  (c-name "gdk_colormap_new")
  (is-constructor-of GdkColormap)
  (return-type "GdkColormap*")
  (parameters
    '("GdkVisual*" "visual")
    '("gboolean" "allocate")
  )
)

(define-function colormap_get_system
  (c-name "gdk_colormap_get_system")
  (return-type "GdkColormap*")
)

(define-function colormap_get_system_size
  (c-name "gdk_colormap_get_system_size")
  (return-type "gint")
)

(define-method change
  (of-object "GdkColormap")
  (c-name "gdk_colormap_change")
  (return-type "none")
  (parameters
    '("gint" "ncolors")
  )
)

(define-method alloc_color
  (of-object "GdkColormap")
  (c-name "gdk_colormap_alloc_color")
  (return-type "gboolean")
  (parameters
    '("GdkColor*" "color")
    '("gboolean" "writeable")
    '("gboolean" "best_match")
  )
)

(define-method get_visual
  (of-object "GdkColormap")
  (c-name "gdk_colormap_get_visual")
  (return-type "GdkVisual*")
)

(define-function color_parse
  (c-name "gdk_color_parse")
  (return-type "gint")
  (parameters
    '("const-gchar*" "spec")
    '("GdkColor*" "color")
  )
)

(define-method white
  (of-object "GdkColormap")
  (c-name "gdk_color_white")
  (return-type "gint")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method black
  (of-object "GdkColormap")
  (c-name "gdk_color_black")
  (return-type "gint")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method alloc
  (of-object "GdkColormap")
  (c-name "gdk_color_alloc")
  (return-type "gint")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method change
  (of-object "GdkColormap")
  (c-name "gdk_color_change")
  (return-type "gint")
  (parameters
    '("GdkColor*" "color")
  )
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkcursor.h

(define-function cursor_new
  (is-constructor-of GdkCursor)
  (c-name "gdk_cursor_new")
  (return-type "GdkCursor*")
  (parameters
    '("GdkCursorType" "cursor_type")
  )
)

(define-function cursor_new_from_pixmap
  (is-constructor-of GdkCursor)
  (c-name "gdk_cursor_new_from_pixmap")
  (return-type "GdkCursor*")
  (parameters
    '("GdkPixmap*" "source")
    '("GdkPixmap*" "mask")
    '("GdkColor*" "fg")
    '("GdkColor*" "bg")
    '("gint" "x")
    '("gint" "y")
  )
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkdnd.h

(define-function drag_context_get_type
  (c-name "gdk_drag_context_get_type")
  (return-type "GType")
)

(define-function drag_context_new
  (is-constructor-of GdkDragContext)
  (c-name "gdk_drag_context_new")
  (return-type "GdkDragContext*")
)

(define-method ref
  (of-object "GdkDragContext")
  (c-name "gdk_drag_context_ref")
  (return-type "none")
)

(define-method unref
  (of-object "GdkDragContext")
  (c-name "gdk_drag_context_unref")
  (return-type "none")
)

(define-method drag_status
  (of-object "GdkDragContext")
  (c-name "gdk_drag_status")
  (return-type "none")
  (parameters
    '("GdkDragAction" "action")
    '("guint32" "time")
  )
)

(define-method drop_reply
  (of-object "GdkDragContext")
  (c-name "gdk_drop_reply")
  (return-type "none")
  (parameters
    '("gboolean" "ok")
    '("guint32" "time")
  )
)

(define-method drop_finish
  (of-object "GdkDragContext")
  (c-name "gdk_drop_finish")
  (return-type "none")
  (parameters
    '("gboolean" "success")
    '("guint32" "time")
  )
)

(define-method drag_get_selection
  (of-object "GdkDragContext")
  (c-name "gdk_drag_get_selection")
  (return-type "GdkAtom")
)

(define-method drag_begin
  (of-object "GdkWindow")
  (c-name "gdk_drag_begin")
  (return-type "GdkDragContext*")
  (parameters
    '("GList*" "targets")
  )
)

(define-function drag_get_protocol
  (c-name "gdk_drag_get_protocol")
  (return-type "guint32")
  (parameters
    '("guint32" "xid")
    '("GdkDragProtocol*" "protocol")
  )
)

(define-method drag_find_window
  (of-object "GdkDragContext")
  (c-name "gdk_drag_find_window")
  (return-type "none")
  (parameters
    '("GdkWindow*" "drag_window")
    '("gint" "x_root")
    '("gint" "y_root")
    '("GdkWindow**" "dest_window")
    '("GdkDragProtocol*" "protocol")
  )
)

(define-method drag_motion
  (of-object "GdkDragContext")
  (c-name "gdk_drag_motion")
  (return-type "gboolean")
  (parameters
    '("GdkWindow*" "dest_window")
    '("GdkDragProtocol" "protocol")
    '("gint" "x_root")
    '("gint" "y_root")
    '("GdkDragAction" "suggested_action")
    '("GdkDragAction" "possible_actions")
    '("guint32" "time")
  )
)

(define-method drag_drop
  (of-object "GdkDragContext")
  (c-name "gdk_drag_drop")
  (return-type "none")
  (parameters
    '("guint32" "time")
  )
)

(define-method drag_abort
  (of-object "GdkDragContext")
  (c-name "gdk_drag_abort")
  (return-type "none")
  (parameters
    '("guint32" "time")
  )
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkdrawable.h

(define-function gdk_drawable_get_type
  (c-name "gdk_drawable_get_type")
  (return-type "GType")
)

(define-method set_data
  (of-object "GdkDrawable")
  (c-name "gdk_drawable_set_data")
  (return-type "none")
  (parameters
    '("const-gchar*" "key")
    '("gpointer" "data")
    '("GDestroyNotify" "destroy_func")
  )
)

(define-method get_data
  (of-object "GdkDrawable")
  (c-name "gdk_drawable_get_data")
  (return-type "gpointer")
  (parameters
    '("const-gchar*" "key")
  )
)

(define-method get_size
  (of-object "GdkDrawable")
  (c-name "gdk_drawable_get_size")
  (return-type "none")
  (parameters
    '("gint*" "width")
    '("gint*" "height")
  )
)

(define-method set_colormap
  (of-object "GdkDrawable")
  (c-name "gdk_drawable_set_colormap")
  (return-type "none")
  (parameters
    '("GdkColormap*" "colormap")
  )
)

(define-method get_colormap
  (of-object "GdkDrawable")
  (c-name "gdk_drawable_get_colormap")
  (return-type "GdkColormap*")
)

(define-method get_visual
  (of-object "GdkDrawable")
  (c-name "gdk_drawable_get_visual")
  (return-type "GdkVisual*")
)

(define-method get_depth
  (of-object "GdkDrawable")
  (c-name "gdk_drawable_get_depth")
  (return-type "gint")
)

(define-method ref
  (of-object "GdkDrawable")
  (c-name "gdk_drawable_ref")
  (return-type "GdkDrawable*")
)

(define-method unref
  (of-object "GdkDrawable")
  (c-name "gdk_drawable_unref")
  (return-type "none")
)

(define-method draw_point
  (of-object "GdkDrawable")
  (c-name "gdk_draw_point")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method draw_line
  (of-object "GdkDrawable")
  (c-name "gdk_draw_line")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "x1")
    '("gint" "y1")
    '("gint" "x2")
    '("gint" "y2")
  )
)

(define-method draw_rectangle
  (of-object "GdkDrawable")
  (c-name "gdk_draw_rectangle")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "filled")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method draw_arc
  (of-object "GdkDrawable")
  (c-name "gdk_draw_arc")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "filled")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("gint" "angle1")
    '("gint" "angle2")
  )
)

(define-method draw_polygon
  (of-object "GdkDrawable")
  (c-name "gdk_draw_polygon")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "filled")
    '("GdkPoint*" "points")
    '("gint" "npoints")
  )
)

(define-method draw_string
  (of-object "GdkDrawable")
  (c-name "gdk_draw_string")
  (return-type "none")
  (parameters
    '("GdkFont*" "font")
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("const-gchar*" "string")
  )
)

(define-method draw_text
  (of-object "GdkDrawable")
  (c-name "gdk_draw_text")
  (return-type "none")
  (parameters
    '("GdkFont*" "font")
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("const-gchar*" "text")
    '("gint" "text_length")
  )
)

(define-method draw_text_wc
  (of-object "GdkDrawable")
  (c-name "gdk_draw_text_wc")
  (return-type "none")
  (parameters
    '("GdkFont*" "font")
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("const-GdkWChar*" "text")
    '("gint" "text_length")
  )
)

(define-method draw_drawable
  (of-object "GdkDrawable")
  (c-name "gdk_draw_drawable")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("GdkDrawable*" "src")
    '("gint" "xsrc")
    '("gint" "ysrc")
    '("gint" "xdest")
    '("gint" "ydest")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method draw_image
  (of-object "GdkDrawable")
  (c-name "gdk_draw_image")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("GdkImage*" "image")
    '("gint" "xsrc")
    '("gint" "ysrc")
    '("gint" "xdest")
    '("gint" "ydest")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method draw_points
  (of-object "GdkDrawable")
  (c-name "gdk_draw_points")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("GdkPoint*" "points")
    '("gint" "npoints")
  )
)

(define-method draw_segments
  (of-object "GdkDrawable")
  (c-name "gdk_draw_segments")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("GdkSegment*" "segs")
    '("gint" "nsegs")
  )
)

(define-method draw_lines
  (of-object "GdkDrawable")
  (c-name "gdk_draw_lines")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("GdkPoint*" "points")
    '("gint" "npoints")
  )
)

(define-method draw_glyphs
  (of-object "GdkDrawable")
  (c-name "gdk_draw_glyphs")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("PangoFont*" "font")
    '("gint" "x")
    '("gint" "y")
    '("PangoGlyphString*" "glyphs")
  )
)

(define-method draw_layout_line
  (of-object "GdkDrawable")
  (c-name "gdk_draw_layout_line")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("PangoLayoutLine*" "line")
  )
)

(define-method draw_layout
  (of-object "GdkDrawable")
  (c-name "gdk_draw_layout")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("PangoLayout*" "layout")
  )
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkevents.h

(define-method get_time
  (of-object "GdkEvent")
  (c-name "gdk_event_get_time")
  (return-type "guint32")
)

(define-function set_show_events
  (c-name "gdk_set_show_events")
  (return-type "none")
  (parameters
    '("gboolean" "show_events")
  )
)

(define-function get_show_events
  (c-name "gdk_get_show_events")
  (return-type "gboolean")
)




;; From /opt/gtk2/include/gtk-2.0/gdk/gdkfont.h

(define-function font_load
  (is-constructor-of GdkFont)
  (c-name "gdk_font_load")
  (return-type "GdkFont*")
  (parameters
    '("const-gchar*" "font_name")
  )
)

(define-function fontset_load
  (c-name "gdk_fontset_load")
  (return-type "GdkFont*")
  (parameters
    '("const-gchar*" "fontset_name")
  )
)

(define-function font_from_description
  (c-name "gdk_font_from_description")
  (return-type "GdkFont*")
  (parameters
    '("PangoFontDescription*" "font_desc")
  )
)

(define-method id
  (of-object "GdkFont")
  (c-name "gdk_font_id")
  (return-type "gint")
)

(define-method string_width
  (of-object "GdkFont")
  (c-name "gdk_string_width")
  (return-type "gint")
  (parameters
    '("const-gchar*" "string")
  )
)

(define-method width
  (of-object "GdkFont")
  (c-name "gdk_text_width")
  (return-type "gint")
  (parameters
    '("const-gchar*" "text")
    '("gint" "text_length" (default "-1"))
  )
)

(define-method text_width_wc
  (of-object "GdkFont")
  (c-name "gdk_text_width_wc")
  (return-type "gint")
  (parameters
    '("const-GdkWChar*" "text")
    '("gint" "text_length")
  )
)

(define-method char_width
  (of-object "GdkFont")
  (c-name "gdk_char_width")
  (return-type "gint")
  (parameters
    '("gchar" "character")
  )
)

(define-method char_width_wc
  (of-object "GdkFont")
  (c-name "gdk_char_width_wc")
  (return-type "gint")
  (parameters
    '("GdkWChar" "character")
  )
)

(define-method string_measure
  (of-object "GdkFont")
  (c-name "gdk_string_measure")
  (return-type "gint")
  (parameters
    '("const-gchar*" "string")
  )
)

(define-method measure
  (of-object "GdkFont")
  (c-name "gdk_text_measure")
  (return-type "gint")
  (parameters
    '("const-gchar*" "text")
    '("gint" "text_length" (default "-1"))
  )
)

(define-method char_measure
  (of-object "GdkFont")
  (c-name "gdk_char_measure")
  (return-type "gint")
  (parameters
    '("gchar" "character")
  )
)

(define-method string_height
  (of-object "GdkFont")
  (c-name "gdk_string_height")
  (return-type "gint")
  (parameters
    '("const-gchar*" "string")
  )
)

(define-method height
  (of-object "GdkFont")
  (c-name "gdk_text_height")
  (return-type "gint")
  (parameters
    '("const-gchar*" "text")
    '("gint" "text_length" (default "-1"))
  )
)

(define-method char_height
  (of-object "GdkFont")
  (c-name "gdk_char_height")
  (return-type "gint")
  (parameters
    '("gchar" "character")
  )
)

(define-method extents
  (of-object "GdkFont")
  (c-name "gdk_text_extents")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
    '("gint" "text_length")
    '("gint*" "lbearing")
    '("gint*" "rbearing")
    '("gint*" "width")
    '("gint*" "ascent")
    '("gint*" "descent")
  )
)

(define-method text_extents_wc
  (of-object "GdkFont")
  (c-name "gdk_text_extents_wc")
  (return-type "none")
  (parameters
    '("const-GdkWChar*" "text")
    '("gint" "text_length")
    '("gint*" "lbearing")
    '("gint*" "rbearing")
    '("gint*" "width")
    '("gint*" "ascent")
    '("gint*" "descent")
  )
)

(define-method string_extents
  (of-object "GdkFont")
  (c-name "gdk_string_extents")
  (return-type "none")
  (parameters
    '("const-gchar*" "string")
    '("gint*" "lbearing")
    '("gint*" "rbearing")
    '("gint*" "width")
    '("gint*" "ascent")
    '("gint*" "descent")
  )
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkgc.h

(define-function gdk_gc_get_type
  (c-name "gdk_gc_get_type")
  (return-type "GType")
)

(define-function gc_new
  (c-name "gdk_gc_new")
  (return-type "GdkGC*")
  (parameters
    '("GdkDrawable*" "drawable")
  )
)

(define-method new_gc
  (of-object "GdkDrawable")
  (c-name "gdk_gc_new_with_values")
  (return-type "GdkGC*")
  (parameters
    '("GdkGCValues*" "values")
    '("GdkGCValuesMask" "values_mask")
  )
)

(define-method get_values
  (of-object "GdkGC")
  (c-name "gdk_gc_get_values")
  (return-type "none")
  (parameters
    '("GdkGCValues*" "values")
  )
)

(define-method set_values
  (of-object "GdkGC")
  (c-name "gdk_gc_set_values")
  (return-type "none")
  (parameters
    '("GdkGCValues*" "values")
    '("GdkGCValuesMask" "values_mask")
  )
)

(define-method set_foreground
  (of-object "GdkGC")
  (c-name "gdk_gc_set_foreground")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method set_background
  (of-object "GdkGC")
  (c-name "gdk_gc_set_background")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method set_font
  (of-object "GdkGC")
  (c-name "gdk_gc_set_font")
  (return-type "none")
  (parameters
    '("GdkFont*" "font")
  )
)

(define-method set_function
  (of-object "GdkGC")
  (c-name "gdk_gc_set_function")
  (return-type "none")
  (parameters
    '("GdkFunction" "function")
  )
)

(define-method set_fill
  (of-object "GdkGC")
  (c-name "gdk_gc_set_fill")
  (return-type "none")
  (parameters
    '("GdkFill" "fill")
  )
)

(define-method set_tile
  (of-object "GdkGC")
  (c-name "gdk_gc_set_tile")
  (return-type "none")
  (parameters
    '("GdkPixmap*" "tile")
  )
)

(define-method set_stipple
  (of-object "GdkGC")
  (c-name "gdk_gc_set_stipple")
  (return-type "none")
  (parameters
    '("GdkPixmap*" "stipple")
  )
)

(define-method set_ts_origin
  (of-object "GdkGC")
  (c-name "gdk_gc_set_ts_origin")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method set_clip_origin
  (of-object "GdkGC")
  (c-name "gdk_gc_set_clip_origin")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method set_clip_mask
  (of-object "GdkGC")
  (c-name "gdk_gc_set_clip_mask")
  (return-type "none")
  (parameters
    '("GdkBitmap*" "mask")
  )
)

(define-method set_clip_rectangle
  (of-object "GdkGC")
  (c-name "gdk_gc_set_clip_rectangle")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "rectangle")
  )
)

(define-method set_clip_region
  (of-object "GdkGC")
  (c-name "gdk_gc_set_clip_region")
  (return-type "none")
  (parameters
    '("GdkRegion*" "region")
  )
)

(define-method set_subwindow
  (of-object "GdkGC")
  (c-name "gdk_gc_set_subwindow")
  (return-type "none")
  (parameters
    '("GdkSubwindowMode" "mode")
  )
)

(define-method set_exposures
  (of-object "GdkGC")
  (c-name "gdk_gc_set_exposures")
  (return-type "none")
  (parameters
    '("gboolean" "exposures")
  )
)

(define-method set_line_attributes
  (of-object "GdkGC")
  (c-name "gdk_gc_set_line_attributes")
  (return-type "none")
  (parameters
    '("gint" "line_width")
    '("GdkLineStyle" "line_style")
    '("GdkCapStyle" "cap_style")
    '("GdkJoinStyle" "join_style")
  )
)

(define-method set_dashes
  (of-object "GdkGC")
  (c-name "gdk_gc_set_dashes")
  (return-type "none")
  (parameters
    '("gint" "dash_offset")
    '("gint8[]" "dash_list")
    '("gint" "n")
  )
)

(define-method copy
  (of-object "GdkGC")
  (c-name "gdk_gc_copy")
  (return-type "none")
  (parameters
    '("GdkGC*" "src_gc")
  )
)

(define-method set_colormap
  (of-object "GdkGC")
  (c-name "gdk_gc_set_colormap")
  (return-type "none")
  (parameters
    '("GdkColormap*" "colormap")
  )
)

(define-method get_colormap
  (of-object "GdkGC")
  (c-name "gdk_gc_get_colormap")
  (return-type "GdkColormap*")
)

(define-method set_rgb_fg_color
  (of-object "GdkGC")
  (c-name "gdk_gc_set_rgb_fg_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method set_rgb_bg_color
  (of-object "GdkGC")
  (c-name "gdk_gc_set_rgb_bg_color")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)


;; From /opt/gtk2/include/gtk-2.0/gdk/gdkimage.h

(define-function gdk_image_get_type
  (c-name "gdk_image_get_type")
  (return-type "GType")
)

(define-function image_new_bitmap
  (c-name "gdk_image_new_bitmap")
  (return-type "GdkImage*")
  (parameters
    '("GdkVisual*" "visual")
    '("gpointer" "data")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function gdk_image_new
  (is-constructor-of GdkImage)
  (c-name "gdk_image_new")
  (return-type "GdkImage*")
  (parameters
    '("GdkImageType" "type")
    '("GdkVisual*" "visual")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method image_get
  (of-object "GdkDrawable")
  (c-name "gdk_image_get")
  (return-type "GdkImage*")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method put_pixel
  (of-object "GdkImage")
  (c-name "gdk_image_put_pixel")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("guint32" "pixel")
  )
)

(define-method get_pixel
  (of-object "GdkImage")
  (c-name "gdk_image_get_pixel")
  (return-type "guint32")
  (parameters
    '("gint" "x")
    '("gint" "y")
  )
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkinput.h

(define-function device_get_type
  (c-name "gdk_device_get_type")
  (return-type "GType")
)

(define-function devices_list
  (c-name "gdk_devices_list")
  (return-type "GList*")
)

(define-method set_source
  (of-object "GdkDevice")
  (c-name "gdk_device_set_source")
  (return-type "none")
  (parameters
    '("GdkInputSource" "source")
  )
)

(define-method set_mode
  (of-object "GdkDevice")
  (c-name "gdk_device_set_mode")
  (return-type "gboolean")
  (parameters
    '("GdkInputMode" "mode")
  )
)

(define-method set_key
  (of-object "GdkDevice")
  (c-name "gdk_device_set_key")
  (return-type "none")
  (parameters
    '("guint" "index")
    '("guint" "keyval")
    '("GdkModifierType" "modifiers")
  )
)

(define-method set_axis_use
  (of-object "GdkDevice")
  (c-name "gdk_device_set_axis_use")
  (return-type "none")
  (parameters
    '("guint" "index")
    '("GdkAxisUse" "use")
  )
)

(define-method get_state
  (of-object "GdkDevice")
  (c-name "gdk_device_get_state")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window")
    '("gdouble*" "axes")
    '("GdkModifierType*" "mask")
  )
)

(define-method get_history
  (of-object "GdkDevice")
  (c-name "gdk_device_get_history")
  (return-type "gboolean")
  (parameters
    '("GdkWindow*" "window")
    '("guint32" "start")
    '("guint32" "stop")
    '("GdkTimeCoord***" "events")
    '("gint*" "n_events")
  )
)

(define-function device_free_history
  (c-name "gdk_device_free_history")
  (return-type "none")
  (parameters
    '("GdkTimeCoord**" "events")
    '("gint" "n_events")
  )
)

(define-method get_axis
  (of-object "GdkDevice")
  (c-name "gdk_device_get_axis")
  (return-type "gboolean")
  (parameters
    '("gdouble*" "axes")
    '("GdkAxisUse" "use")
    '("gdouble*" "value")
  )
)

(define-method input_set_extension_events
  (of-object "GdkWindow")
  (c-name "gdk_input_set_extension_events")
  (return-type "none")
  (parameters
    '("gint" "mask")
    '("GdkExtensionMode" "mode")
  )
)


;; From /opt/gtk2/include/gtk-2.0/gdk-pixbuf/gdk-pixbuf.h

(define-method get_colorspace
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_get_colorspace")
  (return-type "GdkColorspace")
)

(define-method get_n_channels
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_get_n_channels")
  (return-type "int")
)

(define-method get_has_alpha
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_get_has_alpha")
  (return-type "gboolean")
)

(define-method get_bits_per_sample
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_get_bits_per_sample")
  (return-type "int")
)

(define-method get_pixels
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_get_pixels")
  (return-type "guchar*")
)

(define-method get_width
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_get_width")
  (return-type "int")
)

(define-method get_height
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_get_height")
  (return-type "int")
)

(define-method get_rowstride
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_get_rowstride")
  (return-type "int")
)

(define-function gdk_pixbuf_new
  (is-constructor-of GdkPixbuf)
  (c-name "gdk_pixbuf_new")
  (return-type "GdkPixbuf*")
  (parameters
    '("GdkColorspace" "colorspace")
    '("gboolean" "has_alpha")
    '("int" "bits_per_sample")
    '("int" "width")
    '("int" "height")
  )
)

(define-method copy
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_copy")
  (return-type "GdkPixbuf*")
)

(define-function pixbuf_new_from_file
  (c-name "gdk_pixbuf_new_from_file")
  (return-type "GdkPixbuf*")
  (parameters
    '("const-char*" "filename")
    '("GError**" "error")
  )
)

(define-function pixbuf_new_from_data
  (c-name "gdk_pixbuf_new_from_data")
  (return-type "GdkPixbuf*")
  (parameters
    '("const-guchar*" "data")
    '("GdkColorspace" "colorspace")
    '("gboolean" "has_alpha")
    '("int" "bits_per_sample")
    '("int" "width")
    '("int" "height")
    '("int" "rowstride")
    '("GdkPixbufDestroyNotify" "destroy_fn")
    '("gpointer" "destroy_fn_data")
  )
)

(define-function pixbuf_new_from_xpm_data
  (c-name "gdk_pixbuf_new_from_xpm_data")
  (return-type "GdkPixbuf*")
  (parameters
    '("const-char**" "data")
  )
)

(define-function pixbuf_new_from_stream
  (c-name "gdk_pixbuf_new_from_stream")
  (return-type "GdkPixbuf*")
  (parameters
    '("gint" "stream_length")
    '("const-guchar*" "stream")
    '("gboolean" "copy_pixels")
    '("GError**" "error")
  )
)

(define-method save
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_save")
  (return-type "gboolean")
  (parameters
    '("const-char*" "filename")
    '("const-char*" "type")
    '("GError**" "error")
  )
  (varargs #t)
)

(define-method savev
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_savev")
  (return-type "gboolean")
  (parameters
    '("const-char*" "filename")
    '("const-char*" "type")
    '("char**" "option_keys")
    '("char**" "option_values")
    '("GError**" "error")
  )
)

(define-method add_alpha
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_add_alpha")
  (return-type "GdkPixbuf*")
  (parameters
    '("gboolean" "substitute_color")
    '("guchar" "r")
    '("guchar" "g")
    '("guchar" "b")
  )
)

(define-method copy_area
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_copy_area")
  (return-type "none")
  (parameters
    '("int" "src_x")
    '("int" "src_y")
    '("int" "width")
    '("int" "height")
    '("GdkPixbuf*" "dest_pixbuf")
    '("int" "dest_x")
    '("int" "dest_y")
  )
)

(define-method saturate_and_pixelate
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_saturate_and_pixelate")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "dest")
    '("gfloat" "saturation")
    '("gboolean" "pixelate")
  )
)

(define-method scale
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_scale")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "dest")
    '("int" "dest_x")
    '("int" "dest_y")
    '("int" "dest_width")
    '("int" "dest_height")
    '("double" "offset_x")
    '("double" "offset_y")
    '("double" "scale_x")
    '("double" "scale_y")
    '("GdkInterpType" "interp_type")
  )
)

(define-method composite
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_composite")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "dest")
    '("int" "dest_x")
    '("int" "dest_y")
    '("int" "dest_width")
    '("int" "dest_height")
    '("double" "offset_x")
    '("double" "offset_y")
    '("double" "scale_x")
    '("double" "scale_y")
    '("GdkInterpType" "interp_type")
    '("int" "overall_alpha")
  )
)

(define-method composite_color
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_composite_color")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "dest")
    '("int" "dest_x")
    '("int" "dest_y")
    '("int" "dest_width")
    '("int" "dest_height")
    '("double" "offset_x")
    '("double" "offset_y")
    '("double" "scale_x")
    '("double" "scale_y")
    '("GdkInterpType" "interp_type")
    '("int" "overall_alpha")
    '("int" "check_x")
    '("int" "check_y")
    '("int" "check_size")
    '("guint32" "color1")
    '("guint32" "color2")
  )
)

(define-method scale_simple
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_scale_simple")
  (return-type "GdkPixbuf*")
  (parameters
    '("int" "dest_width")
    '("int" "dest_height")
    '("GdkInterpType" "interp_type")
  )
)

(define-method composite_color_simple
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_composite_color_simple")
  (return-type "GdkPixbuf*")
  (parameters
    '("int" "dest_width")
    '("int" "dest_height")
    '("GdkInterpType" "interp_type")
    '("int" "overall_alpha")
    '("int" "check_size")
    '("guint32" "color1")
    '("guint32" "color2")
  )
)

(define-function gdk_pixbuf_animation_get_type
  (c-name "gdk_pixbuf_animation_get_type")
  (return-type "GType")
)

(define-function gdk_pixbuf_animation_new_from_file
  (is-constructor-of GdkPixbufAnimation)
  (c-name "gdk_pixbuf_animation_new_from_file")
  (return-type "GdkPixbufAnimation*")
  (parameters
    '("const-char*" "filename")
    '("GError**" "error")
  )
)

(define-method get_width
  (of-object "GdkPixbufAnimation")
  (c-name "gdk_pixbuf_animation_get_width")
  (return-type "int")
)

(define-method get_height
  (of-object "GdkPixbufAnimation")
  (c-name "gdk_pixbuf_animation_get_height")
  (return-type "int")
)

(define-method is_static_image
  (of-object "GdkPixbufAnimation")
  (c-name "gdk_pixbuf_animation_is_static_image")
  (return-type "gboolean")
)

(define-method get_static_image
  (of-object "GdkPixbufAnimation")
  (c-name "gdk_pixbuf_animation_get_static_image")
  (return-type "GdkPixbuf*")
)

(define-method get_iter
  (of-object "GdkPixbufAnimation")
  (c-name "gdk_pixbuf_animation_get_iter")
  (return-type "GdkPixbufAnimationIter*")
  (parameters
    '("const-GTimeVal*" "start_time")
  )
)

(define-function pixbuf_animation_iter_get_type
  (c-name "gdk_pixbuf_animation_iter_get_type")
  (return-type "GType")
)

(define-method get_delay_time
  (of-object "GdkPixbufAnimationIter")
  (c-name "gdk_pixbuf_animation_iter_get_delay_time")
  (return-type "int")
)

(define-method get_pixbuf
  (of-object "GdkPixbufAnimationIter")
  (c-name "gdk_pixbuf_animation_iter_get_pixbuf")
  (return-type "GdkPixbuf*")
)

(define-method on_currently_loading_frame
  (of-object "GdkPixbufAnimationIter")
  (c-name "gdk_pixbuf_animation_iter_on_currently_loading_frame")
  (return-type "gboolean")
)

(define-method advance
  (of-object "GdkPixbufAnimationIter")
  (c-name "gdk_pixbuf_animation_iter_advance")
  (return-type "gboolean")
  (parameters
    '("const-GTimeVal*" "current_time")
  )
)

;; From /opt/gtk2/include/gtk-2.0/gdk/gdkpixbuf.h

(define-method render_to_drawable
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_render_to_drawable")
  (return-type "none")
  (parameters
    '("GdkDrawable*" "drawable")
    '("GdkGC*" "gc")
    '("int" "src_x")
    '("int" "src_y")
    '("int" "dest_x")
    '("int" "dest_y")
    '("int" "width")
    '("int" "height")
    '("GdkRgbDither" "dither")
    '("int" "x_dither")
    '("int" "y_dither")
  )
)

(define-method render_to_drawable_alpha
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_render_to_drawable_alpha")
  (return-type "none")
  (parameters
    '("GdkDrawable*" "drawable")
    '("int" "src_x")
    '("int" "src_y")
    '("int" "dest_x")
    '("int" "dest_y")
    '("int" "width")
    '("int" "height")
    '("GdkPixbufAlphaMode" "alpha_mode")
    '("int" "alpha_threshold")
    '("GdkRgbDither" "dither")
    '("int" "x_dither")
    '("int" "y_dither")
  )
)

(define-method render_pixmap_and_mask
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_render_pixmap_and_mask")
  (return-type "none")
  (parameters
    '("GdkPixmap**" "pixmap_return")
    '("GdkBitmap**" "mask_return")
    '("int" "alpha_threshold" (default "127"))
  )
)

(define-method get_from_drawable
  (of-object "GdkPixbuf")
  (c-name "gdk_pixbuf_get_from_drawable")
  (return-type "GdkPixbuf*")
  (parameters
    '("GdkDrawable*" "src")
    '("GdkColormap*" "cmap")
    '("int" "src_x")
    '("int" "src_y")
    '("int" "dest_x")
    '("int" "dest_y")
    '("int" "width")
    '("int" "height")
  )
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkpixmap.h

(define-function gdk_pixmap_get_type
  (c-name "gdk_pixmap_get_type")
  (return-type "GType")
)

(define-function gdk_pixmap_new
  (is-constructor-of GdkPixmap)
  (c-name "gdk_pixmap_new")
  (return-type "GdkPixmap*")
  (parameters
    '("GdkWindow*" "window" (null-ok))
    '("gint" "width")
    '("gint" "height")
    '("gint" "depth" (default -1))
  )
)

(define-function bitmap_create_from_data
  (c-name "gdk_bitmap_create_from_data")
  (return-type "GdkBitmap*")
  (parameters
    '("GdkWindow*" "window")
    '("const-gchar*" "data")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-function pixmap_create_from_data
  (c-name "gdk_pixmap_create_from_data")
  (return-type "GdkPixmap*")
  (parameters
    '("GdkWindow*" "window")
    '("const-gchar*" "data")
    '("gint" "width")
    '("gint" "height")
    '("gint" "depth")
    '("GdkColor*" "fg")
    '("GdkColor*" "bg")
  )
)

(define-function pixmap_create_from_xpm
  (c-name "gdk_pixmap_create_from_xpm")
  (return-type "GdkPixmap*")
  (parameters
    '("GdkWindow*" "window")
    '("GdkBitmap**" "mask")
    '("GdkColor*" "transparent_color")
    '("const-gchar*" "filename")
  )
)

(define-function pixmap_colormap_create_from_xpm
  (c-name "gdk_pixmap_colormap_create_from_xpm")
  (return-type "GdkPixmap*")
  (parameters
    '("GdkWindow*" "window")
    '("GdkColormap*" "colormap")
    '("GdkBitmap**" "mask")
    '("GdkColor*" "transparent_color")
    '("const-gchar*" "filename")
  )
)

(define-function pixmap_create_from_xpm_d
  (c-name "gdk_pixmap_create_from_xpm_d")
  (return-type "GdkPixmap*")
  (parameters
    '("GdkWindow*" "window")
    '("GdkBitmap**" "mask")
    '("GdkColor*" "transparent_color")
    '("gchar**" "data")
  )
)

(define-function pixmap_colormap_create_from_xpm_d
  (c-name "gdk_pixmap_colormap_create_from_xpm_d")
  (return-type "GdkPixmap*")
  (parameters
    '("GdkWindow*" "window")
    '("GdkColormap*" "colormap")
    '("GdkBitmap**" "mask")
    '("GdkColor*" "transparent_color")
    '("gchar**" "data")
  )
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkproperty.h

(define-method name
  (of-object "GdkAtom")
  (c-name "gdk_atom_name")
  (return-type "gchar*")
)

(define-method property_get
  (of-object "GdkWindow")
  (c-name "gdk_property_get")
  (return-type "gboolean")
  (parameters
    '("GdkAtom" "property")
    '("GdkAtom" "type")
    '("gulong" "offset")
    '("gulong" "length")
    '("gint" "pdelete")
    '("GdkAtom*" "actual_property_type")
    '("gint*" "actual_format")
    '("gint*" "actual_length")
    '("guchar**" "data")
  )
)

(define-method property_change
  (of-object "GdkWindow")
  (c-name "gdk_property_change")
  (return-type "none")
  (parameters
    '("GdkAtom" "property")
    '("GdkAtom" "type")
    '("gint" "format")
    '("GdkPropMode" "mode")
    '("const-guchar*" "data")
    '("gint" "nelements")
  )
)

(define-method property_delete
  (of-object "GdkWindow")
  (c-name "gdk_property_delete")
  (return-type "none")
  (parameters
    '("GdkAtom" "property")
  )
)


;; From /opt/gtk2/include/gtk-2.0/gdk/gdkrgb.h

(define-function rgb_xpixel_from_rgb
  (c-name "gdk_rgb_xpixel_from_rgb")
  (return-type "gulong")
  (parameters
    '("guint32" "rgb")
  )
)

(define-function rgb_gc_set_foreground
  (c-name "gdk_rgb_gc_set_foreground")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("guint32" "rgb")
  )
)

(define-function rgb_gc_set_background
  (c-name "gdk_rgb_gc_set_background")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("guint32" "rgb")
  )
)

(define-method draw_rgb_image
  (of-object "GdkDrawable")
  (c-name "gdk_draw_rgb_image")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("GdkRgbDither" "dith")
    '("guchar*" "rgb_buf")
    '("gint" "rowstride")
  )
)

(define-method draw_rgb_image_dithalign
  (of-object "GdkDrawable")
  (c-name "gdk_draw_rgb_image_dithalign")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("GdkRgbDither" "dith")
    '("guchar*" "rgb_buf")
    '("gint" "rowstride")
    '("gint" "xdith")
    '("gint" "ydith")
  )
)

(define-method draw_rgb_32_image
  (of-object "GdkDrawable")
  (c-name "gdk_draw_rgb_32_image")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("GdkRgbDither" "dith")
    '("guchar*" "buf")
    '("gint" "rowstride")
  )
)

(define-method draw_gray_image
  (of-object "GdkDrawable")
  (c-name "gdk_draw_gray_image")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("GdkRgbDither" "dith")
    '("guchar*" "buf")
    '("gint" "rowstride")
  )
)

(define-function rgb_cmap_new
  (c-name "gdk_rgb_cmap_new")
  (return-type "GdkRgbCmap*")
  (parameters
    '("guint32*" "colors")
    '("gint" "n_colors")
  )
)

(define-method draw_indexed_image
  (of-object "GdkDrawable")
  (c-name "gdk_draw_indexed_image")
  (return-type "none")
  (parameters
    '("GdkGC*" "gc")
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
    '("GdkRgbDither" "dith")
    '("guchar*" "buf")
    '("gint" "rowstride")
    '("GdkRgbCmap*" "cmap")
  )
)

(define-function rgb_ditherable
  (c-name "gdk_rgb_ditherable")
  (return-type "gboolean")
)

(define-function rgb_set_verbose
  (c-name "gdk_rgb_set_verbose")
  (return-type "none")
  (parameters
    '("gboolean" "verbose")
  )
)

(define-function rgb_set_install
  (c-name "gdk_rgb_set_install")
  (return-type "none")
  (parameters
    '("gboolean" "install")
  )
)

(define-function rgb_set_min_colors
  (c-name "gdk_rgb_set_min_colors")
  (return-type "none")
  (parameters
    '("gint" "min_colors")
  )
)

(define-function rgb_get_cmap
  (c-name "gdk_rgb_get_cmap")
  (return-type "GdkColormap*")
)

(define-function rgb_get_visual
  (c-name "gdk_rgb_get_visual")
  (return-type "GdkVisual*")
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkselection.h

(define-function selection_owner_get
  (c-name "gdk_selection_owner_get")
  (return-type "GdkWindow*")
  (parameters
    '("GdkAtom" "selection")
  )
)

(define-method selection_convert
  (of-object "GdkWindow")
  (c-name "gdk_selection_convert")
  (return-type "none")
  (parameters
    '("GdkAtom" "selection")
    '("GdkAtom" "target")
    '("guint32" "time")
  )
)

(define-method selection_property_get
  (of-object "GdkWindow")
  (c-name "gdk_selection_property_get")
  (return-type "gboolean")
  (parameters
    '("guchar**" "data")
    '("GdkAtom*" "prop_type")
    '("gint*" "prop_format")
  )
)

(define-function selection_send_notify
  (c-name "gdk_selection_send_notify")
  (return-type "none")
  (parameters
    '("guint32" "requestor")
    '("GdkAtom" "selection")
    '("GdkAtom" "target")
    '("GdkAtom" "property")
    '("guint32" "time")
  )
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkvisual.h

(define-function visual_get_best_depth
  (c-name "gdk_visual_get_best_depth")
  (return-type "gint")
)

(define-function visual_get_best_type
  (c-name "gdk_visual_get_best_type")
  (return-type "GdkVisualType")
)

(define-function visual_get_system
  (c-name "gdk_visual_get_system")
  (return-type "GdkVisual*")
)

(define-function visual_get_best
  (c-name "gdk_visual_get_best")
  (return-type "GdkVisual*")
)

(define-function visual_get_best_with_depth
  (c-name "gdk_visual_get_best_with_depth")
  (return-type "GdkVisual*")
  (parameters
    '("gint" "depth")
  )
)

(define-function visual_get_best_with_type
  (c-name "gdk_visual_get_best_with_type")
  (return-type "GdkVisual*")
  (parameters
    '("GdkVisualType" "visual_type")
  )
)

(define-function visual_get_best_with_both
  (is-constructor-of GdkVisual)
  (c-name "gdk_visual_get_best_with_both")
  (return-type "GdkVisual*")
  (parameters
    '("gint" "depth")
    '("GdkVisualType" "visual_type")
  )
)

(define-function query_depths
  (c-name "gdk_query_depths")
  (return-type "none")
  (parameters
    '("gint**" "depths")
    '("gint*" "count")
  )
)

(define-function query_visual_types
  (c-name "gdk_query_visual_types")
  (return-type "none")
  (parameters
    '("GdkVisualType**" "visual_types")
    '("gint*" "count")
  )
)

(define-function list_visuals
  (c-name "gdk_list_visuals")
  (return-type "GList*")
)



;; From /opt/gtk2/include/gtk-2.0/gdk/gdkwindow.h

(define-function gdk_window_object_get_type
  (c-name "gdk_window_object_get_type")
  (return-type "GType")
)

(define-function new
  (is-constructor-of GdkWindow)
  (c-name "gdk_window_new")
  (return-type "GdkWindow*")
  (parameters
    '("GdkWindow*" "parent")
    '("GdkWindowAttr*" "attributes")
    '("gint" "attributes_mask")
  )
)

(define-method destroy
  (of-object "GdkWindow")
  (c-name "gdk_window_destroy")
  (return-type "none")
)

(define-method get_window_type
  (of-object "GdkWindow")
  (c-name "gdk_window_get_window_type")
  (return-type "GdkWindowType")
)

(define-function window_at_pointer
  (c-name "gdk_window_at_pointer")
  (return-type "GdkWindow*")
  (parameters
    '("gint*" "win_x")
    '("gint*" "win_y")
  )
)

(define-method show
  (of-object "GdkWindow")
  (c-name "gdk_window_show")
  (return-type "none")
)

(define-method hide
  (of-object "GdkWindow")
  (c-name "gdk_window_hide")
  (return-type "none")
)

(define-method withdraw
  (of-object "GdkWindow")
  (c-name "gdk_window_withdraw")
  (return-type "none")
)

(define-method move
  (of-object "GdkWindow")
  (c-name "gdk_window_move")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method resize
  (of-object "GdkWindow")
  (c-name "gdk_window_resize")
  (return-type "none")
  (parameters
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method move_resize
  (of-object "GdkWindow")
  (c-name "gdk_window_move_resize")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method reparent
  (of-object "GdkWindow")
  (c-name "gdk_window_reparent")
  (return-type "none")
  (parameters
    '("GdkWindow*" "new_parent")
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method clear
  (of-object "GdkWindow")
  (c-name "gdk_window_clear")
  (return-type "none")
)

(define-method clear_area
  (of-object "GdkWindow")
  (c-name "gdk_window_clear_area")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method clear_area_e
  (of-object "GdkWindow")
  (c-name "gdk_window_clear_area_e")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method raise
  (of-object "GdkWindow")
  (c-name "gdk_window_raise")
  (return-type "none")
)

(define-method lower
  (of-object "GdkWindow")
  (c-name "gdk_window_lower")
  (return-type "none")
)

(define-method set_override_redirect
  (of-object "GdkWindow")
  (c-name "gdk_window_set_override_redirect")
  (return-type "none")
  (parameters
    '("gboolean" "override_redirect")
  )
)

(define-method add_filter
  (of-object "GdkWindow")
  (c-name "gdk_window_add_filter")
  (return-type "none")
  (parameters
    '("GdkFilterFunc" "function")
    '("gpointer" "data")
  )
)

(define-method remove_filter
  (of-object "GdkWindow")
  (c-name "gdk_window_remove_filter")
  (return-type "none")
  (parameters
    '("GdkFilterFunc" "function")
    '("gpointer" "data")
  )
)

(define-method scroll
  (of-object "GdkWindow")
  (c-name "gdk_window_scroll")
  (return-type "none")
  (parameters
    '("gint" "dx")
    '("gint" "dy")
  )
)

(define-method shape_combine_mask
  (of-object "GdkWindow")
  (c-name "gdk_window_shape_combine_mask")
  (return-type "none")
  (parameters
    '("GdkBitmap*" "shape_mask")
    '("gint" "offset_x")
    '("gint" "offset_y")
  )
)

(define-method set_child_shapes
  (of-object "GdkWindow")
  (c-name "gdk_window_set_child_shapes")
  (return-type "none")
)

(define-method merge_child_shapes
  (of-object "GdkWindow")
  (c-name "gdk_window_merge_child_shapes")
  (return-type "none")
)

(define-method is_visible
  (of-object "GdkWindow")
  (c-name "gdk_window_is_visible")
  (return-type "gboolean")
)

(define-method is_viewable
  (of-object "GdkWindow")
  (c-name "gdk_window_is_viewable")
  (return-type "gboolean")
)

(define-method set_static_gravities
  (of-object "GdkWindow")
  (c-name "gdk_window_set_static_gravities")
  (return-type "gboolean")
  (parameters
    '("gboolean" "use_static")
  )
)

(define-method set_hints
  (of-object "GdkWindow")
  (c-name "gdk_window_set_hints")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gint" "min_width")
    '("gint" "min_height")
    '("gint" "max_width")
    '("gint" "max_height")
    '("gint" "flags")
  )
)

(define-method set_geometry_hints
  (of-object "GdkWindow")
  (c-name "gdk_window_set_geometry_hints")
  (return-type "none")
  (parameters
    '("GdkGeometry*" "geometry")
    '("GdkWindowHints" "flags")
  )
)

(define-function set_sm_client_id
  (c-name "gdk_set_sm_client_id")
  (return-type "none")
  (parameters
    '("const-gchar*" "sm_client_id")
  )
)

(define-method begin_paint_rect
  (of-object "GdkWindow")
  (c-name "gdk_window_begin_paint_rect")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "rectangle")
  )
)

(define-method begin_paint_region
  (of-object "GdkWindow")
  (c-name "gdk_window_begin_paint_region")
  (return-type "none")
  (parameters
    '("GdkRegion*" "region")
  )
)

(define-method end_paint
  (of-object "GdkWindow")
  (c-name "gdk_window_end_paint")
  (return-type "none")
)

(define-method set_title
  (of-object "GdkWindow")
  (c-name "gdk_window_set_title")
  (return-type "none")
  (parameters
    '("const-gchar*" "title")
  )
)

(define-method set_role
  (of-object "GdkWindow")
  (c-name "gdk_window_set_role")
  (return-type "none")
  (parameters
    '("const-gchar*" "role")
  )
)

(define-method set_transient_for
  (of-object "GdkWindow")
  (c-name "gdk_window_set_transient_for")
  (return-type "none")
  (parameters
    '("GdkWindow*" "leader")
  )
)

(define-method set_background
  (of-object "GdkWindow")
  (c-name "gdk_window_set_background")
  (return-type "none")
  (parameters
    '("GdkColor*" "color")
  )
)

(define-method set_back_pixmap
  (of-object "GdkWindow")
  (c-name "gdk_window_set_back_pixmap")
  (return-type "none")
  (parameters
    '("GdkPixmap*" "pixmap")
    '("gboolean" "parent_relative")
  )
)

(define-method set_cursor
  (of-object "GdkWindow")
  (c-name "gdk_window_set_cursor")
  (return-type "none")
  (parameters
    '("GdkCursor*" "cursor")
  )
)

(define-method get_geometry
  (of-object "GdkWindow")
  (c-name "gdk_window_get_geometry")
  (return-type "none")
  (parameters
    '("gint*" "x")
    '("gint*" "y")
    '("gint*" "width")
    '("gint*" "height")
    '("gint*" "depth")
  )
)

(define-method get_position
  (of-object "GdkWindow")
  (c-name "gdk_window_get_position")
  (return-type "none")
  (parameters
    '("gint*" "x")
    '("gint*" "y")
  )
)

(define-method get_origin
  (of-object "GdkWindow")
  (c-name "gdk_window_get_origin")
  (return-type "gint")
  (parameters
    '("gint*" "x")
    '("gint*" "y")
  )
)

(define-method get_deskrelative_origin
  (of-object "GdkWindow")
  (c-name "gdk_window_get_deskrelative_origin")
  (return-type "gboolean")
  (parameters
    '("gint*" "x")
    '("gint*" "y")
  )
)

(define-method get_root_origin
  (of-object "GdkWindow")
  (c-name "gdk_window_get_root_origin")
  (return-type "none")
  (parameters
    '("gint*" "x")
    '("gint*" "y")
  )
)

(define-method get_pointer
  (of-object "GdkWindow")
  (c-name "gdk_window_get_pointer")
  (return-type "GdkWindow*")
  (parameters
    '("gint*" "x")
    '("gint*" "y")
    '("GdkModifierType*" "mask")
  )
)

(define-method get_parent
  (of-object "GdkWindow")
  (c-name "gdk_window_get_parent")
  (return-type "GdkWindow*")
)

(define-method get_toplevel
  (of-object "GdkWindow")
  (c-name "gdk_window_get_toplevel")
  (return-type "GdkWindow*")
)

(define-method get_children
  (of-object "GdkWindow")
  (c-name "gdk_window_get_children")
  (return-type "GList*")
)

(define-method peek_children
  (of-object "GdkWindow")
  (c-name "gdk_window_peek_children")
  (return-type "GList*")
)

(define-method get_events
  (of-object "GdkWindow")
  (c-name "gdk_window_get_events")
  (return-type "GdkEventMask")
)

(define-method set_events
  (of-object "GdkWindow")
  (c-name "gdk_window_set_events")
  (return-type "none")
  (parameters
    '("GdkEventMask" "event_mask")
  )
)

(define-method set_icon
  (of-object "GdkWindow")
  (c-name "gdk_window_set_icon")
  (return-type "none")
  (parameters
    '("GdkWindow*" "icon_window")
    '("GdkPixmap*" "pixmap")
    '("GdkBitmap*" "mask")
  )
)

(define-method set_icon_name
  (of-object "GdkWindow")
  (c-name "gdk_window_set_icon_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method set_group
  (of-object "GdkWindow")
  (c-name "gdk_window_set_group")
  (return-type "none")
  (parameters
    '("GdkWindow*" "leader")
  )
)

(define-method set_decorations
  (of-object "GdkWindow")
  (c-name "gdk_window_set_decorations")
  (return-type "none")
  (parameters
    '("GdkWMDecoration" "decorations")
  )
)

(define-method set_functions
  (of-object "GdkWindow")
  (c-name "gdk_window_set_functions")
  (return-type "none")
  (parameters
    '("GdkWMFunction" "functions")
  )
)

(define-function window_get_toplevels
  (c-name "gdk_window_get_toplevels")
  (return-type "GList*")
)

(define-function get_default_root_window
  (c-name "gdk_get_default_root_window")
  (return-type "GdkWindow*")
)

(define-method register_dnd
  (of-object "GdkWindow")
  (c-name "gdk_window_register_dnd")
  (return-type "none")
)

(define-method invalidate_rect
  (of-object "GdkWindow")
  (c-name "gdk_window_invalidate_rect")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "rect")
    '("gboolean" "invalidate_children")
  )
)

(define-method invalidate_region
  (of-object "GdkWindow")
  (c-name "gdk_window_invalidate_region")
  (return-type "none")
  (parameters
    '("GdkRegion*" "region")
    '("gboolean" "invalidate_children")
  )
)

(define-method get_update_area
  (of-object "GdkWindow")
  (c-name "gdk_window_get_update_area")
  (return-type "GdkRegion*")
)

(define-method freeze_updates
  (of-object "GdkWindow")
  (c-name "gdk_window_freeze_updates")
  (return-type "none")
)

(define-method thaw_updates
  (of-object "GdkWindow")
  (c-name "gdk_window_thaw_updates")
  (return-type "none")
)

(define-method process_updates
  (of-object "GdkWindow")
  (c-name "gdk_window_process_updates")
  (return-type "none")
  (parameters
    '("gboolean" "update_children")
  )
)


;;; XXXX functions from GTK that extend GDK types.
(define-method finish
  (of-object "GdkDragContext")
  (c-name "gtk_drag_finish")
  (return-type "none")
  (parameters
    '("gboolean" "success")
    '("gboolean" "del")
    '("guint32" "time" (default "GDK_CURRENT_TIME"))
  )
)

(define-method get_source_widget
  (of-object "GdkDragContext")
  (c-name "gtk_drag_get_source_widget")
  (return-type "GtkWidget*")
)

(define-method set_icon_widget
  (of-object "GdkDragContext")
  (c-name "gtk_drag_set_icon_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("gint" "hot_x")
    '("gint" "hot_y")
  )
)

(define-method set_icon_pixmap
  (of-object "GdkDragContext")
  (c-name "gtk_drag_set_icon_pixmap")
  (return-type "none")
  (parameters
    '("GdkColormap*" "colormap")
    '("GdkPixmap*" "pixmap")
    '("GdkBitmap*" "mask")
    '("gint" "hot_x")
    '("gint" "hot_y")
  )
)

(define-method set_icon_default
  (of-object "GdkDragContext")
  (c-name "gtk_drag_set_icon_default")
  (return-type "none")
)
