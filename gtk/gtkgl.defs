;; -*- scheme -*-
; object definitions ...
(object GLArea
  (in-module Gtk)
  (parent DrawingArea (Gtk))
  (c-name GtkGLArea)
)

;; Enumerations and flags ...


;; From /usr/include/gtkgl/gdkgl.h

(function query
  (c-name gdk_gl_query)
  (return-type gint)
)

(function get_info
  (c-name gdk_gl_get_info)
  (return-type gchar*)
)

(function choose_visual
  (c-name gdk_gl_choose_visual)
  (return-type GdkVisual*)
  (parameter (type-and-name int* attrlist))
)

(function get_config
  (c-name gdk_gl_get_config)
  (return-type int)
  (parameter (type-and-name GdkVisual* visual))
  (parameter (type-and-name int attrib))
)

(function gdk_gl_context_new
  (c-name gdk_gl_context_new)
  (return-type GdkGLContext*)
  (parameter (type-and-name GdkVisual* visual))
)

(function gdk_gl_context_share_new
  (c-name gdk_gl_context_share_new)
  (return-type GdkGLContext*)
  (parameter (type-and-name GdkVisual* visual))
  (parameter (type-and-name GdkGLContext* sharelist))
  (parameter (type-and-name gint direct))
)

(function gdk_gl_context_attrlist_share_new
  (c-name gdk_gl_context_attrlist_share_new)
  (return-type GdkGLContext*)
  (parameter (type-and-name int* attrlist))
  (parameter (type-and-name GdkGLContext* sharelist))
  (parameter (type-and-name gint direct))
)

(method ref
  (of-object GLContext (Gdk))
  (c-name gdk_gl_context_ref)
  (return-type GdkGLContext*)
)

(method unref
  (of-object GLContext (Gdk))
  (c-name gdk_gl_context_unref)
  (return-type none)
)

(function gdk_gl_make_current
  (c-name gdk_gl_make_current)
  (return-type gint)
  (parameter (type-and-name GdkDrawable* drawable))
  (parameter (type-and-name GdkGLContext* context))
)

(function gdk_gl_swap_buffers
  (c-name gdk_gl_swap_buffers)
  (return-type none)
  (parameter (type-and-name GdkDrawable* drawable))
)

(function gdk_gl_wait_gdk
  (c-name gdk_gl_wait_gdk)
  (return-type none)
)

(function gdk_gl_wait_gl
  (c-name gdk_gl_wait_gl)
  (return-type none)
)

(function gdk_gl_pixmap_new
  (c-name gdk_gl_pixmap_new)
  (return-type GdkGLPixmap*)
  (parameter (type-and-name GdkVisual* visual))
  (parameter (type-and-name GdkPixmap* pixmap))
)

(method ref
  (of-object GLPixmap (Gdk))
  (c-name gdk_gl_pixmap_ref)
  (return-type GdkGLPixmap*)
)

(method unref
  (of-object GLPixmap (Gdk))
  (c-name gdk_gl_pixmap_unref)
  (return-type none)
)

(method make_current
  (of-object GLPixmap (Gdk))
  (c-name gdk_gl_pixmap_make_current)
  (return-type gint)
  (parameter (type-and-name GdkGLContext* context))
)

(function gdk_gl_use_gdk_font
  (c-name gdk_gl_use_gdk_font)
  (return-type none)
  (parameter (type-and-name GdkFont* font))
  (parameter (type-and-name int first))
  (parameter (type-and-name int count))
  (parameter (type-and-name int list_base))
)



;; From /usr/include/gtkgl/gtkglarea.h

(function gtk_gl_area_get_type
  (c-name gtk_gl_area_get_type)
  (return-type GtkType)
)

(function gtk_gl_area_new
  (c-name gtk_gl_area_new)
  (is-constructor-of GtkGLArea)
  (return-type GtkWidget*)
  (parameter (type-and-name int* attrList))
)

(function gtk_gl_area_share_new
  (c-name gtk_gl_area_share_new)
  (is-constructor-of GtkGLArea)
  (return-type GtkWidget*)
  (parameter (type-and-name int* attrList))
  (parameter (type-and-name GtkGLArea* share))
)

(method new_vargs
  (of-object GLArea (Gtk))
  (c-name gtk_gl_area_new_vargs)
  (return-type GtkWidget*)
  (varargs t)
)

(method make_current
  (of-object GLArea (Gtk))
  (c-name gtk_gl_area_make_current)
  (return-type gint)
)

(method begingl
  (of-object GLArea (Gtk))
  (c-name gtk_gl_area_begingl)
  (return-type gint)
)

(method endgl
  (of-object GLArea (Gtk))
  (c-name gtk_gl_area_endgl)
  (return-type none)
)

(method swapbuffers
  (of-object GLArea (Gtk))
  (c-name gtk_gl_area_swapbuffers)
  (return-type none)
)

(method swap_buffers
  (of-object GLArea (Gtk))
  (c-name gtk_gl_area_swap_buffers)
  (return-type none)
)

(method size
  (of-object GLArea (Gtk))
  (c-name gtk_gl_area_size)
  (return-type none)
  (parameter (type-and-name gint width))
  (parameter (type-and-name gint height))
)


