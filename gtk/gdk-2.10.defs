;; From gdkalias.h



;; From gdkcairo.h

(define-function cairo_set_source_pixmap
  (c-name "gdk_cairo_set_source_pixmap")
  (return-type "none")
  (parameters
    '("cairo_t*" "cr")
    '("GdkPixmap*" "pixmap")
    '("double" "pixmap_x")
    '("double" "pixmap_y")
  )
)



;; From gdkcolor.h



;; From gdkcursor.h



;; From gdkdisplay.h

(define-method supports_shapes
  (of-object "GdkDisplay")
  (c-name "gdk_display_supports_shapes")
  (return-type "gboolean")
)

(define-method supports_input_shapes
  (of-object "GdkDisplay")
  (c-name "gdk_display_supports_input_shapes")
  (return-type "gboolean")
)



;; From gdkdisplaymanager.h



;; From gdkdnd.h



;; From gdkdrawable.h



;; From gdkenumtypes.h



;; From gdkevents.h



;; From gdkfont.h



;; From gdkgc.h



;; From gdk.h



;; From gdki18n.h



;; From gdkimage.h



;; From gdkinput.h



;; From gdkkeys.h



;; From gdkkeysyms.h



;; From gdkpango.h



;; From gdkpixbuf.h



;; From gdkpixmap.h

(define-function pixmap_foreign_new_for_screen
  (c-name "gdk_pixmap_foreign_new_for_screen")
  (return-type "GdkPixmap*")
  (parameters
    '("GdkScreen*" "screen")
    '("GdkNativeWindow" "anid")
    '("gint" "width")
    '("gint" "height")
    '("gint" "depth")
  )
)



;; From gdkprivate.h



;; From gdkproperty.h

(define-function atom_intern_static_string
  (c-name "gdk_atom_intern_static_string")
  (return-type "GdkAtom")
  (parameters
    '("const-gchar*" "atom_name")
  )
)



;; From gdkregion.h



;; From gdkrgb.h



;; From gdkscreen.h

(define-method is_composited
  (of-object "GdkScreen")
  (c-name "gdk_screen_is_composited")
  (return-type "gboolean")
)

(define-method set_font_options
  (of-object "GdkScreen")
  (c-name "gdk_screen_set_font_options")
  (return-type "none")
  (parameters
    '("const-cairo_font_options_t*" "options")
  )
)

(define-method get_font_options
  (of-object "GdkScreen")
  (c-name "gdk_screen_get_font_options")
  (return-type "const-cairo_font_options_t*")
)

(define-method set_resolution
  (of-object "GdkScreen")
  (c-name "gdk_screen_set_resolution")
  (return-type "none")
  (parameters
    '("gdouble" "dpi")
  )
)

(define-method get_resolution
  (of-object "GdkScreen")
  (c-name "gdk_screen_get_resolution")
  (return-type "gdouble")
)

(define-method get_active_window
  (of-object "GdkScreen")
  (c-name "gdk_screen_get_active_window")
  (return-type "GdkWindow*")
)

(define-method get_window_stack
  (of-object "GdkScreen")
  (c-name "gdk_screen_get_window_stack")
  (return-type "GList*")
)



;; From gdkselection.h



;; From gdkspawn.h



;; From gdktypes.h



;; From gdkvisual.h



;; From gdkwindow.h

(define-method input_shape_combine_mask
  (of-object "GdkWindow")
  (c-name "gdk_window_input_shape_combine_mask")
  (return-type "none")
  (parameters
    '("GdkBitmap*" "mask")
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method input_shape_combine_region
  (of-object "GdkWindow")
  (c-name "gdk_window_input_shape_combine_region")
  (return-type "none")
  (parameters
    '("GdkRegion*" "shape_region")
    '("gint" "offset_x")
    '("gint" "offset_y")
  )
)

(define-method set_child_input_shapes
  (of-object "GdkWindow")
  (c-name "gdk_window_set_child_input_shapes")
  (return-type "none")
)

(define-method merge_child_input_shapes
  (of-object "GdkWindow")
  (c-name "gdk_window_merge_child_input_shapes")
  (return-type "none")
)

(define-method get_type_hint
  (of-object "GdkWindow")
  (c-name "gdk_window_get_type_hint")
  (return-type "GdkWindowTypeHint")
)



;; gdkx.h
;; XXX: I don't know if these functions are really new in gtk+ 2.10.

(ifdef GDK_TARGET_X11

(define-method get_xdisplay
  (of-object "GdkDrawable")
  (c-name "gdk_x11_drawable_get_xdisplay")
  (return-type "Display*")
)

(define-method get_xid
  (of-object "GdkDrawable")
  (c-name "gdk_x11_drawable_get_xid")
  (return-type "XID")
)

(define-method get_xdisplay
  (of-object "GdkImage")
  (c-name "gdk_x11_image_get_xdisplay")
  (return-type "Display*")
)

(define-method get_ximage
  (of-object "GdkImage")
  (c-name "gdk_x11_image_get_ximage")
  (return-type "XImage*")
)

(define-method get_xdisplay
  (of-object "GdkColormap")
  (c-name "gdk_x11_colormap_get_xdisplay")
  (return-type "Display*")
)

(define-method get_xcolormap
  (of-object "GdkColormap")
  (c-name "gdk_x11_colormap_get_xcolormap")
  (return-type "Colormap")
)

(define-method get_xdisplay
  (of-object "GdkCursor")
  (c-name "gdk_x11_cursor_get_xdisplay")
  (return-type "Display*")
)

(define-method get_xcursor
  (of-object "GdkCursor")
  (c-name "gdk_x11_cursor_get_xcursor")
  (return-type "Cursor")
)

(define-method get_xdisplay
  (of-object "GdkDisplay")
  (c-name "gdk_x11_display_get_xdisplay")
  (return-type "Display*")
)

(define-method get_xvisual
  (of-object "GdkVisual")
  (c-name "gdk_x11_visual_get_xvisual")
  (return-type "Visual*")
)

(define-method get_xdisplay
  (of-object "GdkGC")
  (c-name "gdk_x11_gc_get_xdisplay")
  (return-type "Display*")
)

(define-method get_xgc
  (of-object "GdkGC")
  (c-name "gdk_x11_gc_get_xgc")
  (return-type "GC")
)

(define-method get_xscreen
  (of-object "GdkScreen")
  (c-name "gdk_x11_screen_get_xscreen")
  (return-type "Screen*")
)

(define-method get_screen_number
  (of-object "GdkScreen")
  (c-name "gdk_x11_screen_get_screen_number")
  (return-type "int")
)

(define-method set_user_time
  (of-object "GdkWindow")
  (c-name "gdk_x11_window_set_user_time")
  (return-type "none")
  (parameters
    '("guint32" "timestamp")
  )
)

(define-method move_to_current_desktop
  (of-object "GdkWindow")
  (c-name "gdk_x11_window_move_to_current_desktop")
  (return-type "none")
)

(define-method get_window_manager_name
  (of-object "GdkScreen")
  (c-name "gdk_x11_screen_get_window_manager_name")
  (return-type "const-char*")
)

(define-function x11_get_default_root_xwindow
  (c-name "gdk_x11_get_default_root_xwindow")
  (return-type "Window")
)

(define-function x11_get_default_xdisplay
  (c-name "gdk_x11_get_default_xdisplay")
  (return-type "Display*")
)

(define-function x11_get_default_screen
  (c-name "gdk_x11_get_default_screen")
  (return-type "gint")
)

(define-method lookup_visual
  (of-object "GdkScreen")
  (c-name "gdk_x11_screen_lookup_visual")
  (return-type "GdkVisual*")
  (parameters
    '("VisualID" "xvisualid")
  )
)

(define-function gdkx_visual_get
  (c-name "gdkx_visual_get")
  (return-type "GdkVisual*")
  (parameters
    '("VisualID" "xvisualid")
  )
)

(define-function gdkx_colormap_get
  (c-name "gdkx_colormap_get")
  (return-type "GdkColormap*")
  (parameters
    '("Colormap" "xcolormap")
  )
)

(define-function x11_colormap_foreign_new
  (c-name "gdk_x11_colormap_foreign_new")
  (is-constructor-of "GdkX11ColormapForeign")
  (return-type "GdkColormap*")
  (parameters
    '("GdkVisual*" "visual")
    '("Colormap" "xcolormap")
  )
)

(define-function xid_table_lookup_for_display
  (c-name "gdk_xid_table_lookup_for_display")
  (return-type "gpointer")
  (parameters
    '("GdkDisplay*" "display")
    '("XID" "xid")
  )
)

(define-function x11_get_server_time
  (c-name "gdk_x11_get_server_time")
  (return-type "guint32")
  (parameters
    '("GdkWindow*" "window")
  )
)

(define-method get_user_time
  (of-object "GdkDisplay")
  (c-name "gdk_x11_display_get_user_time")
  (return-type "guint32")
)

(define-method set_cursor_theme
  (of-object "GdkDisplay")
  (c-name "gdk_x11_display_set_cursor_theme")
  (return-type "none")
  (parameters
    '("const-gchar*" "theme")
    '("const-gint" "size")
  )
)

(define-method supports_net_wm_hint
  (of-object "GdkScreen")
  (c-name "gdk_x11_screen_supports_net_wm_hint")
  (return-type "gboolean")
  (parameters
    '("GdkAtom" "property")
  )
)

(define-function xid_table_lookup
  (c-name "gdk_xid_table_lookup")
  (return-type "gpointer")
  (parameters
    '("XID" "xid")
  )
)

(define-function net_wm_supports
  (c-name "gdk_net_wm_supports")
  (return-type "gboolean")
  (parameters
    '("GdkAtom" "property")
  )
)

(define-function x11_grab_server
  (c-name "gdk_x11_grab_server")
  (return-type "none")
)

(define-function x11_ungrab_server
  (c-name "gdk_x11_ungrab_server")
  (return-type "none")
)

(define-function x11_lookup_xdisplay
  (c-name "gdk_x11_lookup_xdisplay")
  (return-type "GdkDisplay*")
  (parameters
    '("Display*" "xdisplay")
  )
)

(define-function x11_atom_to_xatom_for_display
  (c-name "gdk_x11_atom_to_xatom_for_display")
  (return-type "Atom")
  (parameters
    '("GdkDisplay*" "display")
    '("GdkAtom" "atom")
  )
)

(define-function x11_xatom_to_atom_for_display
  (c-name "gdk_x11_xatom_to_atom_for_display")
  (return-type "GdkAtom")
  (parameters
    '("GdkDisplay*" "display")
    '("Atom" "xatom")
  )
)

(define-function x11_get_xatom_by_name_for_display
  (c-name "gdk_x11_get_xatom_by_name_for_display")
  (return-type "Atom")
  (parameters
    '("GdkDisplay*" "display")
    '("const-gchar*" "atom_name")
  )
)

(define-function x11_get_xatom_name_for_display
  (c-name "gdk_x11_get_xatom_name_for_display")
  (return-type "const-gchar*")
  (parameters
    '("GdkDisplay*" "display")
    '("Atom" "xatom")
  )
)

(define-function x11_atom_to_xatom
  (c-name "gdk_x11_atom_to_xatom")
  (return-type "Atom")
  (parameters
    '("GdkAtom" "atom")
  )
)

(define-function x11_xatom_to_atom
  (c-name "gdk_x11_xatom_to_atom")
  (return-type "GdkAtom")
  (parameters
    '("Atom" "xatom")
  )
)

(define-function x11_get_xatom_by_name
  (c-name "gdk_x11_get_xatom_by_name")
  (return-type "Atom")
  (parameters
    '("const-gchar*" "atom_name")
  )
)

(define-function x11_get_xatom_name
  (c-name "gdk_x11_get_xatom_name")
  (return-type "const-gchar*")
  (parameters
    '("Atom" "xatom")
  )
)

(define-method grab
  (of-object "GdkDisplay")
  (c-name "gdk_x11_display_grab")
  (return-type "none")
)

(define-method ungrab
  (of-object "GdkDisplay")
  (c-name "gdk_x11_display_ungrab")
  (return-type "none")
)

(define-function x11_register_standard_event_type
  (c-name "gdk_x11_register_standard_event_type")
  (return-type "none")
  (parameters
    '("GdkDisplay*" "display")
    '("gint" "event_base")
    '("gint" "n_events")
  )
)

(define-method get_xfont
  (of-object "GdkFont")
  (c-name "gdk_x11_font_get_xfont")
  (return-type "gpointer")
)

(define-method x11_font_get_xdisplay
  (of-object "GdkFont")
  (c-name "gdk_x11_font_get_xdisplay")
  (return-type "Display*")
)

(define-method get_name
  (of-object "GdkFont")
  (c-name "gdk_x11_font_get_name")
  (return-type "const-char*")
)


) ; (ifdef GDK_TARGET_X11
