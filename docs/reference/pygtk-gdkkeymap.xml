<?xml version="1.0" standalone="no"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<refentry id="class-gdkkeymap">
  <refnamediv>
    <refname>gtk.gdk.Keymap</refname>
    <refpurpose>an object containing mappings of keys to key
values.</refpurpose>
  </refnamediv>

  <refsect1>
    <title>Synopsis</title>

    <classsynopsis language="python">
      <ooclass><classname>gtk.gdk.Keymap</classname></ooclass>
      <ooclass><classname><link
linkend="class-gobject">gobject.GObject</link></classname></ooclass>

<!-- NOT IMPLEMENTED
<methodsynopsis language="python">
    <methodname><link linkend="method-gdkkeymap- -lookup-key">lookup_key</link></methodname>
    <methodparam><parameter role="keyword">key</parameter></methodparam>
  </methodsynopsis>
<methodsynopsis language="python">
    <methodname><link linkend="method-gdkkeymap- -translate-keyboard-state">translate_keyboard_state</link></methodname>
    <methodparam><parameter role="keyword">hardware_keycode</parameter></methodparam>
    <methodparam><parameter role="keyword">state</parameter></methodparam>
    <methodparam><parameter role="keyword">group</parameter></methodparam>
    <methodparam><parameter role="keyword">keyval</parameter></methodparam>
    <methodparam><parameter role="keyword">effective_group</parameter></methodparam>
    <methodparam><parameter role="keyword">level</parameter></methodparam>
    <methodparam><parameter role="keyword">consumed_modifiers</parameter></methodparam>
  </methodsynopsis>
<methodsynopsis language="python">
    <methodname><link linkend="method-gdkkeymap- -get-entries-for-keyval">get_entries_for_keyval</link></methodname>
    <methodparam><parameter role="keyword">keyval</parameter></methodparam>
    <methodparam><parameter role="keyword">keys</parameter></methodparam>
    <methodparam><parameter role="keyword">n_keys</parameter></methodparam>
  </methodsynopsis>
<methodsynopsis language="python">
    <methodname><link linkend="method-gdkkeymap- -get-entries-for-keycode">get_entries_for_keycode</link></methodname>
    <methodparam><parameter role="keyword">hardware_keycode</parameter></methodparam>
    <methodparam><parameter role="keyword">keys</parameter></methodparam>
    <methodparam><parameter role="keyword">keyvals</parameter></methodparam>
    <methodparam><parameter role="keyword">n_entries</parameter></methodparam>
  </methodsynopsis>
END NOT IMPLEMENTED -->

      <methodsynopsis language="python">
	<methodname><link
linkend="method-gdkkeymap--get-direction">get_direction</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
    </classsynopsis>

    <programlisting>
<emphasis role="bold">Functions</emphasis>

<methodsynopsis language="python">
	<methodname><link
linkend="function-gdk--keymap-get-default">gtk.gdk.keymap_get_default</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis><methodsynopsis language="python">
	<methodname><link
linkend="function-gdk--keyval-name">gtk.gdk.keyval_name</link></methodname>
	<methodparam><parameter
		       role="keyword">keyval</parameter></methodparam>
      </methodsynopsis><methodsynopsis language="python">
	<methodname><link
linkend="function-gdk--keyval-from-name">gtk.gdk.keyval_from_name</link></methodname>
	<methodparam><parameter
		       role="keyword">keyval_name</parameter></methodparam>
      </methodsynopsis><methodsynopsis language="python">
	<methodname><link
linkend="function-gdk--keyval-to-upper">gtk.gdk.keyval_to_upper</link></methodname>
	<methodparam><parameter
		       role="keyword">keyval</parameter></methodparam>
      </methodsynopsis><methodsynopsis language="python">
	<methodname><link
linkend="function-gdk--keyval-to-lower">gtk.gdk.keyval_to_lower</link></methodname>
	<methodparam><parameter
		       role="keyword">keyval</parameter></methodparam>
      </methodsynopsis><methodsynopsis language="python">
	<methodname><link
linkend="function-gdk--keyval-is-upper">gtk.gdk.keyval_is_upper</link></methodname>
	<methodparam><parameter
		       role="keyword">keyval</parameter></methodparam>
      </methodsynopsis><methodsynopsis language="python">
	<methodname><link
linkend="function-gdk--keyval-is-lower">gtk.gdk.keyval_is_lower</link></methodname>
	<methodparam><parameter
		       role="keyword">keyval</parameter></methodparam>
      </methodsynopsis><methodsynopsis language="python">
	<methodname><link
linkend="function-gdk--keyval-to-unicode">gtk.gdk.keyval_to_unicode</link></methodname>
	<methodparam><parameter
		       role="keyword">keyval</parameter></methodparam>
      </methodsynopsis><methodsynopsis language="python">
	<methodname><link
linkend="function-gdk--unicode-to-keyval">gtk.gdk.unicode_to_keyval</link></methodname>
	<methodparam><parameter role="keyword">wc</parameter></methodparam>
      </methodsynopsis></programlisting>

  </refsect1>

  <refsect1>
    <title>Ancestry</title>

<synopsis>+-- <link linkend="class-gobject">gobject.GObject</link>
  +-- <link linkend="class-gdkkeymap">gtk.gdk.Keymap</link>
</synopsis>

  </refsect1>

  <refsect1>
    <title>Signal Prototypes</title>

    <variablelist>
      <varlistentry>
        <term>"<link linkend="signal-gtkgdkkeymap--direction-changed">direction-changed</link>"</term>
        <listitem>
          <methodsynopsis language="python"><methodname>callback</methodname>
            <methodparam><parameter>gdkkeymap</parameter></methodparam>
            <methodparam><parameter>user_param1</parameter></methodparam>
            <methodparam><parameter>...</parameter></methodparam>
          </methodsynopsis>
        </listitem>
      </varlistentry>
    </variablelist>

  </refsect1>

  <refsect1>
    <title>Description</title>

    <para>A <link
linkend="class-gdkkeymap"><classname>gtk.gdk.Keymap</classname></link>
defines the translation from keyboard state (including a hardware key, a
modifier mask, and active keyboard group) to a keyval. This translation has
two phases. The first phase is to determine the effective keyboard group and
level for the keyboard state; the second phase is to look up the
keycode/group/level triplet in the keymap and see what keyval it corresponds
to. One <link
linkend="class-gdkkeymap"><classname>gtk.gdk.Keymap</classname></link>
object exists for each user display. <literal>PyGTK</literal> supports only
one display, so <link
linkend="function-gdk--keymap-get-default"><function>gtk.gdk.keymap_get_default()</function>()</link> 
returns the singleton <link
linkend="class-gdkkeymap"><classname>gtk.gdk.Keymap</classname></link>.</para>

    <para>A keymap is a mapping from a Keymap key to key values. You can
think of a Keymap key as a representation of a symbol printed on a physical
keyboard key. That is, it contains three pieces of information. First, it
contains the hardware keycode; this is an identifying number for a physical
key. Second, it contains the level of the key. The level indicates which
symbol on the key will be used, in a vertical direction. So on a standard US
keyboard, the key with the number "1" on it also has the exclamation point
("!") character on it. The level indicates whether to use the "1" or the "!"
symbol. The letter keys are considered to have a lowercase letter at level
0, and an uppercase letter at level 1, though only the uppercase letter is
printed. Third, the Keymap key contains a group; groups are not used on
standard US keyboards, but are used in many other countries. On a keyboard
with groups, there can be 3 or 4 symbols printed on a single key. The group
indicates movement in a horizontal direction. Usually groups are used for
two different languages. In group 0, a key might have two English
characters, and in group 1 it might have two Hebrew characters. The Hebrew
characters will be printed on the key next to the English characters.
</para>

  </refsect1>

  <refsect1>
    <title>Methods</title>

<!-- NOT IMPLEMENTED
  <refsect2 id="method-gdkkeymap- -lookup-key">
    <title>gtk.gdk.Keymap.lookup_key</title>

<programlisting><methodsynopsis language="python">
    <methodname>lookup_key</methodname>
    <methodparam><parameter role="keyword">key</parameter></methodparam>
  </methodsynopsis></programlisting>
  <variablelist>
    <varlistentry>
      <term><parameter role="keyword">key</parameter>&nbsp;:</term>
      <listitem><simpara>a <literal>Keymap key</literal> with keycode, group, and level initialized</simpara></listitem>
    </varlistentry>
    <varlistentry>
      <term><emphasis>Returns</emphasis>&nbsp;:</term>
      <listitem><simpara>a keyval, or 0 if none was mapped to the given <parameter>key</parameter></simpara></listitem>
    </varlistentry>
  </variablelist>
<para>
Looks up the keyval mapped to a keycode/group/level triplet.
If no keyval is bound to <parameter>key</parameter>, returns 0. For normal user input,
you want to use <link linkend="method-gdkkeymap- -translate-keyboard-state"><function>gtk.gdk.Keymap.translate_keyboard_state()</function></link> instead of
this function, since the effective group/level may not be
the same as the current keyboard state.
</para>  </refsect2>


  <refsect2 id="method-gdkkeymap- -translate-keyboard-state">
    <title>gtk.gdk.Keymap.translate_keyboard_state</title>

<programlisting><methodsynopsis language="python">
    <methodname>translate_keyboard_state</methodname>
    <methodparam><parameter role="keyword">hardware_keycode</parameter></methodparam>
    <methodparam><parameter role="keyword">state</parameter></methodparam>
    <methodparam><parameter role="keyword">group</parameter></methodparam>
    <methodparam><parameter role="keyword">keyval</parameter></methodparam>
    <methodparam><parameter role="keyword">effective_group</parameter></methodparam>
    <methodparam><parameter role="keyword">level</parameter></methodparam>
    <methodparam><parameter role="keyword">consumed_modifiers</parameter></methodparam>
  </methodsynopsis></programlisting>
  <variablelist>
    <varlistentry>
      <term><parameter role="keyword">hardware_keycode</parameter>&nbsp;:</term>
      <listitem><simpara>a keycode</simpara></listitem>
    </varlistentry>
    <varlistentry>
      <term><parameter role="keyword">state</parameter>&nbsp;:</term>
      <listitem><simpara>a modifier state</simpara></listitem>
    </varlistentry>
    <varlistentry>
      <term><parameter role="keyword">group</parameter>&nbsp;:</term>
      <listitem><simpara>active keyboard group</simpara></listitem>
    </varlistentry>
    <varlistentry>
      <term><parameter role="keyword">keyval</parameter>&nbsp;:</term>
      <listitem><simpara>return location for keyval</simpara></listitem>
    </varlistentry>
    <varlistentry>
      <term><parameter role="keyword">effective_group</parameter>&nbsp;:</term>
      <listitem><simpara>return location for effective group</simpara></listitem>
    </varlistentry>
    <varlistentry>
      <term><parameter role="keyword">level</parameter>&nbsp;:</term>
      <listitem><simpara>return location for level</simpara></listitem>
    </varlistentry>
    <varlistentry>
      <term><parameter role="keyword">consumed_modifiers</parameter>&nbsp;:</term>
      <listitem><simpara>return location for modifiers that were used to determine the group or level</simpara></listitem>
    </varlistentry>
    <varlistentry>
      <term><emphasis>Returns</emphasis>&nbsp;:</term>
      <listitem><simpara><literal>TRUE</literal> if there was a keyval bound to the keycode/state/group</simpara></listitem>
    </varlistentry>
  </variablelist>
<para>
Translates the contents of a <literal>GdkEventKey</literal> into a keyval, effective
group, and level. Modifiers that affected the translation and
are thus unavailable for application use are returned in
<parameter>consumed_modifiers</parameter>.  See <function>gdk_keyval_get_keys()</function> for an explanation of
groups and levels.  The <parameter>effective_group</parameter> is the group that was
actually used for the translation; some keys such as Enter are not
affected by the active keyboard group. The <parameter>level</parameter> is derived from
<parameter>state</parameter>. For convenience, <literal>GdkEventKey</literal> already contains the translated
keyval, so this function isn't as useful as you might think.
</para>  </refsect2>


  <refsect2 id="method-gdkkeymap- -get-entries-for-keyval">
    <title>gtk.gdk.Keymap.get_entries_for_keyval</title>

<programlisting><methodsynopsis language="python">
    <methodname>get_entries_for_keyval</methodname>
    <methodparam><parameter role="keyword">keyval</parameter></methodparam>
    <methodparam><parameter role="keyword">keys</parameter></methodparam>
    <methodparam><parameter role="keyword">n_keys</parameter></methodparam>
  </methodsynopsis></programlisting>
  <variablelist>
    <varlistentry>
      <term><parameter role="keyword">keyval</parameter>&nbsp;:</term>
      <listitem><simpara>a keyval, such as <literal>GDK_a</literal>, <literal>GDK_Up</literal>, <literal>GDK_Return</literal>, etc.</simpara></listitem>
    </varlistentry>
    <varlistentry>
      <term><parameter role="keyword">keys</parameter>&nbsp;:</term>
      <listitem><simpara>return location for an array of <literal>Keymap key</literal></simpara></listitem>
    </varlistentry>
    <varlistentry>
      <term><parameter role="keyword">n_keys</parameter>&nbsp;:</term>
      <listitem><simpara>return location for number of elements in returned array</simpara></listitem>
    </varlistentry>
    <varlistentry>
      <term><emphasis>Returns</emphasis>&nbsp;:</term>
      <listitem><simpara><literal>TRUE</literal> if keys were found and returned</simpara></listitem>
    </varlistentry>
  </variablelist>
<para>
Obtains a list of keycode/group/level combinations that will
generate <parameter>keyval</parameter>. Groups and levels are two kinds of keyboard mode;
in general, the level determines whether the top or bottom symbol
on a key is used, and the group determines whether the left or
right symbol is used. On US keyboards, the shift key changes the
keyboard level, and there are no groups. A group switch key might
convert a keyboard between Hebrew to English modes, for example.
<literal>GdkEventKey</literal> contains a <literal>group</literal> field that indicates the active
keyboard group. The level is computed from the modifier mask.
The returned array should be freed
with <function>g_free()</function>.
</para>  </refsect2>


  <refsect2 id="method-gdkkeymap- -get-entries-for-keycode">
    <title>gtk.gdk.Keymap.get_entries_for_keycode</title>

<programlisting><methodsynopsis language="python">
    <methodname>get_entries_for_keycode</methodname>
    <methodparam><parameter role="keyword">hardware_keycode</parameter></methodparam>
    <methodparam><parameter role="keyword">keys</parameter></methodparam>
    <methodparam><parameter role="keyword">keyvals</parameter></methodparam>
    <methodparam><parameter role="keyword">n_entries</parameter></methodparam>
  </methodsynopsis></programlisting>
  <variablelist>
    <varlistentry>
      <term><parameter role="keyword">hardware_keycode</parameter>&nbsp;:</term>
      <listitem><simpara>a keycode</simpara></listitem>
    </varlistentry>
    <varlistentry>
      <term><parameter role="keyword">keys</parameter>&nbsp;:</term>
      <listitem><simpara>return location for array of <literal>Keymap key</literal>, or NULL</simpara></listitem>
    </varlistentry>
    <varlistentry>
      <term><parameter role="keyword">keyvals</parameter>&nbsp;:</term>
      <listitem><simpara>return location for array of keyvals, or NULL</simpara></listitem>
    </varlistentry>
    <varlistentry>
      <term><parameter role="keyword">n_entries</parameter>&nbsp;:</term>
      <listitem><simpara>length of <parameter>keys</parameter> and <parameter>keyvals</parameter></simpara></listitem>
    </varlistentry>
    <varlistentry>
      <term><emphasis>Returns</emphasis>&nbsp;:</term>
      <listitem><simpara><literal>TRUE</literal> if there were any entries</simpara></listitem>
    </varlistentry>
  </variablelist>
<para>
Returns the keyvals bound to <parameter>hardware_keycode</parameter>.
The Nth <literal>Keymap key</literal> in <parameter>keys</parameter> is bound to the Nth
keyval in <parameter>keyvals</parameter>. Free the returned arrays with <function>g_free()</function>.
When a keycode is pressed by the user, the keyval from
this list of entries is selected by considering the effective
keyboard group and level. See <link linkend="method-gdkkeymap- -translate-keyboard-state"><function>gtk.gdk.Keymap.translate_keyboard_state()</function></link>.
</para>  </refsect2>
END NOT IMPLEMENTED -->

    <refsect2 id="method-gdkkeymap--get-direction">
    <title>gtk.gdk.Keymap.get_direction</title>

<programlisting><methodsynopsis language="python">
    <methodname>get_direction</methodname>
    <methodparam></methodparam>  </methodsynopsis></programlisting>
  <variablelist>
    <varlistentry>
      <term><emphasis>Returns</emphasis>&nbsp;:</term>
      <listitem><simpara>a Pango direction: <literal>pango.DIRECTION_LTR</literal> or <literal>pango.DIRECTION_RTL</literal>.</simpara></listitem>
    </varlistentry>
  </variablelist>

      <para>The <methodname>get_direction</methodname>() method returns the direction of the keymap.</para>

    </refsect2>

  </refsect1>

  <refsect1>
    <title>Functions</title>

    <refsect2 id="function-gdk--keymap-get-default">
      <title>gtk.gdk.keymap_get_default</title>

      <programlisting><methodsynopsis language="python">
          <methodname>gtk.gdk.keymap_get_default</methodname>
          <methodparam></methodparam>
        </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>the default gdk keymap for the
display.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>The <function>gtk.gdk.keymap_get_default</function>() function
returns the default <link
linkend="class-gdkkeymap"><classname>gtk.gdk.Keymap</classname></link> for
the display.</para>

    </refsect2>

    <refsect2 id="function-gdk--keyval-name">
      <title>gtk.gdk.keyval_name</title>

      <programlisting><methodsynopsis language="python">
          <methodname>gtk.gdk.keyval_name</methodname>
          <methodparam><parameter
			 role="keyword">keyval</parameter></methodparam>
        </methodsynopsis></programlisting>

      <variablelist>
	<varlistentry>
          <term><parameter role="keyword">keyval</parameter>&nbsp;:</term>
          <listitem><simpara>a key value</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>a string containing the name of the key, or
NOne if keyval is not a valid key.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>The <function>gtk.gdk.keyval_name</function>() function converts
the key value specified by <parameter>keyval</parameter> into a symbolic
name.</para>

    </refsect2>

    <refsect2 id="function-gdk--keyval-from-name">
      <title>gtk.gdk.keyval_from_name</title>

      <programlisting><methodsynopsis language="python">
          <methodname>gtk.gdk.keyval_from_name</methodname>
          <methodparam><parameter
			 role="keyword">keyval_name</parameter></methodparam>
        </methodsynopsis></programlisting>

      <variablelist>
	<varlistentry>
          <term><parameter
role="keyword">keyval_name</parameter>&nbsp;:</term>
          <listitem><simpara>a key name</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>the corresponding key value or 0 if the key
name is not a valid key.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>The <function>gtk.gdk.keyval_from_name</function>() function
converts the key name specified by <parameter>keyval_name</parameter> to a
key value.</para>

    </refsect2>

    <refsect2 id="function-gdk--keyval-to-upper">
      <title>gtk.gdk.keyval_to_upper</title>

      <programlisting><methodsynopsis language="python">
          <methodname>gtk.gdk.keyval_to_upper</methodname>
          <methodparam><parameter
			 role="keyword">keyval</parameter></methodparam>
        </methodsynopsis></programlisting>

      <variablelist>
	<varlistentry>
          <term><parameter role="keyword">keyval</parameter>&nbsp;:</term>
          <listitem><simpara>a key value.</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>the upper case form of keyval, or keyval itself
if it is already in upper case or it is not subject to case
conversion.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>The <function>gtk.gdk.keyval_to_upper</function>() function
converts the key value specified by <parameter>keyval</parameter> to upper
case, if applicable.</para>

    </refsect2>

    <refsect2 id="function-gdk--keyval-to-lower">
      <title>gtk.gdk.to_lower</title>

      <programlisting><methodsynopsis language="python">
          <methodname>gtk.gdk.to_lower</methodname>
          <methodparam><parameter
			 role="keyword">keyval</parameter></methodparam>
        </methodsynopsis></programlisting>

      <variablelist>
	<varlistentry>
          <term><parameter role="keyword">keyval</parameter>&nbsp;:</term>
          <listitem><simpara>the key value</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>the lower case form of keyval, or keyval itself
if it is already in lower case or it is not subject to case
conversion.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>The <function>gtk.gdk.keyval_to_lower</function>() function
converts the key value specified by <parameter>keyval</parameter> to lower
case, if applicable. </para>

    </refsect2>

    <refsect2 id="function-gdk--keyval-is-upper">
      <title>gtk.gdk.keyval_is_upper</title>

      <programlisting><methodsynopsis language="python">
          <methodname>gtk.gdk.keyval_is_upper</methodname>
          <methodparam><parameter
			 role="keyword">keyval</parameter></methodparam>
        </methodsynopsis></programlisting>

      <variablelist>
	<varlistentry>
          <term><parameter role="keyword">keyval</parameter>&nbsp;:</term>
          <listitem><simpara>the key value</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara><literal>TRUE</literal> if
<parameter>keyval</parameter> is in upper case or if keyval is not subject
to case conversion.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>The <function>gtk.gdk.keyval_is_upper</function>() function
returns <literal>TRUE</literal> if the key value specified by
<parameter>keyval</parameter> is in upper case or not subject to case
conversion.</para>

    </refsect2>

    <refsect2 id="function-gdk--keyval-is-lower">
      <title>gtk.gdk.keyval_is_lower</title>

      <programlisting><methodsynopsis language="python">
          <methodname>gtk.gdk.keyval_is_lower</methodname>
          <methodparam><parameter
			 role="keyword">keyval</parameter></methodparam>
        </methodsynopsis></programlisting>

      <variablelist>
	<varlistentry>
          <term><parameter role="keyword">keyval</parameter>&nbsp;:</term>
          <listitem><simpara>the key value</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara><literal>TRUE</literal> if
<parameter>keyval</parameter> is in lower case, or if
<parameter>keyval</parameter> is not subject to case
conversion.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>The <function>gtk.gdk.keyval_is_lower</function>() function
returns <literal>TRUE</literal> if the key value specified by
<parameter>keyval</parameter> is in lower case or is not subject to case
conversion.</para>

    </refsect2>

    <refsect2 id="function-gdk--keyval-to-unicode">
      <title>gtk.gdk.keyval_to_unicode</title>

      <programlisting><methodsynopsis language="python">
          <methodname>gtk.gdk.keyval_to_unicode</methodname>
          <methodparam><parameter
			 role="keyword">keyval</parameter></methodparam>
        </methodsynopsis></programlisting>

      <variablelist>
	<varlistentry>
          <term><parameter role="keyword">keyval</parameter>&nbsp;:</term>
          <listitem><simpara>the key value</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara> the corresponding unicode character, or 0 if
there is no corresponding character.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>The <function>gtk.gdk.keyval_to_unicode</function>() function
converts the key value specified by <parameter>keyval</parameter> to the
corresponding ISO10646 (Unicode) character.</para>

    </refsect2>

    <refsect2 id="function-gdk--unicode-to-keyval">
      <title>gtk.gdk.unicode_to_keyval</title>

      <programlisting><methodsynopsis language="python">
          <methodname>gtk.gdk.unicode_to_keyval</methodname>
          <methodparam><parameter
			 role="keyword">wc</parameter></methodparam>
        </methodsynopsis></programlisting>

      <variablelist>
	<varlistentry>
          <term><parameter role="keyword">wc</parameter>&nbsp;:</term>
          <listitem><simpara> a ISO10646 encoded (unicode)
character</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>the corresponding key vakue, if one exists. or,
if there is no corresponding symbol, <parameter>wc</parameter> |
0x01000000</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>The <function>gtk.gdk.unicode_to_keyval</function>() function
converts the ISO10646 (unicode) character specified by
<parameter>wc</parameter> to a key value.</para>

    </refsect2>

  </refsect1>

  <refsect1>
    <title>Signals</title>

    <refsect2 id="signal-gtkgdkkeymap--direction-changed">
      <title>The "direction-changed" Signal</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>callback</methodname>
	  <methodparam><parameter>gdkkeymap</parameter></methodparam>
	  <methodparam><parameter>user_param1</parameter></methodparam>
	  <methodparam><parameter>...</parameter></methodparam>
	</methodsynopsis></programlisting>

      <variablelist>
	<varlistentry>
	  <term><parameter>gdkkeymap</parameter>&nbsp;:</term>
	  <listitem><simpara>the gdkkeymap that received the
signal</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>user_param1</parameter>&nbsp;:</term>
          <listitem><simpara>the first user parameter (if any) specified
with the <link
linkend="method-gobject--connect"><methodname>connect</methodname>()</link>
method</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>...</parameter>&nbsp;:</term>
	  <listitem><simpara>additional user parameters (if
any)</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The "direction-changed" signal is emitted when the pango text
direction of <parameter>gdkkeymap</parameter> is changed</para>

    </refsect2>

  </refsect1>

</refentry>
