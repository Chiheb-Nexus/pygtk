<?xml version="1.0" standalone="no"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<refentry id="class-gtkcombobox">
  <refnamediv>
    <refname>gtk.ComboBox</refname> <refpurpose>a widget used to choose from
    a list of items (new in PyGTK 2.4)</refpurpose>
  </refnamediv>

  <refsect1>
    <title>Synopsis</title>

    <classsynopsis language="python">
      <ooclass><classname>gtk.ComboBox</classname></ooclass>
      <ooclass><classname><link linkend="class-gtkbin">gtk.Bin</link></classname></ooclass>
      <ooclass><classname><link linkend="class-gtkcelllayout">gtk.CellLayout</link></classname></ooclass>
      <constructorsynopsis language="python">
	<methodname><link linkend="constructor-gtkcombobox">gtk.ComboBox</link></methodname>
	<methodparam><parameter role="keyword">model</parameter><initializer>None</initializer></methodparam>  </constructorsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtkcombobox--set-wrap-width">set_wrap_width</link></methodname>
	<methodparam><parameter role="keyword">width</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtkcombobox--set-row-span-column">set_row_span_column</link></methodname>
	<methodparam><parameter role="keyword">row_span</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtkcombobox--set-column-span-column">set_column_span_column</link></methodname>
	<methodparam><parameter role="keyword">column_span</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtkcombobox--get-active">get_active</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtkcombobox--set-active">set_active</link></methodname>
	<methodparam><parameter role="keyword">index</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtkcombobox--get-active-iter">get_active_iter</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtkcombobox--set-active-iter">set_active_iter</link></methodname>
	<methodparam><parameter role="keyword">iter</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtkcombobox--set-model">set_model</link></methodname>
	<methodparam><parameter role="keyword">model</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtkcombobox--get-model">get_model</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtkcombobox--append-text">append_text</link></methodname>
	<methodparam><parameter role="keyword">text</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtkcombobox--insert-text">insert_text</link></methodname>
	<methodparam><parameter role="keyword">position</parameter></methodparam>
	<methodparam><parameter role="keyword">text</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtkcombobox--prepend-text">prepend_text</link></methodname>
	<methodparam><parameter role="keyword">text</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtkcombobox--remove-text">remove_text</link></methodname>
	<methodparam><parameter role="keyword">position</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtkcombobox--popup">popup</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtkcombobox--popdown">popdown</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
    </classsynopsis>

    <programlisting>
<emphasis role="bold">Functions</emphasis>

<methodsynopsis language="python">
	<methodname><link linkend="function-gtk--combo-box-new-text">gtk.combo_box_new_text</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis></programlisting>

  </refsect1>

  <refsect1>
    <title>Ancestry</title>

<synopsis>+-- <link linkend="class-gobject">gobject.GObject</link>
  +-- <link linkend="class-gtkobject">gtk.Object</link>
    +-- <link linkend="class-gtkwidget">gtk.Widget</link>
      +-- <link linkend="class-gtkcontainer">gtk.Container</link>
        +-- <link linkend="class-gtkbin">gtk.Bin</link>
          +-- <link linkend="class-gtkcombobox">gtk.ComboBox</link> (implements <link linkend="class-gtkcelllayout"><classname>gtk.CellLayout</classname></link>)
</synopsis>

  </refsect1>

  <refsect1>
    <title>Properties</title>

    <blockquote role="properties">
      <informaltable pgwide="1" frame="none">
	<tgroup cols="3">
	  <colspec column="1" colwidth="1in"/>
	  <colspec column="2" colwidth="1in"/>
	  <colspec column="3" colwidth="4in"/>
	  <tbody>

	    <row valign="top">
	      <entry>"active"</entry>
	      <entry>Read-Write</entry>
	      <entry>The index of the item that is currently active.</entry>
	    </row>

	    <row valign="top">
	      <entry>"column-span-column"</entry>
	      <entry>Read-Write</entry>
	      <entry>The TreeModel column containing the column span
values.</entry>
	    </row>

	    <row valign="top">
	      <entry>"model"</entry>
	      <entry>Read-Write</entry>
	      <entry>The TreeModel for the combo box.</entry>
	    </row>

	    <row valign="top">
	      <entry>"row-span-column"</entry>
	      <entry>Read-Write</entry>
	      <entry>The TreeModel column containing the row span
values.</entry>
	    </row>

	    <row valign="top">
	      <entry>"wrap-width"</entry>
	      <entry>Read-Write</entry>
	      <entry>The number of columns to use to lay out the popup
items.</entry>
	    </row>

	  </tbody>
	</tgroup>
      </informaltable>
    </blockquote>

  </refsect1>

  <refsect1>
    <title>Style Properties</title>

    <blockquote role="properties">
      <informaltable pgwide="1" frame="none">
	<tgroup cols="3">
	  <colspec column="1" colwidth="1in"/>
	  <colspec column="2" colwidth="1in"/>
	  <colspec column="3" colwidth="4in"/>
	  <tbody>

	    <row valign="top">
	      <entry>"appears-as-list"</entry>
	      <entry>Read-Write</entry>
	      <entry>If <literal>TRUE</literal>, the combo box dropdowns should
look like lists rather than menus.</entry>
	    </row>

	  </tbody>
	</tgroup>
      </informaltable>
    </blockquote>

  </refsect1>

  <refsect1>
    <title>Signal Prototypes</title>

    <variablelist>
      <varlistentry>
        <term>"<link linkend="signal-gtkcombobox--changed">changed</link>"</term>
        <listitem>
          <methodsynopsis language="python"><methodname>callback</methodname>
            <methodparam><parameter>combobox</parameter></methodparam>
            <methodparam><parameter>user_param1</parameter></methodparam>
            <methodparam><parameter>...</parameter></methodparam>
          </methodsynopsis>
        </listitem>
      </varlistentry>
    </variablelist>

  </refsect1>

  <refsect1>
    <title>Description</title>

    <note>
      <para>This widget is available in GTK+ 2.4 and PyGTK 2.4 and above.</para>
    </note>

    <para>The <link
    linkend="class-gtkcombobox"><classname>gtk.ComboBox</classname></link>
    is a replacement for the <link
    linkend="class-gtkoptionmenu"><classname>gtk.OptionMenu</classname></link>. The
    <link
    linkend="class-gtkcombobox"><classname>gtk.ComboBox</classname></link>
    implements the <link
    linkend="class-gtkcelllayout"><classname>gtk.CellLayout</classname></link>
    interface that provides a number of useful methods for managing the
    contents. A <link
    linkend="class-gtkcombobox"><classname>gtk.ComboBox</classname></link>
    is created with the <link
    linkend="constructor-gtkcombobox">gtk.ComboBox()</link> constructor that
    is associated with the optional <link
    linkend="class-gtktreemodel"><classname>gtk.TreeModel</classname></link>. If
    no <link
    linkend="class-gtktreemodel"><classname>gtk.TreeModel</classname></link>
    is specified it can be added later with the <link
    linkend="method-gtkcombobox--set-model"><methodname>set_model</methodname>()</link>
    method.</para>

    <para>Alternatively, the <link
    linkend="function-gtk--combo-box-new-text"><function>gtk.combo_box_new_text</function>()</link>
    function creates a simple <link
    linkend="class-gtkcombobox"><classname>gtk.ComboBox</classname></link>
    and associated <link
    linkend="class-gtkliststore"><classname>gtk.ListStore</classname></link>
    model. A <link
    linkend="class-gtkcellrenderertext"><classname>gtk.CellRendererText</classname></link>
    is also created and packed in the new combo box. In this simple combo
    box each list item is a text string that can be selected.  The
    convenience methods <link
    linkend="method-gtkcombobox--append-text"><methodname>append_text</methodname>()</link>,
    <link
    linkend="method-gtkcombobox--prepend-text"><methodname>prepend_text</methodname>()</link>,
    <link
    linkend="method-gtkcombobox--insert-text"><methodname>insert_text</methodname>()</link>
    and <link
    linkend="method-gtkcombobox--remove-text"><methodname>remove_text</methodname>()</link>
    can be used to manage the contents of the <link
    linkend="class-gtkcombobox"><classname>gtk.ComboBox</classname></link>. Using
    the <link
    linkend="function-gtk--combo-box-new-text"><function>gtk.combo_box_new_text</function>()</link>
    function is equivalent to:</para>

    <programlisting>
  liststore = gtk.ListStore(gobject.TYPE_STRING)
  combobox = gtk.ComboBox(liststore)
  cell = gtk.CellRendererText()
  combobox.pack_start(cell, gtk.TRUE)
  combobox.add_attribute(cell, 'text', 0)
</programlisting>

  </refsect1>

  <refsect1 id="constructor-gtkcombobox">
    <title>Constructor</title>

    <programlisting><constructorsynopsis language="python">
    <methodname>gtk.ComboBox</methodname>
    <methodparam><parameter role="keyword">model</parameter><initializer>None</initializer></methodparam>
      </constructorsynopsis></programlisting>
    <variablelist>
      <varlistentry>
	<term><parameter role="keyword">model</parameter>&nbsp;:</term>
	<listitem><simpara>A valid <link linkend="class-gtktreemodel"><classname>gtk.TreeModel</classname></link>.</simpara></listitem>
      </varlistentry>
      <varlistentry>
	<term><emphasis>Returns</emphasis>&nbsp;:</term>
	<listitem><simpara>A new <link linkend="class-gtkcombobox"><classname>gtk.ComboBox</classname></link>.</simpara></listitem>
      </varlistentry>
    </variablelist>

    <note>
      <para>This constructor is available in PyGTK 2.4 and above.</para>
    </note>

    <para>Creates a new <link
    linkend="class-gtkcombobox"><classname>gtk.ComboBox</classname></link>
    associated with the optional <link
    linkend="class-gtktreemodel"><classname>gtk.TreeModel</classname></link>
    specified by <parameter>model</parameter>. If
    <parameter>model</parameter> is not specified the combo box will not
    have an associated tree model.</para>

  </refsect1>

  <refsect1>
    <title>Methods</title>

    <refsect2 id="method-gtkcombobox--set-wrap-width">
      <title>gtk.ComboBox.set_wrap_width</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_wrap_width</methodname>
	  <methodparam><parameter role="keyword">width</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">width</parameter>&nbsp;:</term>
	  <listitem><simpara>The preferred number of columns of
width.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>set_wrap_width</methodname>() method sets the
wrap width (and the "wrap-width" property) of the combo box to the value
specified by <parameter>width</parameter>. The wrap width is basically the
preferred number of columns to use to lay out the popup i.e. lays out the
popup items in a table with <parameter>width</parameter> columns.</para>

    </refsect2>

    <refsect2 id="method-gtkcombobox--set-row-span-column">
      <title>gtk.ComboBox.set_row_span_column</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_row_span_column</methodname>
	  <methodparam><parameter role="keyword">row_span</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">row_span</parameter>&nbsp;:</term>
	  <listitem><simpara>A column in the model passed during construction.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>set_row_span_column</methodname>() method sets
the "row-span-column" property to the value specified by
<parameter>row_span</parameter>. The "row-span-column" property indicates
the column in the associated <link
linkend="class-gtktreemodel"><classname>gtk.TreeModel</classname></link> row
that contains an integer that indicates how many rows the item should
span.</para>

    </refsect2>

    <refsect2 id="method-gtkcombobox--set-column-span-column">
      <title>gtk.ComboBox.set_column_span_column</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_column_span_column</methodname>
	  <methodparam><parameter role="keyword">column_span</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">column_span</parameter>&nbsp;:</term>
	  <listitem><simpara>A column in the model passed during construction.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>set_column_span_column</methodname>() method
sets the "column-span-column" property to the value specified by
<parameter>column_span</parameter>. The "column-span-column" property
indicates the column in the associated <link
linkend="class-gtktreemodel"><classname>gtk.TreeModel</classname></link> row
that contains an integer that indicates how many columns the item should
span.</para>

    </refsect2>

    <refsect2 id="method-gtkcombobox--get-active">
      <title>gtk.ComboBox.get_active</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_active</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>An integer which is the model index of the
	  currently active item, or -1 if there's no active
	  item.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>get_active</methodname>() method returns the
value of the "active" property which is the index in the model of the
currently active item, or -1 if there's no active item.</para>

    </refsect2>

    <refsect2 id="method-gtkcombobox--set-active">
      <title>gtk.ComboBox.set_active</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_active</methodname>
	  <methodparam><parameter role="keyword">index</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">index</parameter>&nbsp;:</term>
	  <listitem><simpara>An index in the model passed during
	  construction, or -1 to have no active item.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>set_active</methodname>() method sets the active
item of the combo_box to the item with the model index specified by
<parameter>index</parameter>. If <parameter>index</parameter> is -1 the
combo box will have no active item. The "active" property is also set to the
value of <parameter>index</parameter>.</para>

    </refsect2>

    <refsect2 id="method-gtkcombobox--get-active-iter">
      <title>gtk.ComboBox.get_active_iter</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_active_iter</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>A <link
	  linkend="class-gtktreeiter"><classname>gtk.TreeIter</classname></link>
	  that points at the active item or <literal>None</literal> if there
	  is no active item.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>get_active_iter</methodname>() method returns a
      <link
      linkend="class-gtktreeiter"><classname>gtk.TreeIter</classname></link>
      that points to the current active item or <literal>None</literal> if
      there is no active item.</para>

    </refsect2>

    <refsect2 id="method-gtkcombobox--set-active-iter">
      <title>gtk.ComboBox.set_active_iter</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_active_iter</methodname>
	  <methodparam><parameter role="keyword">iter</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">iter</parameter>&nbsp;:</term>
	  <listitem><simpara>A valid <link
	  linkend="class-gtktreeiter"><classname>gtk.TreeIter</classname></link>
	  pointing at an item in the associated <link
	  linkend="class-gtktreemodel"><classname>gtk.TreeModel</classname></link>.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>set_active_iter</methodname>() method sets the
current active item to be the one referenced by <parameter>iter</parameter>
in the associated <link
linkend="class-gtktreemodel"><classname>gtk.TreeModel</classname></link>.
<parameter>iter</parameter> must correspond to a path of depth one. The
"active" property is also set by this method.</para>

    </refsect2>

    <refsect2 id="method-gtkcombobox--set-model">
      <title>gtk.ComboBox.set_model</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_model</methodname>
	  <methodparam><parameter role="keyword">model</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">model</parameter>&nbsp;:</term>
	  <listitem><simpara>A <link linkend="class-gtktreemodel"><classname>gtk.TreeModel</classname></link>.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>set_model</methodname>() method sets the model
used by the combo box to the value specified by
<parameter>model</parameter>. The "model" property will also be set to the
value of <parameter>model</parameter>. A previously set model will be
unset.</para>

    </refsect2>

    <refsect2 id="method-gtkcombobox--get-model">
      <title>gtk.ComboBox.get_model</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_model</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>A <link
	  linkend="class-gtktreemodel"><classname>gtk.TreeModel</classname></link>
	  or <literal>None</literal>.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>get_model</methodname>() method returns the
value of the "model" property which contains the <link
linkend="class-gtktreemodel"><classname>gtk.TreeModel</classname></link>
that is acting as data source for the combo_box or <literal>None</literal>
if no <link
linkend="class-gtktreemodel"><classname>gtk.TreeModel</classname></link> is
associated with the combo box.</para>

    </refsect2>

    <refsect2 id="method-gtkcombobox--append-text">
      <title>gtk.ComboBox.append_text</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>append_text</methodname>
	  <methodparam><parameter role="keyword">text</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">text</parameter>&nbsp;:</term>
	  <listitem><simpara>A string.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>append_text</methodname>() method appends the
string specified by <parameter>text</parameter> to the list of strings
stored in the combo box <link
linkend="class-gtkliststore"><classname>gtk.ListStore</classname></link>. Note
that you can only use this method with combo boxes constructed with the
<link
linkend="function-gtk--combo-box-new-text"><function>gtk.combo_box_new_text</function>()</link>
function.</para>

    </refsect2>

    <refsect2 id="method-gtkcombobox--insert-text">
      <title>gtk.ComboBox.insert_text</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>insert_text</methodname>
	  <methodparam><parameter role="keyword">position</parameter></methodparam>
	  <methodparam><parameter role="keyword">text</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">position</parameter>&nbsp;:</term>
	  <listitem><simpara>A model index where the
	  <parameter>text</parameter> should be
	  inserted.</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter role="keyword">text</parameter>&nbsp;:</term>
	  <listitem><simpara>A string.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>insert_text</methodname>() method inserts the
string specified by <parameter>text</parameter> in the combo box <link
linkend="class-gtkliststore"><classname>gtk.ListStore</classname></link> at
the index specified by <parameter>position</parameter>. Note that you can
only use this method with combo boxes constructed with the <link
linkend="function-gtk--combo-box-new-text"><function>gtk.combo_box_new_text</function>()</link>
function.</para>

    </refsect2>

    <refsect2 id="method-gtkcombobox--prepend-text">
      <title>gtk.ComboBox.prepend_text</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>prepend_text</methodname>
	  <methodparam><parameter role="keyword">text</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">text</parameter>&nbsp;:</term>
	  <listitem><simpara>A string.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>prepend_text</methodname>() method prepends the
string specified by <parameter>text</parameter> to the list of strings
stored in the <link
linkend="class-gtkliststore"><classname>gtk.ListStore</classname></link>
associated with the combo_box. Note that you can only use this method with
combo boxes constructed with the <link
linkend="function-gtk--combo-box-new-text"><function>gtk.combo_box_new_text</function>()</link>
function.</para>

    </refsect2>

    <refsect2 id="method-gtkcombobox--remove-text">
      <title>gtk.ComboBox.remove_text</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>remove_text</methodname>
	  <methodparam><parameter role="keyword">position</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">position</parameter>&nbsp;:</term>
	  <listitem><simpara>Index of the item to remove.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>remove_text</methodname>() method removes the
string at the index specified by <parameter>position</parameter> in the
associated <link
linkend="class-gtkliststore"><classname>gtk.ListStore</classname></link>. Note
that you can only use this function with combo boxes constructed with the
<link
linkend="function-gtk--combo-box-new-text"><function>gtk.combo_box_new_text</function>()</link>
function.</para>

    </refsect2>

    <refsect2 id="method-gtkcombobox--popup">
      <title>gtk.ComboBox.popup</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>popup</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>popup</methodname>() method pops up the menu or
      dropdown list of the combo box. This method is mostly intended for use
      by accessibility technologies; applications should have little use for
      it.</para>

    </refsect2>

    <refsect2 id="method-gtkcombobox--popdown">
      <title>gtk.ComboBox.popdown</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>popdown</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>popdown</methodname>() method hides the menu or
dropdown list of the combo box. This method is mostly intended for use by
accessibility technologies; applications should have little use for
it.</para>

    </refsect2>

  </refsect1>

  <refsect1>
    <title>Functions</title>

    <refsect2 id="function-gtk--combo-box-new-text">
      <title>gtk.combo_box_new_text</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>gtk.combo_box_new_text</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	<term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>A new <link
	  linkend="class-gtkcombobox"><classname>gtk.ComboBox</classname></link>
	  for text items.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This function is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <function>gtk.combo_box_new_text</function>() function is a
convenience function that constructs a new text combo box, which is a <link
linkend="class-gtkcombobox"><classname>gtk.ComboBox</classname></link> just
displaying strings. If you use this function to create a text combo box, you
should only manipulate its data source with the following convenience
methods: <link
linkend="method-gtkcombobox--append-text"><methodname>append_text</methodname>()</link>,
<link
linkend="method-gtkcombobox--insert-text"><methodname>insert_text</methodname>()</link>,
<link
linkend="method-gtkcombobox--prepend-text"><methodname>prepend_text</methodname>()</link>
and <link
linkend="method-gtkcombobox--remove-text"><methodname>remove_text</methodname>()</link>.</para>

    </refsect2>

  </refsect1>

  <refsect1>
    <title>Signals</title>

    <refsect2 id="signal-gtkcombobox--changed">
      <title>The "changed" Signal</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>callback</methodname>
	  <methodparam><parameter>combobox</parameter></methodparam>
	  <methodparam><parameter>user_param1</parameter></methodparam>
	  <methodparam><parameter>...</parameter></methodparam>
	</methodsynopsis></programlisting>

      <variablelist>
	<varlistentry>
	  <term><parameter>combobox</parameter>&nbsp;:</term>
	  <listitem><simpara>the combo box that received the
signal</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>user_param1</parameter>&nbsp;:</term>
          <listitem><simpara>the first user parameter (if any) specified
with the <link
linkend="method-gobject--connect"><methodname>connect</methodname>()</link>
method</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>...</parameter>&nbsp;:</term>
	  <listitem><simpara>additional user parameters (if
any)</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This signal is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The "changed" signal is emitted when a new item in the combo box
is selected.</para>

    </refsect2>

  </refsect1>

</refentry>
