<?xml version="1.0" standalone="no"?>
<!DOCTYPE chpater PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

  <chapter id="pygtk-introduction">
    <title>Introduction</title>

    <para>This document describes most of the <literal>PyGTK</literal>
version 2.0 classes and their methods and associated functions. Deprecated
classes, functions and methods have been specifically left out of this
reference. I have attempted to document as much of the
<literal>PyGTK</literal> <literal>API</literal> as I can but there are
undoubtedly errors and omissions. If you discover any of these please send
me an email at <email><ulink
url="mailto:finlay@moeraki.com">finlay@moeraki.com</ulink></email>. Specific areas that have not been documented include:</para>

    <itemizedlist>
      <listitem>
	<simpara>The GObject classes other than GObject</simpara>
      </listitem>
      <listitem>
	<simpara>The ATK classes</simpara>
      </listitem>
      <listitem>
	<simpara>The Pango classes</simpara>
      </listitem>
      <listitem>
	<simpara>The GladeXML class</simpara>
      </listitem>
    </itemizedlist>

    <para>This reference describes the API for <literal>PyGTK</literal> as
of version 1.99.16+ and assumes that the additional API changes for version
2.0 will be minor. There will undoubtedly be changes that are not reflected
in this reference. Likewise the differences in the API between version
1.99.16+ and previous versions are not covered in this reference. The source
code must be consulted if this reference and your version of
<literal>PyGTK</literal> seem to differ. You are encouraged to use the
latest version of <literal>PyGTK</literal> that is available. See the <ulink
url="http://www.daa.com.au/~james/software/pygtk/"><literal>PyGTK</literal>
homepage</ulink> for more information.</para>

    <para> The Reference contains a chapter for each
<literal>PyGTK</literal> module (that correspponds to the underlying
<literal>GTK+</literal> library) containing the class descriptions. The
second chapter illustrates the <literal>PyGTK</literal> class hierarchy
covering the gobject, gtk and gtk.gdk modules.</para>

    <para>The class descriptions are arranged alphabetically
within the chapters. Currently there are three module chapters:</para>

    <variablelist>
      <varlistentry>
	<term>The&nbsp;<literal>gobject</literal>&nbsp;module</term>
	<listitem><simpara>The classes that are included in the
<literal>gobject</literal> module of <literal>PyGTK</literal> and are
accessed similar to: gobject.GObject. These classes are the base object
classes that the <literal>gtk</literal> and <literal>gtk.gdk</literal>
module classes are built on.</simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>The&nbsp;<literal>gtk</literal>&nbsp;module</term>
	<listitem><simpara>The classes that are included in the
<literal>gtk</literal> module of <literal>PyGTK</literal> and are accessed
similar to: gtk.Widget. These classes are the "higher" level widget classes
that provide most of the user interface widgets used for applcation
development.</simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>The&nbsp;<literal>gtk.gdk</literal>&nbsp;module</term>
	<listitem><simpara>The classes that are included in the
<literal>gtk.gdk</literal> module of <literal>PyGTK</literal>. These classes
are "lower" level classes that provide more fundamental capabilities that
the <literal>gtk</literal> module widgets are built upon. These classes
provide an abstract interface to the underlying window system (either X
Window System or Microsoft Windows).</simpara>
	</listitem>
      </varlistentry>
    </variablelist>

    <para>The <literal>pango</literal> and <literal>atk</literal> module
classes will be added in a later version of this Reference. Also a more
complete description of the <literal>gobject</literal> module classes will
be provided.</para>

    <sect1 id="pygtk-reference-format">
      <title>Reference Page Format</title>

      <para>Each <literal>PyGTK</literal> class is described in a reference
page that has a number of sections in a fixed format. Each reference page
will have a subset of the following sections:</para>

    <variablelist>
      <varlistentry>
	<term>Name</term>
	<listitem><simpara>The name and a one-line description of the
class.</simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>Synopsis</term>
	<listitem><simpara>A synopsis of the class and its methods and
optionally a list of associated functions.</simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>Ancestry</term>
	<listitem><simpara>The list of the parent classes of the class. This
section may not be present in all class descriptions.</simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>Properties</term>
 	<listitem><simpara>A list of the properties (internal state)
supported by the class. This section may not be present in all classes. The
property descriptons include the name, the access operations (e.g. Read,
Write), and a brief description. Properties are accessed using the <link
linkend="method-gobject--set-property"><methodname>gobject.set_property</methodname>()</link> 
and <link
linkend="method-gobject--get-property"><methodname>gobject.get_property</methodname>()</link> 
methods that are available to every <literal>PyGTK</literal> object. This
section may not be present in all class descriptions.</simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>Style&nbsp;Properties</term>
	<listitem><simpara>A list of style properties supported by the
class. Similar to the properties (described above) the style properties hold
information about the style of a widgets e.g. border style, shadow type,
etc. Most widgets do not support style properties so this section is not
present in most class descriptions. Currently <literal>PyGTK</literal> has
no way of accessing these properties.</simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>Attributes</term>
	<listitem><simpara>A set of internal object state data accessible as
Python attributes (e.g. object.attr). The attribute descriptions include a
name by which the attribute data is accessed, the access mode (e.g. Read,
Write), and a brief description of the attribute. Most
<literal>PyGTK</literal> classes do not support attributes so this section
is not present in most class descriptions.</simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>Signal&nbsp;Prototypes</term>
	<listitem><simpara>A list of the signals supported by the class
including the signal name and a synopsis of the signal handler function
prototype. This section may not be present in all class descriptions; most
<literal>gtk.gdk</literal> classes do not support signals.</simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>Description</term>
	<listitem><simpara>A description of the class and possibly some of
the methods supported by the class.</simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>Constructor</term>
	<listitem><simpara>The description of the class object constructor
including the synopsis with brief parameter descriptions and a description
of th use of the constructor. There may be more than one constructor
description if the constructor supports different parameter lists. This
section may not be present in all class descriptions.</simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>Methods</term>
	<listitem><simpara>A list of methods supported by the class. Each
method description includes: a synopsis of the method and its parameters as
well as a brief description of each parameter and return value (if any);
and, a description of the use of the method.</simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>Functions</term>
	<listitem><simpara>A list of related functions. Each function
description includes a synopsis of the function and its parameters and
return value (if any), and a description of the use of the
function.</simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>Signals</term>
	<listitem><simpara>A list of signals including a synopsis of the
signal handler prototype function with its parameters and return value (if
any). The signal emission conditions are briefly described. This section is
not present in all class descriptions; specifically, the
<literal>gtk.gdk</literal> classes do not usually support signals.</simpara>
	</listitem>
      </varlistentry>
    </variablelist>

    <para>The function and method synopsis parameters are displayed in
<emphasis role="bold">bold</emphasis> to denote Python keyword parameters.
Also if the parameter is optional its default value will be displayed. For
example the <link linkend="constructor-gtkbutton">gtk.Button</link>()
constructor synopsis is:</para>

    <programlisting>
<constructorsynopsis language="python">
	<methodname><link
linkend="constructor-gtkbutton">gtk.Button</link></methodname>
	<methodparam><parameter
		       role="keyword">label</parameter><initializer>None</initializer></methodparam>
	<methodparam><parameter
		       role="keyword">stock</parameter><initializer>None</initializer></methodparam>
      </constructorsynopsis>
</programlisting>

    <para>The parameters <parameter>label</parameter> and
<parameter>stock</parameter> are keyword parameters that can be specified in
a call either by position or keyword (in which case position is not
important). The following calls have the same result:</para>

    <programlisting>
  b = gtk.Button("Cancel") b = gtk.Button(label="Cancel") b =
gtk.Button("Cancel", None) b = gtk.Button("Cancel", stock=None) b =
gtk.Button(stock=None, label="Cancel")
</programlisting>

    <para>Parameters that are not keyword parameters are displayed in
<emphasis>italic</emphasis> and must be specified positionally but also may
be optional.</para>

    </sect1>

    <sect1 id="pygtk-reference-copyright">
      <title>Copyright and License Notice</title>

      <para>The PyGTK 2.0 Reference is Copyright (C) 2003 John
Finlay.</para>

      <para>This work is licensed under the Creative Commons
Attribution-ShareAlike License. To view a copy of this license, visit
<ulink url="http://creativecommons.org/licenses/by-sa/1.0/">http://creativecommons.org/licenses/by-sa/1.0/</ulink> or send a letter to Creative
Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.</para>

    </sect1>

  </chapter>
