<?xml version="1.0" standalone="no"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<refentry id="class-atktext">

  <refnamediv>
    <refname>atk.Text</refname>
      <refpurpose>The ATK interface implemented by components with text content.  </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Synopsis</title>

    <classsynopsis language="python">
      <ooclass><classname>atk.Text</classname></ooclass>
      <ooclass><classname>gobject.GInterface</classname></ooclass>
      <methodsynopsis language="python">
        <methodname><link linkend="method-atktext--get-text">get_text</link></methodname>
        <methodparam><parameter role="keyword">start_offset</parameter></methodparam>
        <methodparam><parameter role="keyword">end_offset</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-atktext--get-character-at-offset">get_character_at_offset</link></methodname>
        <methodparam><parameter role="keyword">offset</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-atktext--get-text-after-offset">get_text_after_offset</link></methodname>
        <methodparam><parameter role="keyword">offset</parameter></methodparam>
        <methodparam><parameter role="keyword">boundary_type</parameter></methodparam>
        <methodparam><parameter role="keyword">start_offset</parameter></methodparam>
        <methodparam><parameter role="keyword">end_offset</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-atktext--get-text-at-offset">get_text_at_offset</link></methodname>
        <methodparam><parameter role="keyword">offset</parameter></methodparam>
        <methodparam><parameter role="keyword">boundary_type</parameter></methodparam>
        <methodparam><parameter role="keyword">start_offset</parameter></methodparam>
        <methodparam><parameter role="keyword">end_offset</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-atktext--get-text-before-offset">get_text_before_offset</link></methodname>
        <methodparam><parameter role="keyword">offset</parameter></methodparam>
        <methodparam><parameter role="keyword">boundary_type</parameter></methodparam>
        <methodparam><parameter role="keyword">start_offset</parameter></methodparam>
        <methodparam><parameter role="keyword">end_offset</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-atktext--get-caret-offset">get_caret_offset</link></methodname>
        <methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-atktext--get-character-extents">get_character_extents</link></methodname>
        <methodparam><parameter role="keyword">offset</parameter></methodparam>
        <methodparam><parameter role="keyword">x</parameter></methodparam>
        <methodparam><parameter role="keyword">y</parameter></methodparam>
        <methodparam><parameter role="keyword">width</parameter></methodparam>
        <methodparam><parameter role="keyword">height</parameter></methodparam>
        <methodparam><parameter role="keyword">coords</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-atktext--get-run-attributes">get_run_attributes</link></methodname>
        <methodparam><parameter role="keyword">offset</parameter></methodparam>
        <methodparam><parameter role="keyword">start_offset</parameter></methodparam>
        <methodparam><parameter role="keyword">end_offset</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-atktext--get-default-attributes">get_default_attributes</link></methodname>
        <methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-atktext--get-character-count">get_character_count</link></methodname>
        <methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-atktext--get-offset-at-point">get_offset_at_point</link></methodname>
        <methodparam><parameter role="keyword">x</parameter></methodparam>
        <methodparam><parameter role="keyword">y</parameter></methodparam>
        <methodparam><parameter role="keyword">coords</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-atktext--get-n-selections">get_n_selections</link></methodname>
        <methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-atktext--get-selection">get_selection</link></methodname>
        <methodparam><parameter role="keyword">selection_num</parameter></methodparam>
        <methodparam><parameter role="keyword">start_offset</parameter></methodparam>
        <methodparam><parameter role="keyword">end_offset</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-atktext--add-selection">add_selection</link></methodname>
        <methodparam><parameter role="keyword">start_offset</parameter></methodparam>
        <methodparam><parameter role="keyword">end_offset</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-atktext--remove-selection">remove_selection</link></methodname>
        <methodparam><parameter role="keyword">selection_num</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-atktext--set-selection">set_selection</link></methodname>
        <methodparam><parameter role="keyword">selection_num</parameter></methodparam>
        <methodparam><parameter role="keyword">start_offset</parameter></methodparam>
        <methodparam><parameter role="keyword">end_offset</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-atktext--set-caret-offset">set_caret_offset</link></methodname>
        <methodparam><parameter role="keyword">offset</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-atktext--get-range-extents">get_range_extents</link></methodname>
        <methodparam><parameter role="keyword">start_offset</parameter></methodparam>
        <methodparam><parameter role="keyword">end_offset</parameter></methodparam>
        <methodparam><parameter role="keyword">coord_type</parameter></methodparam>
        <methodparam><parameter role="keyword">rect</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-atktext--get-bounded-ranges">get_bounded_ranges</link></methodname>
        <methodparam><parameter role="keyword">rect</parameter></methodparam>
        <methodparam><parameter role="keyword">coord_type</parameter></methodparam>
        <methodparam><parameter role="keyword">x_clip_type</parameter></methodparam>
        <methodparam><parameter role="keyword">y_clip_type</parameter></methodparam>
      </methodsynopsis>
</classsynopsis>

  </refsect1>

  <refsect1 id="signal-prototypes-atktext">
    <title>atk.Text Signal Prototypes</title>


      <variablelist>
      <varlistentry>
        <term>"<link linkend="signal-atktext--text-attributes-changed">text-attributes-changed</link>"</term>
        <listitem>
          <methodsynopsis language="python"><methodname>callback</methodname>
            <methodparam><parameter>atktext</parameter></methodparam>
            <methodparam><parameter>user_param1</parameter></methodparam>
            <methodparam><parameter>...</parameter></methodparam>
          </methodsynopsis>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"<link linkend="signal-atktext--text-caret-moved">text-caret-moved</link>"</term>
        <listitem>
          <methodsynopsis language="python"><methodname>callback</methodname>
            <methodparam><parameter>atktext</parameter></methodparam>
            <methodparam><parameter>arg1</parameter></methodparam>
            <methodparam><parameter>user_param1</parameter></methodparam>
            <methodparam><parameter>...</parameter></methodparam>
          </methodsynopsis>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"<link linkend="signal-atktext--text-changed">text-changed</link>"</term>
        <listitem>
          <methodsynopsis language="python"><methodname>callback</methodname>
            <methodparam><parameter>atktext</parameter></methodparam>
            <methodparam><parameter>arg1</parameter></methodparam>
            <methodparam><parameter>arg2</parameter></methodparam>
            <methodparam><parameter>user_param1</parameter></methodparam>
            <methodparam><parameter>...</parameter></methodparam>
          </methodsynopsis>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"<link linkend="signal-atktext--text-selection-changed">text-selection-changed</link>"</term>
        <listitem>
          <methodsynopsis language="python"><methodname>callback</methodname>
            <methodparam><parameter>atktext</parameter></methodparam>
            <methodparam><parameter>user_param1</parameter></methodparam>
            <methodparam><parameter>...</parameter></methodparam>
          </methodsynopsis>
        </listitem>
      </varlistentry>
    </variablelist>

  </refsect1>

  <refsect1>
    <title>Description</title>

<para>
<link linkend="class-atktext"><classname>atk.Text</classname></link> should be implemented by <literal>AtkObjects</literal> on behalf of widgets that
have text content which is either attributed or otherwise non-trivial.
<literal>AtkObjects</literal> whose text content is simple, unattributed, and very brief
may expose that content via <link linkend="method-atkobject--get-name"><methodname>atk.Object.get_name</methodname></link> instead; however if the
text is editable, multi-line, typically longer than three or four words,
attributed, selectable, or if the object already uses the 'name' ATK
property for other information, the <link linkend="class-atktext"><classname>atk.Text</classname></link> interface should be used
to expose the text content.  In the case of editable text content,
<link linkend="class-atkeditabletext"><classname>atk.EditableText</classname></link> (a subtype of the <link linkend="class-atktext"><classname>atk.Text</classname></link> interface) should be
implemented instead.
</para>
<para>
<link linkend="class-atktext"><classname>atk.Text</classname></link> provides not only traversal facilities and change notification
for text content, but also caret tracking and glyph bounding box
calculations.  Note that the text strings are exposed as UTF-8, and are
therefore potentially multi-byte, and caret-to-byte offset mapping makes
no assumptions about the character length; also bounding box
glyph-to-offset mapping may be complex for languages which use ligatures.
</para>



  </refsect1>

  <refsect1>
    <title>Methods</title>

    <refsect2 id="method-atktext--get-text">
      <title>atk.Text.get_text</title>

      <programlisting><methodsynopsis language="python">
        <methodname>get_text</methodname>
        <methodparam><parameter role="keyword">start_offset</parameter></methodparam>
        <methodparam><parameter role="keyword">end_offset</parameter></methodparam>
      </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">start_offset</parameter>&nbsp;:</term>
          <listitem><simpara>start position</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">end_offset</parameter>&nbsp;:</term>
          <listitem><simpara>end position</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>the text from <parameter>start_offset</parameter> up to, but not including <parameter>end_offset</parameter>.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>Gets the specified text.</para>

    </refsect2>

    <refsect2 id="method-atktext--get-character-at-offset">
      <title>atk.Text.get_character_at_offset</title>

      <programlisting><methodsynopsis language="python">
        <methodname>get_character_at_offset</methodname>
        <methodparam><parameter role="keyword">offset</parameter></methodparam>
      </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">offset</parameter>&nbsp;:</term>
          <listitem><simpara>position</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>the character at <parameter>offset</parameter>.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>Gets the specified text.</para>

    </refsect2>

    <refsect2 id="method-atktext--get-text-after-offset">
      <title>atk.Text.get_text_after_offset</title>

      <programlisting><methodsynopsis language="python">
        <methodname>get_text_after_offset</methodname>
        <methodparam><parameter role="keyword">offset</parameter></methodparam>
        <methodparam><parameter role="keyword">boundary_type</parameter></methodparam>
        <methodparam><parameter role="keyword">start_offset</parameter></methodparam>
        <methodparam><parameter role="keyword">end_offset</parameter></methodparam>
      </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">offset</parameter>&nbsp;:</term>
          <listitem><simpara>position</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">boundary_type</parameter>&nbsp;:</term>
          <listitem><simpara>An <literal>AtkTextBoundary</literal></simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">start_offset</parameter>&nbsp;:</term>
          <listitem><simpara>the start offset of the returned string</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">end_offset</parameter>&nbsp;:</term>
          <listitem><simpara>the offset of the first character after the 
             returned substring</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>the text after <parameter>offset</parameter> bounded by the specified <parameter>boundary_type</parameter>.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>Gets the specified text.</para>
      
            <para>If the boundary_type if ATK_TEXT_BOUNDARY_CHAR the character after the 
      offset is returned.</para>
      
            <para>If the boundary_type is ATK_TEXT_BOUNDARY_WORD_START the returned string
      is from the word start after the offset to the next word start.</para>
      
            <para>The returned string will contain the word after the offset if the offset 
      is inside a word or if the offset is not inside a word.</para>
      
            <para>If the boundary_type is ATK_TEXT_BOUNDARY_WORD_END the returned string
      is from the word end at or after the offset to the next work end.</para>
      
            <para>The returned string will contain the word after the offset if the offset
      is inside a word and will contain the word after the word after the offset
      if the offset is not inside a word.</para>
      
            <para>If the boundary type is ATK_TEXT_BOUNDARY_SENTENCE_START the returned
      string is from the sentence start after the offset to the next sentence
      start.</para>
      
            <para>The returned string will contain the sentence after the offset if the offset
      is inside a sentence or if the offset is not inside a sentence.</para>
      
            <para>If the boundary_type is ATK_TEXT_BOUNDARY_SENTENCE_END the returned string
      is from the sentence end at or after the offset to the next sentence end.</para>
      
            <para>The returned string will contain the sentence after the offset if the offset
      is inside a sentence and will contain the sentence after the sentence
      after the offset if the offset is not inside a sentence.</para>
      
            <para>If the boundary type is ATK_TEXT_BOUNDARY_LINE_START the returned
      string is from the line start after the offset to the next line start.</para>
      
            <para>If the boundary_type is ATK_TEXT_BOUNDARY_LINE_END the returned string
      is from the line end at or after the offset to the next line start.</para>

    </refsect2>

    <refsect2 id="method-atktext--get-text-at-offset">
      <title>atk.Text.get_text_at_offset</title>

      <programlisting><methodsynopsis language="python">
        <methodname>get_text_at_offset</methodname>
        <methodparam><parameter role="keyword">offset</parameter></methodparam>
        <methodparam><parameter role="keyword">boundary_type</parameter></methodparam>
        <methodparam><parameter role="keyword">start_offset</parameter></methodparam>
        <methodparam><parameter role="keyword">end_offset</parameter></methodparam>
      </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">offset</parameter>&nbsp;:</term>
          <listitem><simpara>position</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">boundary_type</parameter>&nbsp;:</term>
          <listitem><simpara>An <literal>AtkTextBoundary</literal></simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">start_offset</parameter>&nbsp;:</term>
          <listitem><simpara>the start offset of the returned string</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">end_offset</parameter>&nbsp;:</term>
          <listitem><simpara>the offset of the first character after the 
             returned substring</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>the text at <parameter>offset</parameter> bounded by the specified <parameter>boundary_type</parameter>.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>Gets the specified text.</para>
      
            <para>If the boundary_type if ATK_TEXT_BOUNDARY_CHAR the character at the
      offset is returned.</para>
      
            <para>If the boundary_type is ATK_TEXT_BOUNDARY_WORD_START the returned string
      is from the word start at or before the offset to the word start after 
      the offset.</para>
      
            <para>The returned string will contain the word at the offset if the offset
      is inside a word and will contain the word before the offset if the 
      offset is not inside a word.</para>
      
            <para>If the boundary_type is ATK_TEXT_BOUNDARY_WORD_END the returned string
      is from the word end before the offset to the word end at or after the
      offset.</para>
      
            <para>The returned string will contain the word at the offset if the offset
      is inside a word and will contain the word after to the offset if the 
      offset is not inside a word.</para>
      
            <para>If the boundary type is ATK_TEXT_BOUNDARY_SENTENCE_START the returned
      string is from the sentence start at or before the offset to the sentence
      start after the offset.</para>
      
            <para>The returned string will contain the sentence at the offset if the offset
      is inside a sentence and will contain the sentence before the offset 
      if the offset is not inside a sentence.</para>
      
            <para>If the boundary_type is ATK_TEXT_BOUNDARY_SENTENCE_END the returned string
      is from the sentence end before the offset to the sentence end at or
      after the offset.</para>
      
            <para>The returned string will contain the sentence at the offset if the offset
      is inside a sentence and will contain the sentence after the offset 
      if the offset is not inside a sentence.</para>
      
            <para>If the boundary type is ATK_TEXT_BOUNDARY_LINE_START the returned
      string is from the line start at or before the offset to the line
      start after the offset.</para>
      
            <para>If the boundary_type is ATK_TEXT_BOUNDARY_LINE_END the returned string
      is from the line end before the offset to the line end at or after
      the offset.</para>

    </refsect2>

    <refsect2 id="method-atktext--get-text-before-offset">
      <title>atk.Text.get_text_before_offset</title>

      <programlisting><methodsynopsis language="python">
        <methodname>get_text_before_offset</methodname>
        <methodparam><parameter role="keyword">offset</parameter></methodparam>
        <methodparam><parameter role="keyword">boundary_type</parameter></methodparam>
        <methodparam><parameter role="keyword">start_offset</parameter></methodparam>
        <methodparam><parameter role="keyword">end_offset</parameter></methodparam>
      </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">offset</parameter>&nbsp;:</term>
          <listitem><simpara>position</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">boundary_type</parameter>&nbsp;:</term>
          <listitem><simpara>An <literal>AtkTextBoundary</literal></simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">start_offset</parameter>&nbsp;:</term>
          <listitem><simpara>the start offset of the returned string</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">end_offset</parameter>&nbsp;:</term>
          <listitem><simpara>the offset of the first character after the 
             returned substring</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>the text before <parameter>offset</parameter> bounded by the specified <parameter>boundary_type</parameter>.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>Gets the specified text.</para>
      
            <para>If the boundary_type if ATK_TEXT_BOUNDARY_CHAR the character before the
      offset is returned.</para>
      
            <para>If the boundary_type is ATK_TEXT_BOUNDARY_WORD_START the returned string
      is from the word start before the word start before the offset to 
      the word start before the offset.</para>
      
            <para>The returned string will contain the word before the offset if the offset
      is inside a word and will contain the word before the word before the 
      offset if the offset is not inside a word.</para>
      
            <para>If the boundary_type is ATK_TEXT_BOUNDARY_WORD_END the returned string
      is from the word end before the word end at or before the offset to the 
      word end at or before the offset.</para>
      
            <para>The returned string will contain the word before the offset if the offset
      is inside a word or if the offset is not inside a word.</para>
      
            <para>If the boundary type is ATK_TEXT_BOUNDARY_SENTENCE_START the returned
      string is from the sentence start before the sentence start before 
      the offset to the sentence start before the offset.</para>
      
            <para>The returned string will contain the sentence before the offset if the 
      offset is inside a sentence and will contain the sentence before the 
      sentence before the offset if the offset is not inside a sentence.</para>
      
            <para>If the boundary_type is ATK_TEXT_BOUNDARY_SENTENCE_END the returned string
      is from the sentence end before the sentence end at or before the offset to 
      the sentence end at or before the offset.</para>
      
            <para>The returned string will contain the sentence before the offset if the 
      offset is inside a sentence or if the offset is not inside a sentence.</para>
      
            <para>If the boundary type is ATK_TEXT_BOUNDARY_LINE_START the returned
      string is from the line start before the line start ar or before the offset 
      to the line start ar or before the offset.</para>
      
            <para>If the boundary_type is ATK_TEXT_BOUNDARY_LINE_END the returned string
      is from the line end before the line end before the offset to the 
      line end before the offset.</para>

    </refsect2>

    <refsect2 id="method-atktext--get-caret-offset">
      <title>atk.Text.get_caret_offset</title>

      <programlisting><methodsynopsis language="python">
        <methodname>get_caret_offset</methodname>
        <methodparam></methodparam>
      </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>the offset position of the caret (cursor).</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>Gets the offset position of the caret (cursor).</para>

    </refsect2>

    <refsect2 id="method-atktext--get-character-extents">
      <title>atk.Text.get_character_extents</title>

      <programlisting><methodsynopsis language="python">
        <methodname>get_character_extents</methodname>
        <methodparam><parameter role="keyword">offset</parameter></methodparam>
        <methodparam><parameter role="keyword">x</parameter></methodparam>
        <methodparam><parameter role="keyword">y</parameter></methodparam>
        <methodparam><parameter role="keyword">width</parameter></methodparam>
        <methodparam><parameter role="keyword">height</parameter></methodparam>
        <methodparam><parameter role="keyword">coords</parameter></methodparam>
      </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">offset</parameter>&nbsp;:</term>
          <listitem><simpara>The offset of the text character for which bounding information is required.</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">x</parameter>&nbsp;:</term>
          <listitem><simpara>Pointer for the x cordinate of the bounding box</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">y</parameter>&nbsp;:</term>
          <listitem><simpara>Pointer for the y cordinate of the bounding box</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">width</parameter>&nbsp;:</term>
          <listitem><simpara>Pointer for the width of the bounding box</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">height</parameter>&nbsp;:</term>
          <listitem><simpara>Pointer for the height of the bounding box</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">coords</parameter>&nbsp;:</term>
          <listitem><simpara>specify whether coordinates are relative to the screen or widget window</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>Get the bounding box containing the glyph representing the character at 
          a particular text offset.</para>

    </refsect2>

    <refsect2 id="method-atktext--get-run-attributes">
      <title>atk.Text.get_run_attributes</title>

      <programlisting><methodsynopsis language="python">
        <methodname>get_run_attributes</methodname>
        <methodparam><parameter role="keyword">offset</parameter></methodparam>
        <methodparam><parameter role="keyword">start_offset</parameter></methodparam>
        <methodparam><parameter role="keyword">end_offset</parameter></methodparam>
      </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">offset</parameter>&nbsp;:</term>
          <listitem><simpara>the offset at which to get the attributes</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">start_offset</parameter>&nbsp;:</term>
          <listitem><simpara>the address to put the start offset of the range</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">end_offset</parameter>&nbsp;:</term>
          <listitem><simpara>the address to put the end offset of the range</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>an <literal>AtkAttributeSet</literal> which contains the attributes explicitly set
at <parameter>offset</parameter>. This <literal>AtkAttributeSet</literal> should be freed by a call to
<link linkend="method-atkattributeset--free"><methodname>AtkAttributeSet.free()</methodname></link>.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>Creates an <literal>AtkAttributeSet</literal> which consists of the attributes explicitly
      set at the position <parameter>offset</parameter> in the text. <parameter>start_offset</parameter> and <parameter>end_offset</parameter> are
      set to the start and end of the range around <parameter>offset</parameter> where the attributes are
      invariant. Note that <parameter>end_offset</parameter> is the offset of the first character
      after the range.  See the enum AtkTextAttribute for types of text 
      attributes that can be returned. Note that other attributes may also be 
      returned.</para>

    </refsect2>

    <refsect2 id="method-atktext--get-default-attributes">
      <title>atk.Text.get_default_attributes</title>

      <programlisting><methodsynopsis language="python">
        <methodname>get_default_attributes</methodname>
        <methodparam></methodparam>
      </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>an <literal>AtkAttributeSet</literal> which contains the default values of attributes.
at <parameter>offset</parameter>. This <literal>AtkAttributeSet</literal> should be freed by a call to
<link linkend="method-atkattributeset--free"><methodname>AtkAttributeSet.free()</methodname></link>.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>Creates an <literal>AtkAttributeSet</literal> which consists of the default values of
      attributes for the text. See the enum AtkTextAttribute for types of text 
      attributes that can be returned. Note that other attributes may also be 
      returned.</para>

    </refsect2>

    <refsect2 id="method-atktext--get-character-count">
      <title>atk.Text.get_character_count</title>

      <programlisting><methodsynopsis language="python">
        <methodname>get_character_count</methodname>
        <methodparam></methodparam>
      </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>the number of characters.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>Gets the character count.</para>

    </refsect2>

    <refsect2 id="method-atktext--get-offset-at-point">
      <title>atk.Text.get_offset_at_point</title>

      <programlisting><methodsynopsis language="python">
        <methodname>get_offset_at_point</methodname>
        <methodparam><parameter role="keyword">x</parameter></methodparam>
        <methodparam><parameter role="keyword">y</parameter></methodparam>
        <methodparam><parameter role="keyword">coords</parameter></methodparam>
      </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">x</parameter>&nbsp;:</term>
          <listitem><simpara>screen x-position of character</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">y</parameter>&nbsp;:</term>
          <listitem><simpara>screen y-position of character</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">coords</parameter>&nbsp;:</term>
          <listitem><simpara>specify whether coordinates are relative to the screen or
widget window</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>the offset to the character which is located at
the specified <parameter>x</parameter> and <parameter>y</parameter> coordinates.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>Gets the offset of the character located at coordinates <parameter>x</parameter> and <parameter>y</parameter>. <parameter>x</parameter> and <parameter>y</parameter>
      are interpreted as being relative to the screen or this widget's window
      depending on <parameter>coords</parameter>.</para>

    </refsect2>

    <refsect2 id="method-atktext--get-n-selections">
      <title>atk.Text.get_n_selections</title>

      <programlisting><methodsynopsis language="python">
        <methodname>get_n_selections</methodname>
        <methodparam></methodparam>
      </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>The number of selected regions, or -1 if a failure
  occurred.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>Gets the number of selected regions.</para>

    </refsect2>

    <refsect2 id="method-atktext--get-selection">
      <title>atk.Text.get_selection</title>

      <programlisting><methodsynopsis language="python">
        <methodname>get_selection</methodname>
        <methodparam><parameter role="keyword">selection_num</parameter></methodparam>
        <methodparam><parameter role="keyword">start_offset</parameter></methodparam>
        <methodparam><parameter role="keyword">end_offset</parameter></methodparam>
      </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">selection_num</parameter>&nbsp;:</term>
          <listitem><simpara>The selection number.  The selected regions are
assigned numbers that correspond to how far the region is from the
start of the text.  The selected region closest to the beginning
of the text region is assigned the number 0, etc.  Note that adding,
moving or deleting a selected region can change the numbering.</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">start_offset</parameter>&nbsp;:</term>
          <listitem><simpara>passes back the start position of the selected region</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">end_offset</parameter>&nbsp;:</term>
          <listitem><simpara>passes back the end position of (e.g. offset immediately past) 
the selected region</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>the selected text.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>Gets the text from the specified selection.</para>

    </refsect2>

    <refsect2 id="method-atktext--add-selection">
      <title>atk.Text.add_selection</title>

      <programlisting><methodsynopsis language="python">
        <methodname>add_selection</methodname>
        <methodparam><parameter role="keyword">start_offset</parameter></methodparam>
        <methodparam><parameter role="keyword">end_offset</parameter></methodparam>
      </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">start_offset</parameter>&nbsp;:</term>
          <listitem><simpara>the start position of the selected region</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">end_offset</parameter>&nbsp;:</term>
          <listitem><simpara>the offset of the first character after the selected region.</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara><literal>TRUE</literal> if success, <literal>FALSE</literal> otherwise</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>Adds a selection bounded by the specified offsets.</para>

    </refsect2>

    <refsect2 id="method-atktext--remove-selection">
      <title>atk.Text.remove_selection</title>

      <programlisting><methodsynopsis language="python">
        <methodname>remove_selection</methodname>
        <methodparam><parameter role="keyword">selection_num</parameter></methodparam>
      </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">selection_num</parameter>&nbsp;:</term>
          <listitem><simpara>The selection number.  The selected regions are
assigned numbers that correspond to how far the region is from the
start of the text.  The selected region closest to the beginning
of the text region is assigned the number 0, etc.  Note that adding,
moving or deleting a selected region can change the numbering.</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara><literal>TRUE</literal> if success, <literal>FALSE</literal> otherwise</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>Removes the specified selection.</para>

    </refsect2>

    <refsect2 id="method-atktext--set-selection">
      <title>atk.Text.set_selection</title>

      <programlisting><methodsynopsis language="python">
        <methodname>set_selection</methodname>
        <methodparam><parameter role="keyword">selection_num</parameter></methodparam>
        <methodparam><parameter role="keyword">start_offset</parameter></methodparam>
        <methodparam><parameter role="keyword">end_offset</parameter></methodparam>
      </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">selection_num</parameter>&nbsp;:</term>
          <listitem><simpara>The selection number.  The selected regions are
assigned numbers that correspond to how far the region is from the
start of the text.  The selected region closest to the beginning
of the text region is assigned the number 0, etc.  Note that adding,
moving or deleting a selected region can change the numbering.</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">start_offset</parameter>&nbsp;:</term>
          <listitem><simpara>the new start position of the selection</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">end_offset</parameter>&nbsp;:</term>
          <listitem><simpara>the new end position of (e.g. offset immediately past) 
the selection</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara><literal>TRUE</literal> if success, <literal>FALSE</literal> otherwise</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>Changes the start and end offset of the specified selection.</para>

    </refsect2>

    <refsect2 id="method-atktext--set-caret-offset">
      <title>atk.Text.set_caret_offset</title>

      <programlisting><methodsynopsis language="python">
        <methodname>set_caret_offset</methodname>
        <methodparam><parameter role="keyword">offset</parameter></methodparam>
      </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">offset</parameter>&nbsp;:</term>
          <listitem><simpara>position</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara><literal>TRUE</literal> if success, <literal>FALSE</literal> otherwise.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>Sets the caret (cursor) position to the specified <parameter>offset</parameter>.</para>

    </refsect2>

    <refsect2 id="method-atktext--get-range-extents">
      <title>atk.Text.get_range_extents</title>

      <programlisting><methodsynopsis language="python">
        <methodname>get_range_extents</methodname>
        <methodparam><parameter role="keyword">start_offset</parameter></methodparam>
        <methodparam><parameter role="keyword">end_offset</parameter></methodparam>
        <methodparam><parameter role="keyword">coord_type</parameter></methodparam>
        <methodparam><parameter role="keyword">rect</parameter></methodparam>
      </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">start_offset</parameter>&nbsp;:</term>
          <listitem><simpara>The offset of the first text character for which boundary 
       information is required.</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">end_offset</parameter>&nbsp;:</term>
          <listitem><simpara>The offset of the text character after the last character 
       for which boundary information is required.</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">coord_type</parameter>&nbsp;:</term>
          <listitem><simpara>Specify whether coordinates are relative to the screen or widget window.</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">rect</parameter>&nbsp;:</term>
          <listitem><simpara>A pointer to a AtkTextRectangle which is filled in by this function.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>Get the bounding box for text within the specified range.</para>

    </refsect2>

    <refsect2 id="method-atktext--get-bounded-ranges">
      <title>atk.Text.get_bounded_ranges</title>

      <programlisting><methodsynopsis language="python">
        <methodname>get_bounded_ranges</methodname>
        <methodparam><parameter role="keyword">rect</parameter></methodparam>
        <methodparam><parameter role="keyword">coord_type</parameter></methodparam>
        <methodparam><parameter role="keyword">x_clip_type</parameter></methodparam>
        <methodparam><parameter role="keyword">y_clip_type</parameter></methodparam>
      </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">rect</parameter>&nbsp;:</term>
          <listitem><simpara>An AtkTextRectagle giving the dimensions of the bounding box.</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">coord_type</parameter>&nbsp;:</term>
          <listitem><simpara>Specify whether coordinates are relative to the screen or widget window.</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">x_clip_type</parameter>&nbsp;:</term>
          <listitem><simpara>Specify the horizontal clip type.</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">y_clip_type</parameter>&nbsp;:</term>
          <listitem><simpara>Specify the vertical clip type.</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>Array of AtkTextRange. The last element of the array returned 
         by this function will be NULL.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>Get the ranges of text in the specified bounding box.</para>

    </refsect2>

  </refsect1>

  <refsect1>
    <title>Signals</title>

    <refsect2 id="signal-atktext--text-attributes-changed">
      <title>The "text-attributes-changed" atk.Text Signal</title>

      <programlisting><methodsynopsis language="python"><methodname>callback</methodname>
            <methodparam><parameter>atktext</parameter></methodparam>
            <methodparam><parameter>user_param1</parameter></methodparam>
            <methodparam><parameter>...</parameter></methodparam>
          </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><parameter>atktext</parameter>&nbsp;:</term>
          <listitem><simpara>the object which received the signal.</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter>user_param1</parameter>&nbsp;:</term>
          <listitem><simpara>the first user parameter (if any) specified
          with the <link
          linkend="method-gobject--connect"><methodname>connect</methodname>()</link>
          method</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter>...</parameter>&nbsp;:</term>
          <listitem><simpara>additional user parameters (if any)</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>The "text-attributes-changed" signal is emitted when the text attributes of 
the text of an object which implements AtkText changes.</para>

    </refsect2>

    <refsect2 id="signal-atktext--text-caret-moved">
      <title>The "text-caret-moved" atk.Text Signal</title>

      <programlisting><methodsynopsis language="python"><methodname>callback</methodname>
            <methodparam><parameter>atktext</parameter></methodparam>
            <methodparam><parameter>arg1</parameter></methodparam>
            <methodparam><parameter>user_param1</parameter></methodparam>
            <methodparam><parameter>...</parameter></methodparam>
          </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><parameter>atktext</parameter>&nbsp;:</term>
          <listitem><simpara>the object which received the signal.</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter>arg1</parameter>&nbsp;:</term>
          <listitem><simpara>The new position of the text caret.</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter>user_param1</parameter>&nbsp;:</term>
          <listitem><simpara>the first user parameter (if any) specified
          with the <link
          linkend="method-gobject--connect"><methodname>connect</methodname>()</link>
          method</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter>...</parameter>&nbsp;:</term>
          <listitem><simpara>additional user parameters (if any)</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>The "text-caret-moved" signal is emitted when the caret position of 
the text of an object which implements AtkText changes.</para>

    </refsect2>

    <refsect2 id="signal-atktext--text-changed">
      <title>The "text-changed" atk.Text Signal</title>

      <programlisting><methodsynopsis language="python"><methodname>callback</methodname>
            <methodparam><parameter>atktext</parameter></methodparam>
            <methodparam><parameter>arg1</parameter></methodparam>
            <methodparam><parameter>arg2</parameter></methodparam>
            <methodparam><parameter>user_param1</parameter></methodparam>
            <methodparam><parameter>...</parameter></methodparam>
          </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><parameter>atktext</parameter>&nbsp;:</term>
          <listitem><simpara>the object which received the signal.</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter>arg1</parameter>&nbsp;:</term>
          <listitem><simpara>The position of the insertion or deletion.</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter>arg2</parameter>&nbsp;:</term>
          <listitem><simpara>The length of text inserted or deleted.</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter>user_param1</parameter>&nbsp;:</term>
          <listitem><simpara>the first user parameter (if any) specified
          with the <link
          linkend="method-gobject--connect"><methodname>connect</methodname>()</link>
          method</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter>...</parameter>&nbsp;:</term>
          <listitem><simpara>additional user parameters (if any)</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>The "text-changed" signal is emitted when the text of the object which 
implements the AtkText interface changes, This signal will have a detail 
which is either "insert" or "delete" which identifies whether the text 
change was an insertion or a deletion</para>

    </refsect2>

    <refsect2 id="signal-atktext--text-selection-changed">
      <title>The "text-selection-changed" atk.Text Signal</title>

      <programlisting><methodsynopsis language="python"><methodname>callback</methodname>
            <methodparam><parameter>atktext</parameter></methodparam>
            <methodparam><parameter>user_param1</parameter></methodparam>
            <methodparam><parameter>...</parameter></methodparam>
          </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><parameter>atktext</parameter>&nbsp;:</term>
          <listitem><simpara>the object which received the signal.</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter>user_param1</parameter>&nbsp;:</term>
          <listitem><simpara>the first user parameter (if any) specified
          with the <link
          linkend="method-gobject--connect"><methodname>connect</methodname>()</link>
          method</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter>...</parameter>&nbsp;:</term>
          <listitem><simpara>additional user parameters (if any)</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>The "text-selection-changed" signal is emitted when the selected text of 
an object which implements AtkText changes.</para>

    </refsect2>

</refsect1>

</refentry>
