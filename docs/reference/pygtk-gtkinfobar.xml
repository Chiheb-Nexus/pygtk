<?xml version="1.0" standalone="no"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<refentry id="class-gtkinfobar">
  <refnamediv>
    <refname>gtk.InfoBar</refname>
    <refpurpose></refpurpose>
  </refnamediv>

  <refsect1>
    <title>Synopsis</title>

    <classsynopsis language="python">
      <ooclass><classname>gtk.InfoBar</classname></ooclass>
      <ooclass><classname><link linkend="class-gtkhbox">gtk.HBox</link></classname></ooclass>
      <constructorsynopsis language="python">
        <methodname><link linkend="constructor-gtkinfobar">gtk.InfoBar</link></methodname>
        <methodparam></methodparam>
      </constructorsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-gtkinfobar--get-action-area">get_action_area</link></methodname>
        <methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-gtkinfobar--get-content-area">get_content_area</link></methodname>
        <methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-gtkinfobar--add-action-widget">add_action_widget</link></methodname>
        <methodparam><parameter role="keyword">child</parameter></methodparam>
        <methodparam><parameter role="keyword">response_id</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-gtkinfobar--add-button">add_button</link></methodname>
        <methodparam><parameter role="keyword">button_text</parameter></methodparam>
        <methodparam><parameter role="keyword">response_id</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-gtkinfobar--add-buttons">add_buttons</link></methodname>
        <methodparam><parameter role="keyword">first_button_text</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-gtkinfobar--set-response-sensitive">set_response_sensitive</link></methodname>
        <methodparam><parameter role="keyword">response_id</parameter></methodparam>
        <methodparam><parameter role="keyword">setting</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-gtkinfobar--set-default-response">set_default_response</link></methodname>
        <methodparam><parameter role="keyword">response_id</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-gtkinfobar--response">response</link></methodname>
        <methodparam><parameter role="keyword">response_id</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-gtkinfobar--set-message-type">set_message_type</link></methodname>
        <methodparam><parameter role="keyword">message_type</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-gtkinfobar--get-message-type">get_message_type</link></methodname>
        <methodparam></methodparam>
      </methodsynopsis>
    </classsynopsis>

  </refsect1>

  <refsect1>
    <title>Ancestry</title>

<synopsis>+-- <link linkend="class-gobject">GObject</link>
  +-- <link linkend="class-gtkobject">gtk.Object</link>
    +-- <link linkend="class-gtkwidget">gtk.Widget</link>
      +-- <link linkend="class-gtkcontainer">gtk.Container</link>
        +-- <link linkend="class-gtkbox">gtk.Box</link>
          +-- <link linkend="class-gtkhbox">gtk.HBox</link>
            +-- <link linkend="class-gtkinfobar">gtk.InfoBar</link>
</synopsis>

  </refsect1>

  <refsect1>
    <title>Constructor</title>

    <programlisting>
      <constructorsynopsis language="python">
        <methodname><link linkend="constructor-gtkinfobar">gtk.InfoBar</link></methodname>
        <methodparam></methodparam>
      </constructorsynopsis>
    </programlisting>
    <variablelist>
      <varlistentry>
        <term><emphasis>Returns</emphasis>&nbsp;:</term>
        <listitem><simpara>a new <link linkend="class-gtkinfobar"><classname>gtk.InfoBar</classname></link> object</simpara></listitem>
      </varlistentry>
    </variablelist>
    <note>
      <para>This constructor is available in PyGTK 2.18 and above.</para>
    </note>

    <para>Creates a new <link linkend="class-gtkinfobar"><classname>gtk.InfoBar</classname></link> object.</para>


  </refsect1>

  <refsect1>
    <title>Methods</title>

    <refsect2 id="method-gtkinfobar--get-action-area">
      <title>gtk.InfoBar.get_action_area</title>

      <programlisting>
        <methodsynopsis language="python">
          <methodname>get_action_area</methodname>
          <methodparam></methodparam>
        </methodsynopsis>
      </programlisting>
      <variablelist>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>the action area</simpara></listitem>
        </varlistentry>
      </variablelist>
      <note>
        <para>This method is available in PyGTK 2.18 and above.</para>
      </note>

      <para>The <methodname>get_action_area</methodname>() method returns the action area of <parameter>info_bar</parameter>.</para>
    </refsect2>

    <refsect2 id="method-gtkinfobar--get-content-area">
      <title>gtk.InfoBar.get_content_area</title>

      <programlisting>
        <methodsynopsis language="python">
          <methodname>get_content_area</methodname>
          <methodparam></methodparam>
        </methodsynopsis>
      </programlisting>
      <variablelist>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>the content area</simpara></listitem>
        </varlistentry>
      </variablelist>
      <note>
        <para>This method is available in PyGTK 2.18 and above.</para>
      </note>

      <para>The <methodname>get_content_area</methodname>() method returns the content area of <parameter>info_bar</parameter>.</para>
    </refsect2>

    <refsect2 id="method-gtkinfobar--add-action-widget">
      <title>gtk.InfoBar.add_action_widget</title>

      <programlisting>
        <methodsynopsis language="python">
          <methodname>add_action_widget</methodname>
          <methodparam><parameter role="keyword">child</parameter></methodparam>
          <methodparam><parameter role="keyword">response_id</parameter></methodparam>
        </methodsynopsis>
      </programlisting>
      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">child</parameter>&nbsp;:</term>
          <listitem><simpara>an activatable widget</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">response_id</parameter>&nbsp;:</term>
          <listitem><simpara>response ID for <parameter>child</parameter></simpara></listitem>
        </varlistentry>
      </variablelist>
      <note>
        <para>This method is available in PyGTK 2.18 and above.</para>
      </note>

      <para>Add an activatable widget to the action area of a <link linkend="class-gtkinfobar"><classname>gtk.InfoBar</classname></link>,
connecting a signal handler that will emit the <link linkend="class-gtkinfobar"><classname>gtk.InfoBar</classname></link>::response
signal on the message area when the widget is activated. The widget
is appended to the end of the message areas action area.</para>
    </refsect2>

    <refsect2 id="method-gtkinfobar--add-button">
      <title>gtk.InfoBar.add_button</title>

      <programlisting>
        <methodsynopsis language="python">
          <methodname>add_button</methodname>
          <methodparam><parameter role="keyword">button_text</parameter></methodparam>
          <methodparam><parameter role="keyword">response_id</parameter></methodparam>
        </methodsynopsis>
      </programlisting>
      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">button_text</parameter>&nbsp;:</term>
          <listitem><simpara>text of button, or stock ID</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">response_id</parameter>&nbsp;:</term>
          <listitem><simpara>response ID for the button</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>the button widget that was added</simpara></listitem>
        </varlistentry>
      </variablelist>
      <note>
        <para>This method is available in PyGTK 2.18 and above.</para>
      </note>

      <para>Adds a button with the given text (or a stock button, if button_text
is a stock ID) and sets things up so that clicking the button will emit
the "response" signal with the given response_id. The button is appended
to the end of the info bars's action area. The button widget is
returned, but usually you don't need it.</para>
    </refsect2>

    <refsect2 id="method-gtkinfobar--add-buttons">
      <title>gtk.InfoBar.add_buttons</title>

      <programlisting>
        <methodsynopsis language="python">
          <methodname>add_buttons</methodname>
          <methodparam><parameter role="keyword">first_button_text</parameter></methodparam>
        </methodsynopsis>
      </programlisting>
      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">first_button_text</parameter>&nbsp;:</term>
          <listitem><simpara>button text or stock ID</simpara></listitem>
        </varlistentry>
      </variablelist>
      <note>
        <para>This method is available in PyGTK 2.18 and above.</para>
      </note>

      <para>Adds more buttons, same as calling <link linkend="method-gtkinfobar--add-button"><methodname>gtk.InfoBar.add_button</methodname></link>
repeatedly. The variable argument list should be <literal>NULL</literal>-terminated
as with         <function>gtk_info_bar_new_with_buttons()</function>. Each button must have both
text and response ID.</para>
    </refsect2>

    <refsect2 id="method-gtkinfobar--set-response-sensitive">
      <title>gtk.InfoBar.set_response_sensitive</title>

      <programlisting>
        <methodsynopsis language="python">
          <methodname>set_response_sensitive</methodname>
          <methodparam><parameter role="keyword">response_id</parameter></methodparam>
          <methodparam><parameter role="keyword">setting</parameter></methodparam>
        </methodsynopsis>
      </programlisting>
      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">response_id</parameter>&nbsp;:</term>
          <listitem><simpara>a response ID</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter role="keyword">setting</parameter>&nbsp;:</term>
          <listitem><simpara>TRUE for sensitive</simpara></listitem>
        </varlistentry>
      </variablelist>
      <note>
        <para>This method is available in PyGTK 2.18 and above.</para>
      </note>

      <para>Calls gtk_widget_set_sensitive (widget, setting) for each
widget in the info bars's action area with the given response_id.
A convenient way to sensitize/desensitize dialog buttons.</para>
    </refsect2>

    <refsect2 id="method-gtkinfobar--set-default-response">
      <title>gtk.InfoBar.set_default_response</title>

      <programlisting>
        <methodsynopsis language="python">
          <methodname>set_default_response</methodname>
          <methodparam><parameter role="keyword">response_id</parameter></methodparam>
        </methodsynopsis>
      </programlisting>
      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">response_id</parameter>&nbsp;:</term>
          <listitem><simpara>a response ID</simpara></listitem>
        </varlistentry>
      </variablelist>
      <note>
        <para>This method is available in PyGTK 2.18 and above.</para>
      </note>

      <para>The <methodname>set_default_response</methodname>() method sets the last widget in the info bar's action area with
the given response_id as the default widget for the dialog.
Pressing "Enter" normally activates the default widget.
      </para>
      <para>
Note that this function currently requires <parameter>info_bar</parameter> to
be added to a widget hierarchy.</para>
    </refsect2>

    <refsect2 id="method-gtkinfobar--response">
      <title>gtk.InfoBar.response</title>

      <programlisting>
        <methodsynopsis language="python">
          <methodname>response</methodname>
          <methodparam><parameter role="keyword">response_id</parameter></methodparam>
        </methodsynopsis>
      </programlisting>
      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">response_id</parameter>&nbsp;:</term>
          <listitem><simpara>a response ID</simpara></listitem>
        </varlistentry>
      </variablelist>
      <note>
        <para>This method is available in PyGTK 2.18 and above.</para>
      </note>

      <para>Emits the 'response' signal with the given <parameter>response_id</parameter>.</para>
    </refsect2>

    <refsect2 id="method-gtkinfobar--set-message-type">
      <title>gtk.InfoBar.set_message_type</title>

      <programlisting>
        <methodsynopsis language="python">
          <methodname>set_message_type</methodname>
          <methodparam><parameter role="keyword">message_type</parameter></methodparam>
        </methodsynopsis>
      </programlisting>
      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">message_type</parameter>&nbsp;:</term>
          <listitem><simpara>a <literal>GtkMessageType</literal></simpara></listitem>
        </varlistentry>
      </variablelist>
      <note>
        <para>This method is available in PyGTK 2.18 and above.</para>
      </note>

      <para>The <methodname>set_message_type</methodname>() method sets the message type of the message area.
GTK+ uses this type to determine what color to use
when drawing the message area.</para>
    </refsect2>

    <refsect2 id="method-gtkinfobar--get-message-type">
      <title>gtk.InfoBar.get_message_type</title>

      <programlisting>
        <methodsynopsis language="python">
          <methodname>get_message_type</methodname>
          <methodparam></methodparam>
        </methodsynopsis>
      </programlisting>
      <variablelist>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>the message type of the message area.</simpara></listitem>
        </varlistentry>
      </variablelist>
      <note>
        <para>This method is available in PyGTK 2.18 and above.</para>
      </note>

      <para>The <methodname>get_message_type</methodname>() method returns the message type of the message area.</para>
    </refsect2>

  </refsect1>

</refentry>
